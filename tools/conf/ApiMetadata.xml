<?xml version="1.0" encoding="UTF-8"?>
<metadata versionNo="20140725">
<structs>
<struct>
<name>DdTopMenuDetailVO</name>
<desc>点菜订单详情</desc>
<props>
<prop>
<name>contact</name>
<type>String</type>
<level>Basic</level>
<desc>联系人</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>菜单创建时间</desc>
</prop>
<prop>
<name>dining_time</name>
<type>Date</type>
<level>Basic</level>
<desc>就餐时间</desc>
</prop>
<prop>
<name>items</name>
<type>DdItemVO</type>
<level>Object Array</level>
<desc>点菜单菜品列表</desc>
</prop>
<prop>
<name>menu_id</name>
<type>Number</type>
<level>Basic</level>
<desc>菜单编码</desc>
</prop>
<prop>
<name>mobile</name>
<type>String</type>
<level>Basic</level>
<desc>手机号</desc>
</prop>
<prop>
<name>note</name>
<type>String</type>
<level>Basic</level>
<desc>买家备注</desc>
</prop>
<prop>
<name>out_store_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部门店id</desc>
</prop>
<prop>
<name>people</name>
<type>Number</type>
<level>Basic</level>
<desc>就餐人数</desc>
</prop>
<prop>
<name>real_price</name>
<type>Price</type>
<level>Basic</level>
<desc>现价：小于等于原价</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态：</desc>
</prop>
<prop>
<name>store_id</name>
<type>String</type>
<level>Basic</level>
<desc>淘点点门店编码</desc>
</prop>
<prop>
<name>table_code</name>
<type>String</type>
<level>Basic</level>
<desc>桌台编码</desc>
</prop>
<prop>
<name>table_name</name>
<type>String</type>
<level>Basic</level>
<desc>桌台名称</desc>
</prop>
<prop>
<name>total_price</name>
<type>Price</type>
<level>Basic</level>
<desc>原价</desc>
</prop>
</props>
</struct>
<struct>
<name>UserCredit</name>
<desc>用户信用</desc>
<props>
<prop>
<name>good_num</name>
<type>Number</type>
<level>Basic</level>
<desc>收到的好评总条数。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>信用等级（是根据score生成的），信用等级：淘宝会员在淘宝网上的信用度，分为20个级别，级别如：level = 1 时，表示一心；level = 2 时，表示二心</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<desc>信用总分（“好评”加一分，“中评”不加分，“差评”扣一分。分越高，等级越高）</desc>
</prop>
<prop>
<name>total_num</name>
<type>Number</type>
<level>Basic</level>
<desc>收到的评价总条数。取值范围:大于零的整数</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemBatch</name>
<desc>批次库存查询结果记录</desc>
<props>
<prop>
<name>batch_code</name>
<type>String</type>
<level>Basic</level>
<desc>批次编号</desc>
</prop>
<prop>
<name>creator</name>
<type>String</type>
<level>Basic</level>
<desc>创建者</desc>
</prop>
<prop>
<name>defect_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>残次数量</desc>
</prop>
<prop>
<name>due_date</name>
<type>Date</type>
<level>Basic</level>
<desc>到期时间</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>guarantee_period</name>
<type>String</type>
<level>Basic</level>
<desc>保质期</desc>
</prop>
<prop>
<name>guarantee_unit</name>
<type>Number</type>
<level>Basic</level>
<desc>天（单位）</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品批次记录id</desc>
</prop>
<prop>
<name>is_deleted</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除。0：正常 1：删除</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>last_modifier</name>
<type>String</type>
<level>Basic</level>
<desc>最后修改者</desc>
</prop>
<prop>
<name>produce_area</name>
<type>String</type>
<level>Basic</level>
<desc>产地</desc>
</prop>
<prop>
<name>produce_code</name>
<type>String</type>
<level>Basic</level>
<desc>生产编号</desc>
</prop>
<prop>
<name>produce_date</name>
<type>Date</type>
<level>Basic</level>
<desc>生产日期</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>receive_date</name>
<type>Date</type>
<level>Basic</level>
<desc>接受日期</desc>
</prop>
<prop>
<name>remarks</name>
<type>String</type>
<level>Basic</level>
<desc>描述</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。item_batch_status_open:开放 item_batch_status_lock:冻结 item_batch_status_invalid:无效</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>存储类型</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
<prop>
<name>version</name>
<type>Number</type>
<level>Basic</level>
<desc>版本</desc>
</prop>
</props>
</struct>
<struct>
<name>DdItemVO</name>
<desc>菜品视图对象</desc>
<props>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>用户点菜份数</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘点点菜品id</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>菜品名称</desc>
</prop>
<prop>
<name>out_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部菜品编号</desc>
</prop>
<prop>
<name>out_sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部skuid</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>菜品出售价格</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘点点skuid</desc>
</prop>
<prop>
<name>sku_name</name>
<type>String</type>
<level>Basic</level>
<desc>sku名称</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>点菜单菜品状态</desc>
</prop>
</props>
</struct>
<struct>
<name>Location</name>
<desc>用户地址</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址，最大256个字节（128个中文）</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>所在城市（中文名称）</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家名称</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<desc>区/县（只适用于物流API）</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<desc>所在省份（中文名称）</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>User</name>
<desc>用户</desc>
<props>
<prop>
<name>alipay_bind</name>
<type>String</type>
<level>Basic</level>
<desc>有无绑定。可选值:bind(绑定),notbind(未绑定)</desc>
</prop>
<prop>
<name>auto_repost</name>
<type>String</type>
<level>Basic</level>
<desc>是否受限制。可选值:limited(受限制),unlimited(不受限)</desc>
</prop>
<prop>
<name>avatar</name>
<type>String</type>
<level>Basic</level>
<desc>用户头像地址</desc>
</prop>
<prop>
<name>birthday</name>
<type>Date</type>
<level>Basic</level>
<desc>生日</desc>
</prop>
<prop>
<name>buyer_credit</name>
<type>UserCredit</type>
<level>Object</level>
<desc>买家信用</desc>
</prop>
<prop>
<name>consumer_protection</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否参加消保</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>用户注册时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<desc>联系人email</desc>
</prop>
<prop>
<name>has_more_pic</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否购买多图服务。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>has_shop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户作为卖家是否开过店</desc>
</prop>
<prop>
<name>has_sub_stock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示用户是否具备修改商品减库存逻辑的权限（一共有拍下减库存和付款减库存两种逻辑） 值含义： 1）true：是 2）false：否。</desc>
</prop>
<prop>
<name>is_golden_seller</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否是金牌卖家</desc>
</prop>
<prop>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否24小时闪电发货(实物类)</desc>
</prop>
<prop>
<name>item_img_num</name>
<type>Number</type>
<level>Basic</level>
<desc>可上传商品图片数量</desc>
</prop>
<prop>
<name>item_img_size</name>
<type>Number</type>
<level>Basic</level>
<desc>单张商品图片最大容量(商品主图大小)。单位:k</desc>
</prop>
<prop>
<name>last_visit</name>
<type>Date</type>
<level>Basic</level>
<desc>最近登陆时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>liangpin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是无名良品用户，true or false</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>用户当前居住地公开信息。如：location.city获取其中的city数据</desc>
</prop>
<prop>
<name>magazine_subscribe</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否订阅了淘宝天下杂志</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
<prop>
<name>online_gaming</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否为网游用户，属于隐私信息，需要登陆才能查看自己的。 目前仅供taobao.user.get使用</desc>
</prop>
<prop>
<name>promoted_type</name>
<type>String</type>
<level>Basic</level>
<desc>有无实名认证。可选值:authentication(实名认证),not authentication(没有认证)</desc>
</prop>
<prop>
<name>prop_img_num</name>
<type>Number</type>
<level>Basic</level>
<desc>可上传属性图片数量</desc>
</prop>
<prop>
<name>prop_img_size</name>
<type>Number</type>
<level>Basic</level>
<desc>单张销售属性图片最大容量（非主图的商品图片和商品属性图片）。单位:k</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>UserCredit</type>
<level>Object</level>
<desc>卖家信用</desc>
</prop>
<prop>
<name>sex</name>
<type>String</type>
<level>Basic</level>
<desc>性别。可选值:m(男),f(女)</desc>
</prop>
<prop>
<name>sign_food_seller_promise</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否签署食品卖家承诺协议</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),inactive(未激活),delete(删除),reeze(冻结),supervise(监管)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>用户类型。可选值:B(B商家),C(C商家)</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>用户字符串ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户数字ID</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>String</type>
<level>Basic</level>
<desc>用户参与垂直市场类型。shoes表示鞋城垂直市场用户，3C表示3C垂直市场用户。多个类型之间用","分隔。如：一个用户既是3C用户又是鞋城用户，那么这个字段返回就是"3C,shoes"。如果用户不是垂直市场用户，此字段返回为""。</desc>
</prop>
<prop>
<name>vip_info</name>
<type>String</type>
<level>Basic</level>
<desc>用户的全站vip信息，可取值如下：c(普通会员),asso_vip(荣誉会员)，vip1,vip2,vip3,vip4,vip5,vip6(六个等级的正式vip会员)，共8种取值，其中asso_vip是由vip会员衰退而成，与主站上的vip0对应。</desc>
</prop>
</props>
</struct>
<struct>
<name>UserInfo</name>
<desc>图片空间的用户信息获取，包括订购容量等</desc>
<props>
<prop>
<name>available_space</name>
<type>String</type>
<level>Basic</level>
<desc>用户的可用容量，即订购量与免费量之和</desc>
</prop>
<prop>
<name>free_space</name>
<type>String</type>
<level>Basic</level>
<desc>图片空间的免费容量</desc>
</prop>
<prop>
<name>order_expiry_date</name>
<type>String</type>
<level>Basic</level>
<desc>图片空间的订购有效期</desc>
</prop>
<prop>
<name>order_space</name>
<type>String</type>
<level>Basic</level>
<desc>用户订购的图片空间容量</desc>
</prop>
<prop>
<name>remaining_space</name>
<type>String</type>
<level>Basic</level>
<desc>剩余的图片空间容量</desc>
</prop>
<prop>
<name>used_space</name>
<type>String</type>
<level>Basic</level>
<desc>已使用的图片空间容量</desc>
</prop>
<prop>
<name>water_mark</name>
<type>String</type>
<level>Basic</level>
<desc>用户自定义的水印参数，通过"|"分割开，如果用户没有定义则为"" 
具体水印参数组合方法，用"|"分开，顺序按"是否全局设置|水印文字|是否文字水印优先|透明度|字体|字体大小|字体是否加粗|字体是否斜体|字体是否加下划线|字体颜色|旋转角度|是否带阴影|水印位置|图片水印URL|reference水印相对位置" reference取值有左上（1）/中间（3）/右下（2）,其中的null代表为空</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductImg</name>
<desc>产品图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品图片ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductBooks</name>
<desc>图书类目导入返回结果</desc>
<props>
<prop>
<name>author</name>
<type>String</type>
<level>Basic</level>
<desc>作者/著者</desc>
</prop>
<prop>
<name>bar_code</name>
<type>String</type>
<level>Basic</level>
<desc>条形码，13位，9787开头</desc>
</prop>
<prop>
<name>book_name</name>
<type>String</type>
<level>Basic</level>
<desc>完整的图书名称</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>isbn</name>
<type>String</type>
<level>Basic</level>
<desc>ISBN号</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>图书价格，若有多个，则以';'号分隔</desc>
</prop>
</props>
</struct>
<struct>
<name>DdTopPagination</name>
<desc>翻页数据对象</desc>
<props>
<prop>
<name>list</name>
<type>DdTopReservedVO</type>
<level>Object Array</level>
<desc>结果列表</desc>
</prop>
<prop>
<name>page_num</name>
<type>Number</type>
<level>Basic</level>
<desc>翻页游码</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>页面大小</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</prop>
<prop>
<name>view_count</name>
<type>Number</type>
<level>Basic</level>
<desc>可返回的记录数</desc>
</prop>
</props>
</struct>
<struct>
<name>DdTopReservedVO</name>
<desc>淘点点预定订单列表对象</desc>
<props>
<prop>
<name>auction_position</name>
<type>Number</type>
<level>Basic</level>
<desc>桌台类型：大厅|包厢</desc>
</prop>
<prop>
<name>auction_serve_max</name>
<type>Number</type>
<level>Basic</level>
<desc>桌子容纳的最大人数</desc>
</prop>
<prop>
<name>auction_serve_min</name>
<type>Number</type>
<level>Basic</level>
<desc>桌位容纳的最小人数</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>city</name>
<type>Number</type>
<level>Basic</level>
<desc>城市编码</desc>
</prop>
<prop>
<name>deposit</name>
<type>Number</type>
<level>Basic</level>
<desc>订金，以分为单位</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘点点预定单id</desc>
</prop>
<prop>
<name>menu_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>点菜单订单id</desc>
</prop>
<prop>
<name>people_count</name>
<type>Number</type>
<level>Basic</level>
<desc>预定人数</desc>
</prop>
<prop>
<name>reserve_time</name>
<type>Date</type>
<level>Basic</level>
<desc>预定时间</desc>
</prop>
<prop>
<name>seller_mark</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家标注</desc>
</prop>
<prop>
<name>seller_memo</name>
<type>String</type>
<level>Basic</level>
<desc>卖家备注</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单状态</desc>
</prop>
<prop>
<name>store_id</name>
<type>String</type>
<level>Basic</level>
<desc>淘点点商户编码</desc>
</prop>
<prop>
<name>store_name</name>
<type>String</type>
<level>Basic</level>
<desc>商户名称</desc>
</prop>
<prop>
<name>user_memo</name>
<type>String</type>
<level>Basic</level>
<desc>买家备注</desc>
</prop>
<prop>
<name>user_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人称呼</desc>
</prop>
<prop>
<name>user_phone</name>
<type>String</type>
<level>Basic</level>
<desc>用户电话</desc>
</prop>
</props>
</struct>
<struct>
<name>Product</name>
<desc>产品结构</desc>
<props>
<prop>
<name>barcode_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品条码信息，仅在taobao.products.search接口且商城可用</desc>
</prop>
<prop>
<name>binds</name>
<type>String</type>
<level>Basic</level>
<desc>产品的非关键属性列表.格式:pid:vid;pid:vid.</desc>
</prop>
<prop>
<name>binds_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的非关键属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品类目名称</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品类目ID.必须是叶子类目ID</desc>
</prop>
<prop>
<name>collect_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的collect次数（不提供数据，返回0)</desc>
</prop>
<prop>
<name>commodity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品类ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>cspu_feature</name>
<type>String</type>
<level>Basic</level>
<desc>标识是否为达尔文体系下的产品 。 
如果为空表示是非达尔文体系下的产品 
如果cspu:0 表示是达尔文体系下的产品，有cspu正在待小二审核，但不能发布商品。 
如果cspu:1 表示是达尔文体系下的产品，且有小二确认的cspu，能发布商品</desc>
</prop>
<prop>
<name>customer_props</name>
<type>String</type>
<level>Basic</level>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2 例如：“20000:优衣库”，表示“品牌:优衣库”</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>产品的描述.最大25000个字节</desc>
</prop>
<prop>
<name>is_suite_effective</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标识套装产品是否有效，无效的套装产品需要重新发布</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的级别level</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品名称</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部产品ID</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>产品对应的图片路径</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>产品的主图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>产品的市场价.单位为元.精确到2位小数;如:200.07</desc>
</prop>
<prop>
<name>product_extra_infos</name>
<type>ProductExtraInfo</type>
<level>Object Array</level>
<desc>产品扩展信息</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>product_imgs</name>
<type>ProductImg</type>
<level>Object Array</level>
<desc>产品的子图片.目前最多支持4张。fields中设置为product_imgs.id、product_imgs.url、product_imgs.position 等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>product_prop_imgs</name>
<type>ProductPropImg</type>
<level>Object Array</level>
<desc>产品的属性图片.比如说黄色对应的产品图片,绿色对应的产品图片。fields中设置为product_prop_imgs.id、  
product_prop_imgs.props、product_prop_imgs.url、product_prop_imgs.position等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>产品的关键属性列表.格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的关键属性字符串列表.比如:品牌:诺基亚;型号:N73(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>rate_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的评分次数</desc>
</prop>
<prop>
<name>sale_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的销售量</desc>
</prop>
<prop>
<name>sale_props</name>
<type>String</type>
<level>Basic</level>
<desc>产品的销售属性列表.格式:pid:vid;pid:vid</desc>
</prop>
<prop>
<name>sale_props_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的销售属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>sell_pt</name>
<type>String</type>
<level>Basic</level>
<desc>产品卖点描述，长度限制20个汉字</desc>
</prop>
<prop>
<name>shop_price</name>
<type>String</type>
<level>Basic</level>
<desc>产品的店内价格</desc>
</prop>
<prop>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<desc>产品的标准价格</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>当前状态(0 商家确认 1 屏蔽 3 小二确认 2 未确认 -1 删除)</desc>
</prop>
<prop>
<name>suite_items_str</name>
<type>String</type>
<level>Basic</level>
<desc>套装产品关联的子规格,同时该字段不为空标识该产品是套装产品</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模板ID</desc>
</prop>
<prop>
<name>tsc</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝标准产品编码</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>Number</type>
<level>Basic</level>
<desc>垂直市场,如：3（3C），4（鞋城）</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundRemindTimeout</name>
<desc>退款超时结构</desc>
<props>
<prop>
<name>exist_timeout</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在超时。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>remind_type</name>
<type>Number</type>
<level>Basic</level>
<desc>提醒的类型（退款详情中提示信息的类型）</desc>
</prop>
<prop>
<name>timeout</name>
<type>Date</type>
<level>Basic</level>
<desc>超时时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundMessage</name>
<desc>留言/凭证数据结构</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>留言内容。最大长度: 400个字节</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>留言创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>留言编号</desc>
</prop>
<prop>
<name>message_type</name>
<type>String</type>
<level>Basic</level>
<desc>退款类型：NORMAL（普通留言），RETURN_GOODS_APPROVED（卖家留退货地址时留言）；如果为RETURN_GOODS_APPROVED，则退款留言中有卖家收货地址</desc>
</prop>
<prop>
<name>owner_id</name>
<type>Number</type>
<level>Basic</level>
<desc>留言者编号</desc>
</prop>
<prop>
<name>owner_nick</name>
<type>String</type>
<level>Basic</level>
<desc>留言者昵称</desc>
</prop>
<prop>
<name>owner_role</name>
<type>String</type>
<level>Basic</level>
<desc>留言者身份
1代表买家，2代表卖家，3代表小二</desc>
</prop>
<prop>
<name>pic_urls</name>
<type>PicUrl</type>
<level>Object Array</level>
<desc>凭证附件地址（图片）</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款编号。</desc>
</prop>
</props>
</struct>
<struct>
<name>Order</name>
<desc>订单结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>手工调整金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>bind_oid</name>
<type>Number</type>
<level>Basic</level>
<desc>捆绑的子订单号，表示该子订单要和捆绑的子订单一起发货，用于卖家子订单捆绑发货</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易商品对应的类目ID</desc>
</prop>
<prop>
<name>consign_time</name>
<type>String</type>
<level>Basic</level>
<desc>子订单发货时间，当卖家对订单进行了多次发货，子订单的发货时间和主订单的发货时间可能不一样了，那么就需要以子订单的时间为准。（没有进行多次发货的订单，主订单的发货时间和子订单的发货时间都一样）</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>子订单级订单优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>divide_order_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分摊之后的实付金额</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>子订单的交易结束时间 
说明：子订单有单独的结束时间，与主订单的结束时间可能有所不同，在有退款发起的时候或者是主订单分阶段付款的时候，子订单的结束时间会早于主订单的结束时间，所以开放这个字段便于订单结束状态的判断</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品的字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>invoice_no</name>
<type>String</type>
<level>Basic</level>
<desc>子订单所在包裹的运单号</desc>
</prop>
<prop>
<name>is_daixiao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示订单交易是否含有对应的代销采购单。 
如果该订单中存在一个对应的代销采购单，那么该值为true；反之，该值为false。</desc>
</prop>
<prop>
<name>is_oversold</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否超卖</desc>
</prop>
<prop>
<name>is_service_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是服务订单，是返回true，否返回false。</desc>
</prop>
<prop>
<name>is_www</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子订单是否是www订单</desc>
</prop>
<prop>
<name>item_meal_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套餐ID</desc>
</prop>
<prop>
<name>item_meal_name</name>
<type>String</type>
<level>Basic</level>
<desc>套餐的值。如：M8原装电池:便携支架:M8专用座充:莫凡保护袋</desc>
</prop>
<prop>
<name>logistics_company</name>
<type>String</type>
<level>Basic</level>
<desc>子订单发货的快递公司名称</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>订单修改时间，目前只有taobao.trade.ordersku.update会返回此字段。</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单编号</desc>
</prop>
<prop>
<name>order_from</name>
<type>String</type>
<level>Basic</level>
<desc>子订单来源,如jhs(聚划算)、taobao(淘宝)、wap(无线)</desc>
</prop>
<prop>
<name>outer_iid</name>
<type>String</type>
<level>Basic</level>
<desc>商家外部编码(可与商家外部系统对接)。外部商家自己定义的商品Item的id，可以通过taobao.items.custom.get获取商品的Item的信息</desc>
</prop>
<prop>
<name>outer_sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部网店自己定义的Sku编号</desc>
</prop>
<prop>
<name>part_mjz_discount</name>
<type>String</type>
<level>Basic</level>
<desc>优惠分摊</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。对于多子订单的交易，计算公式如下：payment = price * num + adjust_fee - discount_fee ；单子订单交易，payment与主订单的payment一致，对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片的绝对路径</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最近退款ID</desc>
</prop>
<prop>
<name>refund_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。退款状态。可选值 WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>seller_type</name>
<type>String</type>
<level>Basic</level>
<desc>卖家类型，可选值为：B（商城商家），C（普通卖家）</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的运送方式（卖家对订单进行多次发货之后，一个主订单下的子订单的运送方式可能不同，用order.shipping_type来区分子订单的运送方式）</desc>
</prop>
<prop>
<name>sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品的最小库存单位Sku的id.可以通过taobao.item.sku.get获取详细的Sku信息</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照详细信息</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态（请关注此状态，如果为TRADE_CLOSED_BY_TAOBAO状态，则不要对此订单进行发货，切记啊！）。可选值:  
&lt;ul&gt; 
&lt;li&gt;TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
&lt;li&gt;WAIT_BUYER_PAY(等待买家付款)  
&lt;li&gt;WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
&lt;li&gt;WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
&lt;li&gt;TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
&lt;li&gt;TRADE_FINISHED(交易成功)  
&lt;li&gt;TRADE_CLOSED(付款以后用户退款成功，交易自动关闭)  
&lt;li&gt;TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易) 
&lt;li&gt;PAY_PENDING(国际信用卡支付付款确认中)</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>发货的仓库编码</desc>
</prop>
<prop>
<name>ticket_expdate_key</name>
<type>String</type>
<level>Basic</level>
<desc>门票有效期的key</desc>
</prop>
<prop>
<name>ticket_outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>对应门票有效期的外部id</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单超时到期时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>应付金额（商品价格 * 商品数量 + 手工调整金额 - 子订单级订单优惠金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>Refund</name>
<desc>退款结构</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>卖家收货地址</desc>
</prop>
<prop>
<name>advance_status</name>
<type>Number</type>
<level>Basic</level>
<desc>退款先行垫付默认的未申请状态 0; 
退款先行垫付申请中  1; 
退款先行垫付，垫付完成 2; 
退款先行垫付，卖家拒绝收货 3; 
退款先行垫付，垫付关闭 4; 
退款先行垫付，垫付分账成功 5;</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>退款申请时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>cs_status</name>
<type>Number</type>
<level>Basic</level>
<desc>不需客服介入1; 
需要客服介入2; 
客服已经介入3; 
客服初审完成 4; 
客服主管复审失败5; 
客服处理完成6;</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>good_return_time</name>
<type>Date</type>
<level>Basic</level>
<desc>退货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>good_status</name>
<type>String</type>
<level>Basic</level>
<desc>货物状态。可选值 
BUYER_NOT_RECEIVED (买家未收到货)  
BUYER_RECEIVED (买家已收到货)  
BUYER_RETURNED_GOODS (买家已退货)</desc>
</prop>
<prop>
<name>has_good_return</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否需要退货。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>申请退款的商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>申请退款的商品数字编号</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号。如果是单笔交易oid会等于tid</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款对应的订单交易状态。 
可选值 
TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
WAIT_BUYER_PAY(等待买家付款)  
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
TRADE_FINISHED(交易成功)  
TRADE_CLOSED(交易关闭)  
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭)  
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY)  
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)  
取自"http://open.taobao.com/dev/index.php/%E4%BA%A4%E6%98%93%E7%8A%B6%E6%80%81"</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>支付给卖家的金额(交易总金额-退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>退款原因</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<desc>退还金额(退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款单号</desc>
</prop>
<prop>
<name>refund_remind_timeout</name>
<type>RefundRemindTimeout</type>
<level>Object</level>
<desc>退款超时结构RefundRemindTimeout</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
<prop>
<name>sid</name>
<type>String</type>
<level>Basic</level>
<desc>退货运单号</desc>
</prop>
<prop>
<name>split_seller_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分账给卖家的钱</desc>
</prop>
<prop>
<name>split_taobao_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分账给淘宝的钱</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。 
可选值 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝交易单号</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易总金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>DeliveryTemplate</name>
<desc>运费模板对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>运费模板上设置的发货地址</desc>
</prop>
<prop>
<name>assumer</name>
<type>Number</type>
<level>Basic</level>
<desc>可选值：0,1,2,3&lt;br&gt;,说明如下&lt;br&gt;
1)买家承担运费的模版&lt;br&gt;
0：买家承担服务费&lt;br&gt;
1: 卖家承担服务费&lt;br&gt;
2)卖家承担运费的模版&lt;br&gt;
2:卖家承担运费的模版（集市），卖家承担服务费&lt;br&gt;
3:卖家承担运费的模版（天猫），卖家承担服务费&lt;br&gt;</desc>
</prop>
<prop>
<name>consign_area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>该模板上设置的卖家发货地址区域ID，如：address为浙江省杭州市西湖去文三路XX号那么这个consign_area_id的值就是西湖区的ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>模板创建时间</desc>
</prop>
<prop>
<name>fee_list</name>
<type>TopFee</type>
<level>Object Array</level>
<desc>运费模板中运费详细信息对象，包含默认运费和指定地区运费</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>模板修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>模板名称，长度不能超过25个字节</desc>
</prop>
<prop>
<name>supports</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务模板支持增值服务列表，多个用分号隔开。cod:货到付款 mops：刷卡付款</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模块ID</desc>
</prop>
<prop>
<name>valuation</name>
<type>Number</type>
<level>Basic</level>
<desc>可选值：0 
说明： 
0:表示按宝贝件数计算运费 
&lt;br/&gt;&lt;br/&gt; 
1:表示按宝贝重量计算运费 
&lt;br/&gt;&lt;br/&gt; 
3:表示按宝贝体积计算运费</desc>
</prop>
</props>
</struct>
<struct>
<name>Trade</name>
<desc>交易结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手工调整金额，精确到2位小数，单位：元。如：200.07，表示：200元7分。来源于订单价格修改，如果有多笔子订单的时候，这个为0，单笔的话则跟[order].adjust_fee一样</desc>
</prop>
<prop>
<name>alipay_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家的支付宝id号，在UIC中有记录，买家支付宝的唯一标示，不因为买家更换Email账号而改变。</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>alipay_point</name>
<type>Number</type>
<level>Basic</level>
<desc>付款时使用的支付宝积分的额度,单位分，比如返回1，则为1分钱</desc>
</prop>
<prop>
<name>alipay_url</name>
<type>String</type>
<level>Basic</level>
<desc>创建交易接口成功后，返回的支付url</desc>
</prop>
<prop>
<name>alipay_warn_msg</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝下单成功了,但由于某种错误支付宝订单没有创建时返回的信息。taobao.trade.add接口专用</desc>
</prop>
<prop>
<name>area_id</name>
<type>String</type>
<level>Basic</level>
<desc>区域id，代表订单下单的区位码，区位码是通过省市区转换而来，通过区位码能精确到区内的划分，比如310012是杭州市西湖区华星路</desc>
</prop>
<prop>
<name>arrive_cut_time</name>
<type>String</type>
<level>Basic</level>
<desc>物流到货时效截单时间，格式 HH:mm</desc>
</prop>
<prop>
<name>arrive_interval</name>
<type>Number</type>
<level>Basic</level>
<desc>物流到货时效，单位天</desc>
</prop>
<prop>
<name>async_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>同步到卖家库的时间，taobao.trades.sold.incrementv.get接口返回此字段</desc>
</prop>
<prop>
<name>available_confirm_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易中剩余的确认收货金额（这个金额会随着子订单确认收货而不断减少，交易成功后会变为零）。精确到2位小数;单位:元。如:200.07，表示:200 元7分</desc>
</prop>
<prop>
<name>buyer_alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>买家支付宝账号</desc>
</prop>
<prop>
<name>buyer_area</name>
<type>String</type>
<level>Basic</level>
<desc>买家下单的地区</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>buyer_email</name>
<type>String</type>
<level>Basic</level>
<desc>买家邮件地址</desc>
</prop>
<prop>
<name>buyer_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>买家备注旗帜（与淘宝网上订单的买家备注旗帜对应，只有买家才能查看该字段）
红、黄、绿、蓝、紫 分别对应 1、2、3、4、5</desc>
</prop>
<prop>
<name>buyer_memo</name>
<type>String</type>
<level>Basic</level>
<desc>买家备注（与淘宝网上订单的买家备注对应，只有买家才能查看该字段）</desc>
</prop>
<prop>
<name>buyer_message</name>
<type>String</type>
<level>Basic</level>
<desc>买家留言</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家获得积分,返点的积分。格式:100;单位:个。返点的积分要交易成功之后才能获得。</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否已评价。可选值:true(已评价),false(未评价)。如买家只评价未打分，此字段仍返回false</desc>
</prop>
<prop>
<name>can_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家可以通过此字段查询是否当前交易可以评论，can_rate=true可以评价，false则不能评价。</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。</desc>
</prop>
<prop>
<name>cod_status</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款物流状态。
初始状态 NEW_CREATED,
接单成功 ACCEPTED_BY_COMPANY,
接单失败 REJECTED_BY_COMPANY,
接单超时 RECIEVE_TIMEOUT,
揽收成功 TAKEN_IN_SUCCESS,
揽收失败 TAKEN_IN_FAILED,
揽收超时 TAKEN_TIMEOUT,
签收成功 SIGN_IN,
签收失败 REJECTED_BY_OTHER_SIDE,
订单等待发送给物流公司 WAITING_TO_BE_SENT,
用户取消物流订单 CANCELED</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>consign_interval</name>
<type>Number</type>
<level>Basic</level>
<desc>物流发货时效，单位小时</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<desc>卖家发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>交易创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>credit_card_fee</name>
<type>String</type>
<level>Basic</level>
<desc>使用信用卡支付金额数</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>建议使用trade.promotion_details查询系统优惠
系统优惠金额（如打折，VIP，满就送等），精确到2位小数，单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易结束时间。交易成功时间(更新交易状态为成功的同时更新)/确认收货时间或者交易关闭时间 。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>eticket_ext</name>
<type>String</type>
<level>Basic</level>
<desc>电子凭证的垂直信息</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>has_buyer_message</name>
<type>Boolean</type>
<level>Basic</level>
<desc>判断订单是否有买家留言，有买家留言返回true，否则返回false</desc>
</prop>
<prop>
<name>has_post_fee</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否包含邮费。与available_confirm_fee同时使用。可选值:true(包含),false(不包含)</desc>
</prop>
<prop>
<name>has_yfx</name>
<type>Boolean</type>
<level>Basic</level>
<desc>订单中是否包含运费险订单，如果包含运费险订单返回true，不包含运费险订单，返回false</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>invoice_name</name>
<type>String</type>
<level>Basic</level>
<desc>发票抬头</desc>
</prop>
<prop>
<name>invoice_type</name>
<type>String</type>
<level>Basic</level>
<desc>发票类型</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是3D淘宝交易</desc>
</prop>
<prop>
<name>is_brand_sale</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示是否是品牌特卖（常规特卖，不包括特卖惠和特实惠）订单，如果是返回true，如果不是返回false。当此字段与is_force_wlb均为true时，订单强制物流宝发货。</desc>
</prop>
<prop>
<name>is_daixiao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示订单交易是否含有对应的代销采购单。 
如果该订单中存在一个对应的代销采购单，那么该值为true；反之，该值为false。</desc>
</prop>
<prop>
<name>is_force_wlb</name>
<type>Boolean</type>
<level>Basic</level>
<desc>订单是否强制使用物流宝发货。当此字段与is_brand_sale均为true时，订单强制物流宝发货。此字段为false时，该订单根据流转规则设置可以使用物流宝或者常规方式发货</desc>
</prop>
<prop>
<name>is_lgtype</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保障速递，如果为true，则为保障速递订单，使用线下联系发货接口发货，如果未false，则该订单非保障速递，根据卖家设置的订单流转规则可使用物流宝或者常规物流发货。</desc>
</prop>
<prop>
<name>is_part_consign</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是多次发货的订单 
如果卖家对订单进行多次发货，则为true 
否则为false</desc>
</prop>
<prop>
<name>is_wt</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示订单交易是否网厅订单。 如果该订单是网厅订单，那么该值为true；反之，该值为false。</desc>
</prop>
<prop>
<name>lg_aging</name>
<type>String</type>
<level>Basic</level>
<desc>次日达订单送达时间</desc>
</prop>
<prop>
<name>lg_aging_type</name>
<type>String</type>
<level>Basic</level>
<desc>次日达，三日达等送达类型</desc>
</prop>
<prop>
<name>mark_desc</name>
<type>String</type>
<level>Basic</level>
<desc>订单出现异常问题的时候，给予用户的描述,没有异常的时候，此值为空</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>交易修改时间(用户对订单的任何修改都会更新此字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量。取值范围：大于零的整数,对于一个trade对应多个order的时候（一笔主订单，对应多笔子订单），num=0，num是一个跟商品关联的属性，一笔订单对应多比子订单的时候，主订单上的num无意义。</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字编号</desc>
</prop>
<prop>
<name>nut_feature</name>
<type>String</type>
<level>Basic</level>
<desc>卡易售垂直表信息，去除下单ip之后的结果</desc>
</prop>
<prop>
<name>o2o</name>
<type>String</type>
<level>Basic</level>
<desc>导购宝=crm</desc>
</prop>
<prop>
<name>o2o_delivery</name>
<type>String</type>
<level>Basic</level>
<desc>导购宝提货方式，inshop：店内提货，online：线上发货</desc>
</prop>
<prop>
<name>o2o_guide_id</name>
<type>String</type>
<level>Basic</level>
<desc>导购员id</desc>
</prop>
<prop>
<name>o2o_guide_name</name>
<type>String</type>
<level>Basic</level>
<desc>导购员名称</desc>
</prop>
<prop>
<name>o2o_shop_id</name>
<type>String</type>
<level>Basic</level>
<desc>导购员门店id</desc>
</prop>
<prop>
<name>o2o_shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>导购门店名称</desc>
</prop>
<prop>
<name>orders</name>
<type>Order</type>
<level>Object Array</level>
<desc>订单列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss。订单的付款时间即为物流订单的创建时间。</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>pcc_af</name>
<type>Number</type>
<level>Basic</level>
<desc>天猫点券卡实付款金额,单位分</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片绝对途径</desc>
</prop>
<prop>
<name>point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家使用积分,下单时生成，且一直不变。格式:100;单位:个.</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数；单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>promotion</name>
<type>String</type>
<level>Basic</level>
<desc>交易促销详细信息</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<desc>优惠详情</desc>
</prop>
<prop>
<name>real_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家实际使用积分（扣除部分退款使用的积分），交易完成后生成（交易成功或关闭），交易未完成时该字段值为0。格式:100;单位:个</desc>
</prop>
<prop>
<name>received_payment</name>
<type>String</type>
<level>Basic</level>
<desc>卖家实际收到的支付宝打款金额（由于子订单可以部分确认收货，这个金额会随着子订单的确认收货而不断增加，交易成功后等于买家实付款减去退款金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的详细地址</desc>
</prop>
<prop>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在城市&lt;br&gt;
注：因为国家对于城市和地区的划分的有：省直辖市和省直辖县级行政区（区级别的）划分的，淘宝这边根据这个差异保存在不同字段里面
比如：广东广州：广州属于一个直辖市是放在的receiver_city的字段里面；而河南济源：济源属于省直辖县级行政区划分，是区级别的，放在了receiver_district里面
&lt;br&gt;建议：程序依赖于城市字段做物流等判断的操作，最好加一个判断逻辑：如果返回值里面只有receiver_district参数，该参数作为城市</desc>
</prop>
<prop>
<name>receiver_district</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在地区&lt;br&gt;
注：因为国家对于城市和地区的划分的有：省直辖市和省直辖县级行政区（区级别的）划分的，淘宝这边根据这个差异保存在不同字段里面
比如：广东广州：广州属于一个直辖市是放在的receiver_city的字段里面；而河南济源：济源属于省直辖县级行政区划分，是区级别的，放在了receiver_district里面
&lt;br&gt;建议：程序依赖于城市字段做物流等判断的操作，最好加一个判断逻辑：如果返回值里面只有receiver_district参数，该参数作为城市</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的电话号码</desc>
</prop>
<prop>
<name>receiver_state</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在省份</desc>
</prop>
<prop>
<name>receiver_zip</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的邮编</desc>
</prop>
<prop>
<name>seller_alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>卖家支付宝账号</desc>
</prop>
<prop>
<name>seller_can_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否可以对订单进行评价</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。卖家不承担服务费的订单：未发货的订单获取服务费为0，发货后就能获取到正确值。</desc>
</prop>
<prop>
<name>seller_email</name>
<type>String</type>
<level>Basic</level>
<desc>卖家邮件地址</desc>
</prop>
<prop>
<name>seller_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家备注旗帜（与淘宝网上订单的卖家备注旗帜对应，只有卖家才能查看该字段）
红、黄、绿、蓝、紫 分别对应 1、2、3、4、5</desc>
</prop>
<prop>
<name>seller_memo</name>
<type>String</type>
<level>Basic</level>
<desc>卖家备注（与淘宝网上订单的卖家备注对应，只有卖家才能查看该字段）</desc>
</prop>
<prop>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手机</desc>
</prop>
<prop>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家姓名</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<desc>卖家电话</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否已评价。可选值:true(已评价),false(未评价)</desc>
</prop>
<prop>
<name>send_time</name>
<type>String</type>
<level>Basic</level>
<desc>订单将在此时间前发出，主要用于预售订单</desc>
</prop>
<prop>
<name>service_orders</name>
<type>ServiceOrder</type>
<level>Object Array</level>
<desc>服务子订单列表</desc>
</prop>
<prop>
<name>service_tags</name>
<type>LogisticsTag</type>
<level>Object Array</level>
<desc>物流标签</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>创建交易时的物流方式（交易完成前，物流方式有可能改变，但系统里的这个字段一直不变）。可选值：free(卖家包邮),post(平邮),express(快递),ems(EMS),virtual(虚拟发货)，25(次日必达)，26(预约配送)。</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<desc>交易快照详细信息</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>交易快照地址</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。可选值: 
    * TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
    * WAIT_BUYER_PAY(等待买家付款) 
    * SELLER_CONSIGNED_PART(卖家部分发货) 
    * WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
    * WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
    * TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
    * TRADE_FINISHED(交易成功) 
    * TRADE_CLOSED(付款以后用户退款成功，交易自动关闭) 
    * TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易) 
    * PAY_PENDING(国际信用卡支付付款确认中) 
    * WAIT_PRE_AUTH_CONFIRM(0元购合约中)</desc>
</prop>
<prop>
<name>step_paid_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分阶段付款的已付金额（万人团订单已付金额）</desc>
</prop>
<prop>
<name>step_trade_status</name>
<type>String</type>
<level>Basic</level>
<desc>分阶段付款的订单状态（例如万人团订单等），目前有三返回状态 
FRONT_NOPAID_FINAL_NOPAID(定金未付尾款未付)，FRONT_PAID_FINAL_NOPAID(定金已付尾款未付)，FRONT_PAID_FINAL_PAID(定金和尾款都付)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易编号 (父订单的交易编号)</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>超时到期时间。格式:yyyy-MM-dd HH:mm:ss。业务规则： 
前提条件：只有在买家已付款，卖家已发货的情况下才有效 
如果申请了退款，那么超时会落在子订单上；比如说3笔ABC，A申请了，那么返回的是BC的列表, 主定单不存在 
如果没有申请过退款，那么超时会挂在主定单上；比如ABC，返回主定单，ABC的超时和主定单相同</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>交易标题，以店铺名作为此标题的值。注:taobao.trades.get接口返回的Trade中的title是商品名称</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>商品金额（商品价格乘以数量的总金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>trade_from</name>
<type>String</type>
<level>Basic</level>
<desc>交易内部来源。 
WAP(手机);HITAO(嗨淘);TOP(TOP平台);TAOBAO(普通淘宝);JHS(聚划算) 
一笔订单可能同时有以上多个标记，则以逗号分隔</desc>
</prop>
<prop>
<name>trade_memo</name>
<type>String</type>
<level>Basic</level>
<desc>交易备注。</desc>
</prop>
<prop>
<name>trade_source</name>
<type>String</type>
<level>Basic</level>
<desc>交易外部来源：ownshop(商家官网)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 
可选值 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
auto_delivery(自动发货) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
ec(直冲) 
cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易)
step (万人团)
nopaid(无付款订单)
pre_auth_type(预授权0元购机交易)</desc>
</prop>
<prop>
<name>yfx_fee</name>
<type>String</type>
<level>Basic</level>
<desc>订单的运费险，单位为元</desc>
</prop>
<prop>
<name>yfx_id</name>
<type>String</type>
<level>Basic</level>
<desc>运费险支付号</desc>
</prop>
<prop>
<name>yfx_type</name>
<type>String</type>
<level>Basic</level>
<desc>运费险类型</desc>
</prop>
<prop>
<name>zero_purchase</name>
<type>Boolean</type>
<level>Basic</level>
<desc>在返回的trade对象上专门增加一个字段zero_purchase来区分，这个为true的就是0元购机预授权交易</desc>
</prop>
</props>
</struct>
<struct>
<name>ServiceSubscribe</name>
<desc>订购关系对象</desc>
<props>
<prop>
<name>all_num</name>
<type>Number</type>
<level>Basic</level>
<desc>订购总数</desc>
</prop>
<prop>
<name>future_price</name>
<type>Price</type>
<level>Basic</level>
<desc>将要被使用的那条质检订单的价格</desc>
</prop>
<prop>
<name>future_sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>将要被消耗的质检订单ID</desc>
</prop>
<prop>
<name>gmt_expiry</name>
<type>Date</type>
<level>Basic</level>
<desc>过期时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>订购者昵称</desc>
</prop>
<prop>
<name>service_item_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务收费项code</desc>
</prop>
<prop>
<name>usage_detail_list</name>
<type>QualityUsageDetail</type>
<level>Object Array</level>
<desc>该用户该收费项目下面的所有的订购记录详情</desc>
</prop>
<prop>
<name>used_num</name>
<type>Number</type>
<level>Basic</level>
<desc>已经使用的数量</desc>
</prop>
</props>
</struct>
<struct>
<name>TopFee</name>
<desc>运费模板中运费信息对象</desc>
<props>
<prop>
<name>add_fee</name>
<type>String</type>
<level>Basic</level>
<desc>增费：输入0.00-999.99（最多包含两位小数） 不能为空不输入运费时必须输入0</desc>
</prop>
<prop>
<name>add_standard</name>
<type>String</type>
<level>Basic</level>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数</desc>
</prop>
<prop>
<name>destination</name>
<type>String</type>
<level>Basic</level>
<desc>邮费子项涉及的地区,多个地区用逗号连接数量串;可以用taobao.areas.get接口获取.或者参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 例 (110000,310000,320000,330000).就代表邮费子项涉 及(北京,上海,江苏,浙江)四个地区.填写时要注意对照地区代码值,如果填入错误地区代码,将会出现错误信息.</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>可选值：post:平邮; cod:货到付款; ems:EMS; express:快递公司</desc>
</prop>
<prop>
<name>start_fee</name>
<type>String</type>
<level>Basic</level>
<desc>首费：输入0.01-999.99（最多包含两位小数） 不能为空也不能为0</desc>
</prop>
<prop>
<name>start_standard</name>
<type>String</type>
<level>Basic</level>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数</desc>
</prop>
</props>
</struct>
<struct>
<name>ServiceItemProperty</name>
<desc>服务项属性</desc>
<props>
<prop>
<name>basic_price</name>
<type>Price</type>
<level>Basic</level>
<desc>基础价格</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>质检服务简介</desc>
</prop>
<prop>
<name>item_property_values</name>
<type>ItemPropertyValues</type>
<level>Object Array</level>
<desc>属性列表</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>服务商的nick</desc>
</prop>
<prop>
<name>service_item_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务收费项代码</desc>
</prop>
<prop>
<name>service_item_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务收费项名称</desc>
</prop>
<prop>
<name>service_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Sku</name>
<desc>Sku结构</desc>
<props>
<prop>
<name>barcode</name>
<type>String</type>
<level>Basic</level>
<desc>商品级别的条形码</desc>
</prop>
<prop>
<name>change_prop</name>
<type>String</type>
<level>Basic</level>
<desc>基础色数据</desc>
</prop>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<desc>sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>sku所属商品id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<desc>sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>sku所属商品数字id</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家设置的外部id。天猫和集市的卖家，需要登录才能获取到自己的商家编码，不能获取到他人的商家编码。</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>sku的销售属性组合字符串（颜色，大小，等等，可通过类目API获取某类目下的销售属性）,格式是p1:v1;p2:v2</desc>
</prop>
<prop>
<name>properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>sku所对应的销售属性的中文名字串，格式如：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>属于这个sku的商品的数量，</desc>
</prop>
<prop>
<name>sku_delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>sku级别发货时间</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>sku的id</desc>
</prop>
<prop>
<name>sku_spec_id</name>
<type>Number</type>
<level>Basic</level>
<desc>表示SKu上的产品规格信息</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>sku状态。 normal:正常 ；delete:删除</desc>
</prop>
<prop>
<name>with_hold_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品在付款减库存的状态下，该sku上未付款的订单数量</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemPropertyValues</name>
<desc>服务属性对象</desc>
<props>
<prop>
<name>property_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务属性id</desc>
</prop>
<prop>
<name>property_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名称</desc>
</prop>
<prop>
<name>property_values</name>
<type>String</type>
<level>Basic Array</level>
<desc>属性值列表.</desc>
</prop>
</props>
</struct>
<struct>
<name>Video</name>
<desc>商品视频关联记录</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>视频关联记录创建时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频关联记录的id，和商品相对应</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>视频记录关联的商品的数字id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>视频关联记录修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>视频记录所关联的商品的数字id</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>video的url连接地址。淘秀里视频记录里面存储的url地址</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>video的id，对应于视频在淘秀的存储记录</desc>
</prop>
</props>
</struct>
<struct>
<name>QtReport</name>
<desc>质检报告</desc>
<props>
<prop>
<name>ext_attr</name>
<type>String</type>
<level>Basic</level>
<desc>扩展属性通过冒号分隔属性与属性值. 分号分隔不同属性</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建日期</desc>
</prop>
<prop>
<name>gmt_expiry</name>
<type>Date</type>
<level>Basic</level>
<desc>质检有效期限</desc>
</prop>
<prop>
<name>gmt_report</name>
<type>Date</type>
<level>Basic</level>
<desc>出具报告时间。</desc>
</prop>
<prop>
<name>gmt_submit</name>
<type>Date</type>
<level>Basic</level>
<desc>提交检查时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>质检报告在淘宝的Id</desc>
</prop>
<prop>
<name>is_passed</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否合格</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>样品的链接</desc>
</prop>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>不合格原因</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>送检人昵称</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>样本宝贝id</desc>
</prop>
<prop>
<name>qt_code</name>
<type>String</type>
<level>Basic</level>
<desc>质检编号</desc>
</prop>
<prop>
<name>qt_name</name>
<type>String</type>
<level>Basic</level>
<desc>质检项名称</desc>
</prop>
<prop>
<name>qt_standard</name>
<type>String</type>
<level>Basic</level>
<desc>质检标准</desc>
</prop>
<prop>
<name>qt_type</name>
<type>Number</type>
<level>Basic</level>
<desc>质检类型 0,全部 1,聚划算认证2,消保打标</desc>
</prop>
<prop>
<name>report_url</name>
<type>String</type>
<level>Basic</level>
<desc>质检报告地址</desc>
</prop>
<prop>
<name>sp_name</name>
<type>String</type>
<level>Basic</level>
<desc>质检服务商名称</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>质检报告状态 
 0:已提交申请 1:已收到样品 2:已出检测结果 3.已出具报告</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopScore</name>
<desc>店铺动态评分信息</desc>
<props>
<prop>
<name>delivery_score</name>
<type>String</type>
<level>Basic</level>
<desc>发货速度评分</desc>
</prop>
<prop>
<name>item_score</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述评分</desc>
</prop>
<prop>
<name>service_score</name>
<type>String</type>
<level>Basic</level>
<desc>服务态度评分</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerCat</name>
<desc>店铺内卖家自定义类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家自定义类目编号</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家自定义类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目编号，值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>链接图片地址</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>该类目在页面上的排序位置</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>店铺类目类型：可选值：manual_type：手动分类，new_type：新品上价， tree_type：二三级类目树 ，property_type：属性叶子类目树， brand_type：品牌推广</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundDetail</name>
<desc>采购单子单退款详情</desc>
<props>
<prop>
<name>buyer_refund</name>
<type>BuyerRefund</type>
<level>Object</level>
<desc>下游买家的退款信息</desc>
</prop>
<prop>
<name>distributor_nick</name>
<type>String</type>
<level>Basic</level>
<desc>分销商nick</desc>
</prop>
<prop>
<name>is_return_goods</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否退货</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>退款修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>pay_sup_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>支付给供应商的金额</desc>
</prop>
<prop>
<name>purchase_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主采购单id</desc>
</prop>
<prop>
<name>refund_create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>退款创建时间</desc>
</prop>
<prop>
<name>refund_desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>退款的金额</desc>
</prop>
<prop>
<name>refund_flow_type</name>
<type>Number</type>
<level>Basic</level>
<desc>退款流程类型： 
4：发货前退款； 
1：发货后退款不退货； 
2：发货后退款退货</desc>
</prop>
<prop>
<name>refund_reason</name>
<type>String</type>
<level>Basic</level>
<desc>退款原因</desc>
</prop>
<prop>
<name>refund_status</name>
<type>Number</type>
<level>Basic</level>
<desc>退款状态 
1：买家已经申请退款，等待卖家同意 
2：卖家已经同意退款，等待买家退货 
3：买家已经退货，等待卖家确认收货 
4：退款关闭 
5：退款成功 
6：卖家拒绝退款 
12：同意退款，待打款 
9：没有申请退款 
10：卖家拒绝确认收货</desc>
</prop>
<prop>
<name>sub_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子单id</desc>
</prop>
<prop>
<name>supplier_nick</name>
<type>String</type>
<level>Basic</level>
<desc>供应商nick</desc>
</prop>
<prop>
<name>timeout</name>
<type>Date</type>
<level>Basic</level>
<desc>超时时间</desc>
</prop>
<prop>
<name>to_type</name>
<type>Number</type>
<level>Basic</level>
<desc>超时类型： 
1：供应商同意退款/同意退货超时； 
2：供应商确认收货超时</desc>
</prop>
</props>
</struct>
<struct>
<name>LoginLog</name>
<desc>登录日志</desc>
<props>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>用户登录或退出客户端的时间</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>标志用户登录或退出。
0表示登陆，1表示退出。</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoImage</name>
<desc>产品的各种图片信息</desc>
<props>
<prop>
<name>image_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片id</desc>
</prop>
<prop>
<name>image_position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片顺序</desc>
</prop>
<prop>
<name>image_url</name>
<type>String</type>
<level>Basic</level>
<desc>图片对应的url</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>当图片类型为属性图片时，表示图片对应的属性pv对。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>图片类型（PRODUCT：产品图片  EXTPRODUCT：产品辅图  PROPERTIES：产品属性图片 ）</desc>
</prop>
</props>
</struct>
<struct>
<name>EvalDetail</name>
<desc>评价详细</desc>
<props>
<prop>
<name>eval_code</name>
<type>Number</type>
<level>Basic</level>
<desc>评价详细： 
1 非常满意 
2 满意 
3 一般 
4 不满意</desc>
</prop>
<prop>
<name>eval_recer</name>
<type>String</type>
<level>Basic</level>
<desc>评价接收者</desc>
</prop>
<prop>
<name>eval_sender</name>
<type>String</type>
<level>Basic</level>
<desc>评价发送者</desc>
</prop>
<prop>
<name>eval_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价时间</desc>
</prop>
<prop>
<name>send_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价发送时间</desc>
</prop>
</props>
</struct>
<struct>
<name>StreamWeight</name>
<desc>分流权重</desc>
<props>
<prop>
<name>user</name>
<type>String</type>
<level>Basic</level>
<desc>账号</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>账号对应的权重</desc>
</prop>
</props>
</struct>
<struct>
<name>ImprItemDO</name>
<desc>评价大印象返回的印象词接口</desc>
<props>
<prop>
<name>attribute_id</name>
<type>Number</type>
<level>Basic</level>
<desc>印象标签的id</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>被买家评价提及到的印象标签次数</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>印象标签情感倾向 1表示正面 -1表示负面 0表示中性</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>印象标签的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderMessage</name>
<desc>采购单留言列表</desc>
<props>
<prop>
<name>message_content</name>
<type>String</type>
<level>Basic</level>
<desc>留言内容</desc>
</prop>
<prop>
<name>message_time</name>
<type>Date</type>
<level>Basic</level>
<desc>留言时间</desc>
</prop>
<prop>
<name>message_title</name>
<type>String</type>
<level>Basic</level>
<desc>留言标题，例如：分销商留言，供应商留言，买家留言</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>留言时的图片地址</desc>
</prop>
</props>
</struct>
<struct>
<name>BuyerRefund</name>
<desc>下游买家退款信息</desc>
<props>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单id</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>下游买家nick</desc>
</prop>
<prop>
<name>goods_status_desc</name>
<type>String</type>
<level>Basic</level>
<desc>货物的状态：
买家已收到货
买家已退货
买家未收到货</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>退款修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>need_return_goods</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否退货</desc>
</prop>
<prop>
<name>refund_create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>退款创建时间</desc>
</prop>
<prop>
<name>refund_desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易退款id</desc>
</prop>
<prop>
<name>refund_reason</name>
<type>String</type>
<level>Basic</level>
<desc>退款原因</desc>
</prop>
<prop>
<name>refund_status</name>
<type>Number</type>
<level>Basic</level>
<desc>退款状态</desc>
</prop>
<prop>
<name>return_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>退还买家的金额</desc>
</prop>
<prop>
<name>sub_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>采购单子单id</desc>
</prop>
<prop>
<name>to_seller_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>支付分销商的金额</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItems</name>
<desc>旅游商品结构。</desc>
<props>
<prop>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品发布后的状态。onsale出售中，instock仓库中。</desc>
</prop>
<prop>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<desc>商城返点比例，为5的倍数，最低0.5%。[0,500]</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属叶子类目ID。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>商品发布时间。</desc>
</prop>
<prop>
<name>delist_time</name>
<type>Date</type>
<level>Basic</level>
<desc>下架时间，未使用（格式：yyyy-MM-dd HH:mm:ss）。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述，字数要大于5个字符，小于50000个字符。</desc>
</prop>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品详情url。</desc>
</prop>
<prop>
<name>duration</name>
<type>Number</type>
<level>Basic</level>
<desc>最晚成团提前天数，最小0天，最大为300天，不填默认为0天。</desc>
</prop>
<prop>
<name>fee_include</name>
<type>String</type>
<level>Basic</level>
<desc>费用包含，不超过1500个字符。</desc>
</prop>
<prop>
<name>fee_not_include</name>
<type>String</type>
<level>Basic</level>
<desc>费用不包，不超过1500个字符。</desc>
</prop>
<prop>
<name>flight_info</name>
<type>String</type>
<level>Basic</level>
<desc>机票信息，不超过1500字</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>运费承担方式,seller（卖家承担），buyer（买家承担）。</desc>
</prop>
<prop>
<name>gathering_place</name>
<type>String</type>
<level>Basic</level>
<desc>集合地，不超过30个字符。</desc>
</prop>
<prop>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>会员打折 true/false。</desc>
</prop>
<prop>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有发票,true/false。</desc>
</prop>
<prop>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有橱窗true/false。</desc>
</prop>
<prop>
<name>hotel_info</name>
<type>String</type>
<level>Basic</level>
<desc>酒店信息，不超过1500字符</desc>
</prop>
<prop>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："2000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。在度假线路类目中，该属性ID为“自由行包含元素”或“一日游包含元素”属性ID。</desc>
</prop>
<prop>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的子属性名和属性值，如“自定义自由行包含元素”。</desc>
</prop>
<prop>
<name>is_tdcy</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否“铁定出游”商品。</desc>
</prop>
<prop>
<name>is_timing</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否定时上架商品。</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID。</desc>
</prop>
<prop>
<name>item_imgs</name>
<type>TravelItemsImg</type>
<level>Object Array</level>
<desc>商品图片列表(包括主图)。</desc>
</prop>
<prop>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上架时间,未使用（格式：yyyy-MM-dd HH:mm:ss）。</desc>
</prop>
<prop>
<name>locality_life</name>
<type>TravelItemsLocalityLife</type>
<level>Object</level>
<desc>电子凭证信息。</desc>
</prop>
<prop>
<name>location</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝所在地，格式为(省份:城市)。</desc>
</prop>
<prop>
<name>max_showcase</name>
<type>Number</type>
<level>Basic</level>
<desc>最多橱窗数。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）。</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称。</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量。</desc>
</prop>
<prop>
<name>order_info</name>
<type>String</type>
<level>Basic</level>
<desc>预定须知，不超过1500个字符。</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码。</desc>
</prop>
<prop>
<name>own_expense</name>
<type>String</type>
<level>Basic</level>
<desc>自费项目，不超过1500个字符。</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品主图片地址。</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品价格，格式：500；单位：分；精确到：分。</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性列表。格式为：pid:vid;pid:vid。例如度假线路商品，那么这里就需要填写：出发地属性id:城市id;目的地市属性id:目的地市id;……</desc>
</prop>
<prop>
<name>props_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性名称。标识着props内容里面的pid和vid所对应的名称。格式为：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……</desc>
</prop>
<prop>
<name>refund_regulation</name>
<type>String</type>
<level>Basic</level>
<desc>退改规定，不超过1500个字符。</desc>
</prop>
<prop>
<name>second_kill</name>
<type>String</type>
<level>Basic</level>
<desc>秒杀商品类型。</desc>
</prop>
<prop>
<name>seller_cids</name>
<type>String</type>
<level>Basic</level>
<desc>商品所属的店铺内卖家自定义类目列表，多个以“,”分割。</desc>
</prop>
<prop>
<name>shoping_info</name>
<type>String</type>
<level>Basic</level>
<desc>购物店信息，不超过1500个字符。</desc>
</prop>
<prop>
<name>skus</name>
<type>TravelItemsSku</type>
<level>Object Array</level>
<desc>商品Sku列表。</desc>
</prop>
<prop>
<name>start</name>
<type>Date</type>
<level>Basic</level>
<desc>商品开始出售时间。</desc>
</prop>
<prop>
<name>sub_stock</name>
<type>Number</type>
<level>Basic</level>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存)。</desc>
</prop>
<prop>
<name>ticket_info</name>
<type>String</type>
<level>Basic</level>
<desc>门票信息，不超过1500字</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题，能超过60字符，一个汉字占2个字符。</desc>
</prop>
<prop>
<name>travel_items_combos</name>
<type>TravelItemsCombo</type>
<level>Object Array</level>
<desc>套餐价格日历信息。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>商品类型(fixed:一口价;auction:拍卖)注：取消团购。</desc>
</prop>
<prop>
<name>used_showcase</name>
<type>Number</type>
<level>Basic</level>
<desc>已被使用的橱窗数。</desc>
</prop>
<prop>
<name>violation</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否违规，违规：true , 不违规：false。</desc>
</prop>
<prop>
<name>wap_desc</name>
<type>String</type>
<level>Basic</level>
<desc>不带html标签的desc文本信息，该字段只在taobao.item.get接口中返回。</desc>
</prop>
<prop>
<name>wap_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>适合wap应用的商品详情url。</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsAreaNode</name>
<desc>旅游度假商品地区结构。</desc>
<props>
<prop>
<name>sub_prop_values</name>
<type>TravelItemsPropValue</type>
<level>Object Array</level>
<desc>该地区下所有下级地区集合(目前地区只有两级，国内：省-市；国际： 国家-城市)。</desc>
</prop>
<prop>
<name>travel_items_prop_value</name>
<type>TravelItemsPropValue</type>
<level>Object</level>
<desc>地区属性值。</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsProp</name>
<desc>旅游商品类目属性结构</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属叶子类目ID，旅游度假8个叶子类目</desc>
</prop>
<prop>
<name>is_enums</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否可枚举。可选值:true(是),false(否)。</desc>
</prop>
<prop>
<name>is_input</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否可输入。可选值:true(是),false(否)。</desc>
</prop>
<prop>
<name>is_sale_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否销售属性。可选值:true(是),false(否)。</desc>
</prop>
<prop>
<name>multi</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布商品时是否可以多选。可选值: true (是) , false(否)。</desc>
</prop>
<prop>
<name>must</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布商品时是否必选。可选值: true (是) , false(否)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名称</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>旅游商品类目属性ID</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>travel_items_prop_values</name>
<type>TravelItemsPropValue</type>
<level>Object Array</level>
<desc>商品类目属性值集合。</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeConfirmFee</name>
<desc>确认收货费用结构</desc>
<props>
<prop>
<name>confirm_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>确认收货的金额(不包含邮费)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>confirm_post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>需确认收货的邮费，当不是最后一笔收货或者没有邮费时是0.00。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>is_last_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是最后一笔订单（只对子订单有效，当其他子订单都是交易完成时，返回true，否则false）</desc>
</prop>
</props>
</struct>
<struct>
<name>LotteryWangcaiSellerGoodsInfo</name>
<desc>卖家商品信息</desc>
<props>
<prop>
<name>act_begin_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动开始时间</desc>
</prop>
<prop>
<name>act_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动结束时间</desc>
</prop>
<prop>
<name>goods_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>lottery_type_id</name>
<type>Number</type>
<level>Basic</level>
<desc>彩种id</desc>
</prop>
<prop>
<name>present_type</name>
<type>Number</type>
<level>Basic</level>
<desc>赠送类型：0：满就送，1：好评送，2：分享送，3：游戏送，4：收藏送</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsLocalityLife</name>
<desc>旅游度假线路电子凭证（本地生活）结构。</desc>
<props>
<prop>
<name>choose_logis</name>
<type>Number</type>
<level>Basic</level>
<desc>表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄。</desc>
</prop>
<prop>
<name>expirydate</name>
<type>String</type>
<level>Basic</level>
<desc>电子交易凭证有效期，有三种格式：如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 如果有效期为【购买成功日至】类型则格式为2012-08-16 ；如果有效期为天数类型则格式为15</desc>
</prop>
<prop>
<name>merchant</name>
<type>String</type>
<level>Basic</level>
<desc>格式为 码商id:nick</desc>
</prop>
<prop>
<name>network_id</name>
<type>String</type>
<level>Basic</level>
<desc>网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID。</desc>
</prop>
<prop>
<name>onsale_auto_refund_ratio</name>
<type>Number</type>
<level>Basic</level>
<desc>电子凭证售中自动退款比例。</desc>
</prop>
<prop>
<name>refund_ratio</name>
<type>Number</type>
<level>Basic</level>
<desc>退款比例，百分比%前的数字，1-100的正整数值；在参数empty_fields里设置travel_items_locality_life.refund_ratio可删除退款比例。</desc>
</prop>
<prop>
<name>verification</name>
<type>String</type>
<level>Basic</level>
<desc>核销打款:1代表核销打款,0代表非核销打款; 在参数empty_fields里设置travel_items_locality_life.verification可删除核销打款。</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemImg</name>
<desc>ItemImg结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品图片的id，和商品相对应（主图id默认为0）</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsCombo</name>
<desc>旅游度假线路套餐价格日历结构。</desc>
<props>
<prop>
<name>combo</name>
<type>TravelItemsPropValue</type>
<level>Object</level>
<desc>销售属性套餐属性值结构。</desc>
</prop>
<prop>
<name>combo_price_calendars</name>
<type>TravelItemsPriceCalendar</type>
<level>Object Array</level>
<desc>套餐下的价格日历集合。</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopCat</name>
<desc>店铺类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目编号</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该类目是否为父类目。即：该类目是否还有子类目</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目编号，注：此类目指前台类目，值等于0：表示此类目为一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsPriceCalendar</name>
<desc>旅游度假线路价格日历结构。</desc>
<props>
<prop>
<name>child_num</name>
<type>Number</type>
<level>Basic</level>
<desc>儿童库存</desc>
</prop>
<prop>
<name>child_price</name>
<type>Number</type>
<level>Basic</level>
<desc>儿童价格（以“分”为单位）。</desc>
</prop>
<prop>
<name>date</name>
<type>String</type>
<level>Basic</level>
<desc>日期。</desc>
</prop>
<prop>
<name>diff_price</name>
<type>Number</type>
<level>Basic</level>
<desc>单人房差（以“分”为单位）</desc>
</prop>
<prop>
<name>man_num</name>
<type>Number</type>
<level>Basic</level>
<desc>成人库存</desc>
</prop>
<prop>
<name>man_price</name>
<type>Number</type>
<level>Basic</level>
<desc>成人价格（以“分”为单位）</desc>
</prop>
</props>
</struct>
<struct>
<name>CarriageDetail</name>
<desc>物流公司资费相关信息</desc>
<props>
<prop>
<name>add_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>续费（单位：元）</desc>
</prop>
<prop>
<name>add_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>续重（单位：千克）</desc>
</prop>
<prop>
<name>damage_payment</name>
<type>String</type>
<level>Basic</level>
<desc>破损赔付</desc>
</prop>
<prop>
<name>got_time</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司揽收时间段</desc>
</prop>
<prop>
<name>initial_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>首费（单位：元）</desc>
</prop>
<prop>
<name>initial_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>首重（单位：千克）</desc>
</prop>
<prop>
<name>lost_payment</name>
<type>String</type>
<level>Basic</level>
<desc>丢单赔付</desc>
</prop>
<prop>
<name>way_day</name>
<type>String</type>
<level>Basic</level>
<desc>快件送达所需的时间(单位：天)</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductPropImg</name>
<desc>产品属性图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品属性图片ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>属性串(pid:vid),目前只有颜色属性.如:颜色:红色表示为　1627207:28326</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsPropValue</name>
<desc>旅游商品类目属性值结构</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属叶子类目ID，旅游度假8个叶子类目。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性值名称。</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性ID。</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名称。</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数。</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性值ID。</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsSku</name>
<desc>旅游商品销售属性SKU结构。</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>SKU创建日期 时间格式：yyyy-MM-dd HH:mm:ss。</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>SKU所属商品数字ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>SKU最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss。</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家设置的外部ID</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>属于这个SKU的商品的价格 取值范围:0-2&lt;&lt;63-1;单位:分。如:20007，表示:200元7分。</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的销售属性组合字符串（出发日期，出游人群，等等，可通过taobao.travel.itemsprops.get接口获取旅游类目下的销售属性），格式是p1:v1;p2:v2。</desc>
</prop>
<prop>
<name>properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU所对应的销售属性的中文名字串，格式如：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……。</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>属于这个SKU的商品的数量。</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>SKU的ID</desc>
</prop>
</props>
</struct>
<struct>
<name>TravelItemsImg</name>
<desc>旅游商品图片结构。</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss。</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品图片的ID。</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址。</desc>
</prop>
</props>
</struct>
<struct>
<name>Shop</name>
<desc>店铺信息</desc>
<props>
<prop>
<name>all_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总橱窗数量，对于C卖家返回总橱窗数，对于B卖家返回0（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
<prop>
<name>bulletin</name>
<type>String</type>
<level>Basic</level>
<desc>店铺公告</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所属的类目编号</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>开店时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>店铺描述</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>店标地址。返回相对路径，可以用"http://logo.taobao.com/shop-logo"来拼接成绝对路径</desc>
</prop>
<prop>
<name>remain_count</name>
<type>Number</type>
<level>Basic</level>
<desc>剩余橱窗数量，对于C卖家返回剩余橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
<prop>
<name>shop_score</name>
<type>ShopScore</type>
<level>Object</level>
<desc>店铺动态评分信息</desc>
</prop>
<prop>
<name>sid</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺编号。shop+sid.taobao.com即店铺地址，如shop123456.taobao.com</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺标题</desc>
</prop>
<prop>
<name>used_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已用的橱窗数量，对于C卖家返回已使用的橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
</props>
</struct>
<struct>
<name>AccountInfo</name>
<desc>E客服账号操作信息</desc>
<props>
<prop>
<name>account</name>
<type>String</type>
<level>Basic</level>
<desc>账号</desc>
</prop>
<prop>
<name>account_stats</name>
<type>AccountStat</type>
<level>Object Array</level>
<desc>操作列表</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>account_stats列表的长度</desc>
</prop>
</props>
</struct>
<struct>
<name>SinglePayDetail</name>
<desc>小额支付单笔支付</desc>
<props>
<prop>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝冻结订单号</desc>
</prop>
<prop>
<name>amount</name>
<type>String</type>
<level>Basic</level>
<desc>本次支付金额</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间</desc>
</prop>
<prop>
<name>pay_url</name>
<type>String</type>
<level>Basic</level>
<desc>本次支付url地址</desc>
</prop>
<prop>
<name>receive_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>收款人的userId</desc>
</prop>
<prop>
<name>transfer_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>本次支付的支付宝流水号</desc>
</prop>
<prop>
<name>transfer_out_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>本次支付的外部单据号</desc>
</prop>
</props>
</struct>
<struct>
<name>UnfreezeOrderDetail</name>
<desc>冻结订单详情</desc>
<props>
<prop>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝订单号</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>merchant_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>冻结订单的商户订单号</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单的最近修改时间</desc>
</prop>
<prop>
<name>order_amount</name>
<type>String</type>
<level>Basic</level>
<desc>冻结金额（含服务费）</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态：I：初始，S：成功，F：失败</desc>
</prop>
<prop>
<name>unfreeze_amount</name>
<type>String</type>
<level>Basic</level>
<desc>解冻金额（含服务费）</desc>
</prop>
</props>
</struct>
<struct>
<name>ServiceOrder</name>
<desc>商城虚拟服务子订单数据结构</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>item_oid</name>
<type>Number</type>
<level>Basic</level>
<desc>服务所属的交易订单号。如果服务为一年包换，则item_oid这笔订单享受改服务的保护</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量，取值范围为大于0的整数</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>虚拟服务子订单订单号</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>服务图片地址</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>服务价格，精确到小数点后两位：单位:元</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最近退款的id</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>service_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>服务详情的URL地址</desc>
</prop>
<prop>
<name>service_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务数字id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>服务子订单总费用</desc>
</prop>
</props>
</struct>
<struct>
<name>MicroPayOrderDetail</name>
<desc>小额支付冻结订单详情</desc>
<props>
<prop>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝订单号，此订单号作为后续支付冻结金以及转账的订单标识</desc>
</prop>
<prop>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付方的支付宝userId</desc>
</prop>
<prop>
<name>available_amount</name>
<type>String</type>
<level>Basic</level>
<desc>可用于支付的金额（除去服务费）</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>expire_time</name>
<type>Date</type>
<level>Basic</level>
<desc>冻结资金的到期自动解冻时间</desc>
</prop>
<prop>
<name>freeze_amount</name>
<type>String</type>
<level>Basic</level>
<desc>冻结金额（不包含服务费）</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>merchant_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>商户订单号,这个是调用传入的</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单的最近修改时间</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态：I：初始，S：成功</desc>
</prop>
<prop>
<name>pay_amount</name>
<type>String</type>
<level>Basic</level>
<desc>支付的金额（含服务费）</desc>
</prop>
<prop>
<name>pay_confirm</name>
<type>String</type>
<level>Basic</level>
<desc>冻结资金支付确认方式，  
NO_CONFIRM：不需要付款确认，调用接口直接扣款 
PAY_PASSWORD: 
在转账需要付款方用支付密码确认，才可以转账成功</desc>
</prop>
</props>
</struct>
<struct>
<name>PropImg</name>
<desc>商品属性图片结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性图片的id，和商品相对应</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>图片所对应的属性组合的字符串</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>MsgList</name>
<desc>聊天记录列表</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>当direction=0有效，完整消息内容</desc>
</prop>
<prop>
<name>direction</name>
<type>Number</type>
<level>Basic</level>
<desc>表示消息方向 
0:from_id-&gt;to_id 
1:to_id-&gt;from_id</desc>
</prop>
<prop>
<name>length</name>
<type>Number</type>
<level>Basic</level>
<desc>当direction=1有效，消息长度</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>东八区时间</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>type &amp; 1  ：自动回复&lt;br&gt;
type &amp; 2  : 陌生人消息（等于0是好友消息）&lt;br&gt;
type &amp; 4  : 广播消息&lt;br&gt;
type &amp; 8  : 最近联系人陌生人消息&lt;br&gt;
type &amp; 16 : 离线消息&lt;br&gt;
type &amp; 32 : 子账号转发系统消息</desc>
</prop>
<prop>
<name>url_lists</name>
<type>UrlList</type>
<level>Object Array</level>
<desc>当direction=1有效，url列表</desc>
</prop>
<prop>
<name>word_lists</name>
<type>WordCountList</type>
<level>Object Array</level>
<desc>当direction=1有效，（关键词，数量）列表</desc>
</prop>
</props>
</struct>
<struct>
<name>WordList</name>
<desc>关键词列表</desc>
<props>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>WordCountList</name>
<desc>关键词统计</desc>
<props>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词数量</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>Brand</name>
<desc>品牌</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>vid的值</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌的属性id</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>品牌的属性名</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>对应属性的 pid:vid 串中的vid</desc>
</prop>
</props>
</struct>
<struct>
<name>UrlList</name>
<desc>url列表</desc>
<props>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>url列表</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemCat</name>
<desc>商品类目结构</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>Feature对象列表 
目前已有的属性： 
若Attr_key为 udsaleprop，attr_value为1 则允许卖家在改类目新增自定义销售属性,不然为不允许</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该类目是否为父类目(即：该类目是否还有子类目)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目ID=0时，代表的是一级的类目</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
</props>
</struct>
<struct>
<name>PropValue</name>
<desc>属性值</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>属性值feature</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否为父类目属性</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间（类目增量专用）</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete (增量类目专用)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
<prop>
<name>name_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性值别名</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性 ID</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性值ID</desc>
</prop>
</props>
</struct>
<struct>
<name>AccountStat</name>
<desc>E客服账号操作记录</desc>
<props>
<prop>
<name>login_status</name>
<type>Number</type>
<level>Basic</level>
<desc>登录状态。0：离线；1：在线</desc>
</prop>
<prop>
<name>onservice_status</name>
<type>Number</type>
<level>Basic</level>
<desc>服务状态。0：挂起；1：服务</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>操作时间。格式：YYYY-mm-dd HH:MM:SS</desc>
</prop>
</props>
</struct>
<struct>
<name>Item</name>
<desc>Item(商品)结构</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<desc>售后服务ID,该字段仅在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品上传后的状态。onsale出售中，instock库中</desc>
</prop>
<prop>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<desc>天猫订单抽佣比例，为5的倍数，最低0.5%。跟淘客佣金没有关系。</desc>
</prop>
<prop>
<name>auto_fill</name>
<type>String</type>
<level>Basic</level>
<desc>代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： no_mark(不做类型标记) time_card(点卡软件代充) fee_card(话费软件代充)</desc>
</prop>
<prop>
<name>barcode</name>
<type>String</type>
<level>Basic</level>
<desc>商品级别的条形码</desc>
</prop>
<prop>
<name>change_prop</name>
<type>String</type>
<level>Basic</level>
<desc>基础色数据</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属的叶子类目 id</desc>
</prop>
<prop>
<name>cod_postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货到付款运费模板ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>Item的发布时间，目前仅供taobao.item.add和taobao.item.get可用</desc>
</prop>
<prop>
<name>custom_made_type_id</name>
<type>String</type>
<level>Basic</level>
<desc>定制工具Id</desc>
</prop>
<prop>
<name>delist_time</name>
<type>Date</type>
<level>Basic</level>
<desc>下架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>delivery_time</name>
<type>DeliveryTime</type>
<level>Object</level>
<desc>发货时间信息</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述, 字数要大于5个字符，小于25000个字符</desc>
</prop>
<prop>
<name>desc_module_info</name>
<type>DescModuleInfo</type>
<level>Object</level>
<desc>宝贝描述规范化模块锚点信息</desc>
</prop>
<prop>
<name>desc_modules</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述模块化，模块列表，由List转化成jsonArray存入，后端逻辑验证通过，拼装成模块内容+锚点导航后存入desc中。数据结构具体参见Item_Desc_Module</desc>
</prop>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品url</desc>
</prop>
<prop>
<name>ems_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>ems费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>express_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>快递费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>features</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝特征值， 
只有在Top支持的特征值才能保存到宝贝上</desc>
</prop>
<prop>
<name>food_security</name>
<type>FoodSecurity</type>
<level>Object</level>
<desc>食品安全信息，包括：生产许可证编号、产品标准号、厂名、厂址等</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>运费承担方式,seller（卖家承担），buyer(买家承担）</desc>
</prop>
<prop>
<name>global_stock_country</name>
<type>String</type>
<level>Basic</level>
<desc>全球购商品采购地信息（地区/国家），代表全球购商品的产地信息。</desc>
</prop>
<prop>
<name>global_stock_type</name>
<type>String</type>
<level>Basic</level>
<desc>全球购商品采购地信息（库存类型），有两种库存类型：现货和代购; 
参数值为1时代表现货，值为2时代表代购</desc>
</prop>
<prop>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>支持会员打折,true/false</desc>
</prop>
<prop>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有发票,true/false</desc>
</prop>
<prop>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<desc>橱窗推荐,true/false</desc>
</prop>
<prop>
<name>has_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有保修,true/false</desc>
</prop>
<prop>
<name>increment</name>
<type>String</type>
<level>Basic</level>
<desc>加价幅度。如果为0，代表系统代理幅度。 
在竞拍中，为了超越上一个出价，会员需要在当前出价上增加金额，这个金额就是加价幅度。卖家在发布宝贝的时候可以自定义加价幅度，也可以让系统自动代理加价。系统自动代理加价的加价幅度随着当前出价金额的增加而增加，我们建议会员使用系统自动代理加价，并请买家在出价前看清楚加价幅度的具体金额。另外需要注意是，此功能只适用于拍卖的商品。 
以下是系统自动代理加价幅度表： 
当前价（加价幅度 ） 
1-40（ 1 ）、41-100（ 2 ）、101-200（5 ）、201-500 （10）、501-1001（15）、001-2000（25）、2001-5000（50）、5001-10000（100） 
10001以上         200</desc>
</prop>
<prop>
<name>inner_shop_auction_template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户内店宝贝装修模板id</desc>
</prop>
<prop>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</prop>
<prop>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5”，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过 3999字节。</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是3D淘宝的商品</desc>
</prop>
<prop>
<name>is_cspu</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否为达尔文挂接成功了的商品</desc>
</prop>
<prop>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否在外部网店显示</desc>
</prop>
<prop>
<name>is_fenxiao</name>
<type>Number</type>
<level>Basic</level>
<desc>非分销商品：0，代销：1，经销：2</desc>
</prop>
<prop>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否24小时闪电发货</desc>
</prop>
<prop>
<name>is_offline</name>
<type>String</type>
<level>Basic</level>
<desc>是否是线下商品。 
1：线上商品（默认值）； 
2：线上或线下商品； 
3：线下商品。</desc>
</prop>
<prop>
<name>is_prepay</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为先行赔付 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否在淘宝显示</desc>
</prop>
<prop>
<name>is_timing</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否定时上架商品</desc>
</prop>
<prop>
<name>is_virtual</name>
<type>Boolean</type>
<level>Basic</level>
<desc>虚拟商品的状态字段</desc>
</prop>
<prop>
<name>is_xinpin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标示商品是否为新品。 
值含义：true-是，false-否。</desc>
</prop>
<prop>
<name>item_imgs</name>
<type>ItemImg</type>
<level>Object Array</level>
<desc>商品图片列表(包括主图)。fields中只设置item_img可以返回ItemImg结构体中所有字段，如果设置为item_img.id、item_img.url、item_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>item_size</name>
<type>String</type>
<level>Basic</level>
<desc>表示商品的体积，用于按体积计费的运费模板。该值的单位为立方米（m3）。 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：weight:10;breadth:10;height:10，单位为米（m）</desc>
</prop>
<prop>
<name>item_weight</name>
<type>String</type>
<level>Basic</level>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg</desc>
</prop>
<prop>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>locality_life</name>
<type>LocalityLife</type>
<level>Object</level>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期: 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为3</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>商品所在地</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>mpic_video</name>
<type>MpicVideo</type>
<level>Object</level>
<desc>宝贝主图视频的数据信息，包括：视频ID，视频缩略图URL，视频时长，视频状态等信息。</desc>
</prop>
<prop>
<name>newprepay</name>
<type>String</type>
<level>Basic</level>
<desc>是否为新消保法中的7天无理由退货</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字id</desc>
</prop>
<prop>
<name>one_station</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否淘1站商品</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家外部编码(可与商家外部系统对接)。需要授权才能获取。</desc>
</prop>
<prop>
<name>outer_shop_auction_template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户外店装修模板id</desc>
</prop>
<prop>
<name>paimai_info</name>
<type>PaimaiInfo</type>
<level>Object</level>
<desc>用于保存拍卖有关的信息</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品主图片地址</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>平邮费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属的运费模板ID，如果没有返回则说明没有使用运费模板</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格，格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属产品的id(可能为空). 该字段可以通过taobao.products.search 得到</desc>
</prop>
<prop>
<name>promoted_service</name>
<type>String</type>
<level>Basic</level>
<desc>消保类型，多个类型以,分割。可取以下值：
2：假一赔三；4：7天无理由退换货；taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>prop_imgs</name>
<type>PropImg</type>
<level>Object Array</level>
<desc>商品属性图片列表。fields中只设置prop_img可以返回PropImg结构体中所有字段，如果设置为prop_img.id、prop_img.url、prop_img.properties、prop_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性值别名,比如颜色的自定义名称</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性 格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性名称。标识着props内容里面的pid和vid所对应的名称。格式为：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属卖家的信用等级数，1表示1心，2表示2心……，只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回</desc>
</prop>
<prop>
<name>second_kill</name>
<type>String</type>
<level>Basic</level>
<desc>秒杀商品类型。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型 
web_only(只能通过web网络秒杀) 
wap_only(只能通过wap网络秒杀) 
web_and_wap(既能通过web秒杀也能通过wap秒杀)</desc>
</prop>
<prop>
<name>second_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>达尔文数据挂接，第二步保存结果</desc>
</prop>
<prop>
<name>sell_point</name>
<type>String</type>
<level>Basic</level>
<desc>商品卖点信息，天猫商家使用字段，最长150个字符。</desc>
</prop>
<prop>
<name>sell_promise</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否承诺退换货服务!</desc>
</prop>
<prop>
<name>seller_cids</name>
<type>String</type>
<level>Basic</level>
<desc>商品所属的店铺内卖家自定义类目列表</desc>
</prop>
<prop>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>&lt;a href="http://open.taobao.com/dev/index.php/Sku"&gt;Sku&lt;/a&gt;列表。fields中只设置sku可以返回Sku结构体中所有字段，如果设置为sku.sku_id、sku.properties、sku.quantity等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>sold_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品销量</desc>
</prop>
<prop>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品新旧程度(全新:new，闲置:unused，二手：second)</desc>
</prop>
<prop>
<name>sub_stock</name>
<type>Number</type>
<level>Basic</level>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存</desc>
</prop>
<prop>
<name>sub_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品的子标题，给商品增加卖点等描述</desc>
</prop>
<prop>
<name>template_id</name>
<type>String</type>
<level>Basic</level>
<desc>页面模板id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题,不能超过60字节</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>商品类型(fixed:一口价;auction:拍卖)注：取消团购</desc>
</prop>
<prop>
<name>valid_thru</name>
<type>Number</type>
<level>Basic</level>
<desc>有效期,7或者14（默认是7天）</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>该字段废弃，请勿使用。</desc>
</prop>
<prop>
<name>videos</name>
<type>Video</type>
<level>Object Array</level>
<desc>商品视频列表(目前只支持单个视频关联)。fields中只设置video可以返回Video结构体中所有字段，如果设置为video.id、video.video_id、 
video.url等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>violation</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否违规，违规：true , 不违规：false</desc>
</prop>
<prop>
<name>wap_desc</name>
<type>String</type>
<level>Basic</level>
<desc>不带html标签的desc文本信息，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>wap_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>适合wap应用的商品详情url ，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>wireless_desc</name>
<type>String</type>
<level>Basic</level>
<desc>无线的宝贝描述</desc>
</prop>
<prop>
<name>with_hold_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>预扣库存，即付款减库存的商品现在有多少处于未付款状态的订单</desc>
</prop>
<prop>
<name>ww_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品所属的商家的旺旺在线状况， 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemBatchInventory</name>
<desc>商品的库存信息和批次信息</desc>
<props>
<prop>
<name>item_batch</name>
<type>WlbItemBatch</type>
<level>Object Array</level>
<desc>批次库存查询结果</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>item_inventorys</name>
<type>WlbItemInventory</type>
<level>Object Array</level>
<desc>商品库存查询结果</desc>
</prop>
<prop>
<name>total_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品在所有仓库的可销库存总数</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemInventory</name>
<desc>物流宝商品库存</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>lock_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>锁定库存数量</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>库存数量</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>SELLALBE 可销售库存 
DEFECTIVE 残次 
JISHUN 机损 
XIANGSHUN 箱损 
FREEZE 冻结库存 
ONROAD 在途库存</desc>
</prop>
</props>
</struct>
<struct>
<name>VideoItem</name>
<desc>视频</desc>
<props>
<prop>
<name>cover_url</name>
<type>String</type>
<level>Basic</level>
<desc>视频封面url</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>视频描述</desc>
</prop>
<prop>
<name>duration</name>
<type>Number</type>
<level>Basic</level>
<desc>视频时长</desc>
</prop>
<prop>
<name>is_open_to_other</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否允许他人观看</desc>
</prop>
<prop>
<name>state</name>
<type>Number</type>
<level>Basic</level>
<desc>视频状态：等待转码（1），转码中（2），转码失败（3），等待审核（4），未通过审核（5），通过审核（6）</desc>
</prop>
<prop>
<name>tags</name>
<type>String</type>
<level>Basic Array</level>
<desc>视频标签</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>视频标题</desc>
</prop>
<prop>
<name>upload_time</name>
<type>Date</type>
<level>Basic</level>
<desc>视频上传时间</desc>
</prop>
<prop>
<name>uploader_id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频上传者数字id</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频id</desc>
</prop>
<prop>
<name>video_play_info</name>
<type>VideoPlayInfo</type>
<level>Object</level>
<desc>视频播放地址</desc>
</prop>
</props>
</struct>
<struct>
<name>VideoPlayInfo</name>
<desc>视频播放信息</desc>
<props>
<prop>
<name>androidpad_url</name>
<type>String</type>
<level>Basic</level>
<desc>android  pad兼播放的m3u8列表文件（包含多码率）。适用大于等于3.0版本Android。</desc>
</prop>
<prop>
<name>androidpad_v23_url</name>
<type>AndroidVlowUrl</type>
<level>Object</level>
<desc>android pad播放的mp4文件列表。适用2.3版本的Android</desc>
</prop>
<prop>
<name>androidphone_url</name>
<type>String</type>
<level>Basic</level>
<desc>android  phone播放的m3u8列表文件（包含多码率，）。适用大于等于3.0版本Android。</desc>
</prop>
<prop>
<name>androidphone_v23_url</name>
<type>AndroidVlowUrl</type>
<level>Object</level>
<desc>android  phone播放的mp4文件列表。适用2.3版本的Android。</desc>
</prop>
<prop>
<name>flash_url</name>
<type>String</type>
<level>Basic</level>
<desc>Flash播放器地址，可直接通过PC浏览器播放</desc>
</prop>
<prop>
<name>ipad_url</name>
<type>String</type>
<level>Basic</level>
<desc>ipad播放的m3u8列表文件（包含多码率）</desc>
</prop>
<prop>
<name>iphone_url</name>
<type>String</type>
<level>Basic</level>
<desc>iphone播放的m3u8列表文件（包含多码率）</desc>
</prop>
<prop>
<name>web_url</name>
<type>String</type>
<level>Basic</level>
<desc>Web嵌入html代码，可直接嵌入页面中，支持html5的video标签，支持HLS播放协议最终返回m3u8资源，否则返回mp4资源</desc>
</prop>
</props>
</struct>
<struct>
<name>TOPSearchResult</name>
<desc>搜索返回的结果类</desc>
<props>
<prop>
<name>paginator</name>
<type>TOPPaginator</type>
<level>Object</level>
<desc>分页信息</desc>
</prop>
<prop>
<name>video_items</name>
<type>VideoItem</type>
<level>Object Array</level>
<desc>视频列表</desc>
</prop>
</props>
</struct>
<struct>
<name>Range</name>
<desc>营销工具的范围类！</desc>
<props>
<prop>
<name>participate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>营销范围参与者id。即MarketingRangeDO中的participateId。</desc>
</prop>
<prop>
<name>participate_type</name>
<type>Number</type>
<level>Basic</level>
<desc>营销范围参与者类型。MarketingRangeDO中的participateType。(1:商品;2:店铺;3:seller;4:sku;5:category;6:shopCategory)</desc>
</prop>
</props>
</struct>
<struct>
<name>SpItem</name>
<desc>商品信息</desc>
<props>
<prop>
<name>final_price</name>
<type>String</type>
<level>Basic</level>
<desc>商品优惠价格, 如果为空则无优惠.精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>item_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的URL</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址</desc>
</prop>
<prop>
<name>seller_id</name>
<type>String</type>
<level>Basic</level>
<desc>卖家数字ID</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的链接URL</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>tk</name>
<type>String</type>
<level>Basic</level>
<desc>是否是淘客商品（0-非淘客商品，5-淘客商品）</desc>
</prop>
</props>
</struct>
<struct>
<name>TOPPaginator</name>
<desc>分页信息</desc>
<props>
<prop>
<name>current_page</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。</desc>
</prop>
<prop>
<name>is_last_page</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否最后一页</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页条数。默认值：12</desc>
</prop>
<prop>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerAuthorize</name>
<desc>授权</desc>
<props>
<prop>
<name>brands</name>
<type>Brand</type>
<level>Object Array</level>
<desc>品牌列表</desc>
</prop>
<prop>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>类目列表</desc>
</prop>
<prop>
<name>xinpin_item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>被授权的新品类目列表</desc>
</prop>
</props>
</struct>
<struct>
<name>SpItemInfo</name>
<desc>多条件批量获取的商品的信息</desc>
<props>
<prop>
<name>final_price</name>
<type>String</type>
<level>Basic</level>
<desc>商品优惠价格, 如果为空则无优惠.精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>item_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的URL</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格.精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>seller_id</name>
<type>String</type>
<level>Basic</level>
<desc>卖家数字ID</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的链接URL</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>tk</name>
<type>String</type>
<level>Basic</level>
<desc>是否是淘客商品（0-非淘客商品，5-淘客商品）</desc>
</prop>
<prop>
<name>tmall</name>
<type>String</type>
<level>Basic</level>
<desc>是否天猫： 1是，0否</desc>
</prop>
</props>
</struct>
<struct>
<name>SpShop</name>
<desc>店铺信息的数据结构</desc>
<props>
<prop>
<name>gerd</name>
<type>String</type>
<level>Basic</level>
<desc>店铺好评率，即店铺累计好评数/店铺评价总数。</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>String</type>
<level>Basic</level>
<desc>卖家信用等级,如果是天猫店铺则返回空值</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺标题</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的链接URL</desc>
</prop>
<prop>
<name>tmall</name>
<type>String</type>
<level>Basic</level>
<desc>是否天猫： 1是，0否</desc>
</prop>
</props>
</struct>
<struct>
<name>ImprFeedInfoDO</name>
<desc>大家印象标签对应评价信息对象</desc>
<props>
<prop>
<name>biz_type</name>
<type>Number</type>
<level>Basic</level>
<desc>1:主评  2:追评</desc>
</prop>
<prop>
<name>feedback</name>
<type>String</type>
<level>Basic</level>
<desc>评价内容</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>评价创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>评价的修改时间</desc>
</prop>
<prop>
<name>impr_words</name>
<type>String</type>
<level>Basic Array</level>
<desc>从评价内容里提取的语义标签</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemProp</name>
<desc>商品属性</desc>
<props>
<prop>
<name>child_template</name>
<type>String</type>
<level>Basic</level>
<desc>子属性的模板（卖家自行输入属性时需要用到）</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>属性的feature列表</desc>
</prop>
<prop>
<name>is_allow_alias</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否允许别名。可选值：true（是），false（否）</desc>
</prop>
<prop>
<name>is_color_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否颜色属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_enum_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是可枚举属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_input_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否)。&lt;b&gt;对于品牌和型号属性（包括子属性）：如果用户是C卖家，则可自定义属性；如果是B卖家，则不可自定义属性，而必须要授权的属性。&lt;/b&gt;</desc>
</prop>
<prop>
<name>is_item_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否商品属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_key_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_sale_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>属性修改时间（增量类目专用）</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete（增量类目专用）</desc>
</prop>
<prop>
<name>multi</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否可以多选。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>must</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否为必选属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名</desc>
</prop>
<prop>
<name>parent_pid</name>
<type>Number</type>
<level>Basic</level>
<desc>上级属性ID</desc>
</prop>
<prop>
<name>parent_vid</name>
<type>Number</type>
<level>Basic</level>
<desc>上级属性值ID</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性 ID 例：品牌的PID=20000</desc>
</prop>
<prop>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<desc/>
</prop>
<prop>
<name>required</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否为必选属性(与must相同)。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号。取值范围:大于零的整排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>属性值类型。可选值： 
multiCheck(枚举多选) 
optional(枚举单选) 
multiCheckText(枚举可输入多选) 
optionalText(枚举可输入单选) 
text(非枚举可输入)</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryAnalysis</name>
<desc>类目数据分析对象</desc>
<props>
<prop>
<name>category_area_per</name>
<type>String</type>
<level>Basic</level>
<desc>地域占比 
格式： 
地域名称:占比;地域名称:占比;</desc>
</prop>
<prop>
<name>category_hp_price</name>
<type>String</type>
<level>Basic</level>
<desc>竞价分布 
格式： 
宝贝数:价格;宝贝数:价格;</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_source_per</name>
<type>String</type>
<level>Basic</level>
<desc>来源占比 
格式： 
来源名称:比例;来源名称:比例;</desc>
</prop>
</props>
</struct>
<struct>
<name>INWordAnalysis</name>
<desc>词数据分析对象</desc>
<props>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
<prop>
<name>word_area_per</name>
<type>String</type>
<level>Basic</level>
<desc>词地域占比 
格式： 
地域名称:比例;地域名称2:比例2;</desc>
</prop>
<prop>
<name>word_hp_price</name>
<type>String</type>
<level>Basic</level>
<desc>词竞价分布 
格式： 
宝贝数:价格;宝贝数:价格;</desc>
</prop>
<prop>
<name>word_source_per</name>
<type>String</type>
<level>Basic</level>
<desc>词来源占比 
格式： 
来源名称1:比例值;来源名称2:比例值;</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryTop</name>
<desc>类目对象</desc>
<props>
<prop>
<name>category_child_top_list</name>
<type>INCategoryChildTop</type>
<level>Object Array</level>
<desc>子类目列表</desc>
</prop>
<prop>
<name>category_desc</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性描述</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目对象id</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_properties_list</name>
<type>INCategoryProperties</type>
<level>Object Array</level>
<desc>类目属性对象列表</desc>
</prop>
<prop>
<name>categroy_word</name>
<type>String</type>
<level>Basic</level>
<desc>用户输入的词</desc>
</prop>
</props>
</struct>
<struct>
<name>Picture</name>
<desc>图片</desc>
<props>
<prop>
<name>client_type</name>
<type>String</type>
<level>Basic</level>
<desc>图片上传的来源，有电脑版本宝贝发布，手机版本宝贝发布</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片的创建时间</desc>
</prop>
<prop>
<name>deleted</name>
<type>String</type>
<level>Basic</level>
<desc>图片是否删除的标记</desc>
</prop>
<prop>
<name>md5</name>
<type>String</type>
<level>Basic</level>
<desc>图片在后台处理之后的md5值 
当md5值为32位长度的字符串时为图片搬家后的文件md5验证码 
md5值为长整数时为图片替换后的时间戳</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>图片的修改时间</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片ID</desc>
</prop>
<prop>
<name>picture_path</name>
<type>String</type>
<level>Basic</level>
<desc>返回的是绝对路径如：http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg</desc>
</prop>
<prop>
<name>pixel</name>
<type>String</type>
<level>Basic</level>
<desc>图片相素,格式:长x宽，如450x150</desc>
</prop>
<prop>
<name>referenced</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片是否被引用</desc>
</prop>
<prop>
<name>sizes</name>
<type>Number</type>
<level>Basic</level>
<desc>图片大小,bite单位</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>图片状态,unfroze代表没有被冻结，froze代表被冻结,pass代表排查通过</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>图片标题</desc>
</prop>
<prop>
<name>uid</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
</props>
</struct>
<struct>
<name>INWordCategory</name>
<desc>词和类目数据对象</desc>
<props>
<prop>
<name>avg_price</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下平均点击价格</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>click</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下点击量</desc>
</prop>
<prop>
<name>competition</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下竞争宝贝数(包括未展现客户)</desc>
</prop>
<prop>
<name>ctr</name>
<type>Price</type>
<level>Basic</level>
<desc>点击率</desc>
</prop>
<prop>
<name>date</name>
<type>Date</type>
<level>Basic</level>
<desc>时间点</desc>
</prop>
<prop>
<name>pv</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下展现量</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Area</name>
<desc>地址区域结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>标准行政区域代码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20120105_402777427.htm</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>地域名称.如北京市,杭州市,西湖区,每一个area_id 都代表了一个具体的地区.</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父节点区域标识.如北京市的area_id是110100,朝阳区是北京市的一个区,所以朝阳区的parent_id就是北京市的area_id.</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>区域类型.area区域 1:country/国家;2:province/省/自治区/直辖市;3:city/地区(省下面的地级市);4:district/县/市(县级市)/区;abroad:海外. 比如北京市的area_type = 2,朝阳区是北京市的一个区,所以朝阳区的area_type = 4.</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>具体一个地区的邮编</desc>
</prop>
</props>
</struct>
<struct>
<name>INWordBase</name>
<desc>词基础数据对象</desc>
<props>
<prop>
<name>in_record_base_list</name>
<type>INRecordBase</type>
<level>Object Array</level>
<desc>词数据信息列表</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>CouponResult</name>
<desc>发放成功的优惠券的信息，包括couponNumber和buyerNick</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>张三</desc>
</prop>
<prop>
<name>coupon_number</name>
<type>Number</type>
<level>Basic</level>
<desc>已经发放优惠券的编号</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsCompany</name>
<desc>物流公司基础数据结构</desc>
<props>
<prop>
<name>code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司标识</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>reg_mail_no</name>
<type>String</type>
<level>Basic</level>
<desc>运单号验证正则表达式</desc>
</prop>
</props>
</struct>
<struct>
<name>AndroidVlowUrl</name>
<desc>android  phone和pad播放的mp4文件类。适用2.3版本的Android。</desc>
<props>
<prop>
<name>hd</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的高清mp4文件。适用2.3版本的Android</desc>
</prop>
<prop>
<name>ld</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的流畅mp4文件。适用2.3版本的Android</desc>
</prop>
<prop>
<name>sd</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的标清mp4文件。适用2.3版本的Android</desc>
</prop>
<prop>
<name>ud</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的超清mp4文件。适用2.3版本的Android</desc>
</prop>
</props>
</struct>
<struct>
<name>Shipping</name>
<desc>获取的物流订单详情列表 返回的Shipping包含的具体信息为入参fields请求的字段信息</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>运单创建时间</desc>
</prop>
<prop>
<name>delivery_end</name>
<type>Date</type>
<level>Basic</level>
<desc>预约取货结束时间</desc>
</prop>
<prop>
<name>delivery_start</name>
<type>Date</type>
<level>Basic</level>
<desc>预约取货开始时间</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>谁承担运费.可选值:buyer(买家承担),seller(卖家承担运费).</desc>
</prop>
<prop>
<name>is_quick_cod_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标示为是否快捷COD订单</desc>
</prop>
<prop>
<name>is_spilt</name>
<type>Number</type>
<level>Basic</level>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</prop>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回发货是否成功。</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>货物名称</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>收件人地址信息(在传输请求参数Fields字段时，必须使用“receiver_location”才能返回此字段)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>运单修改时间</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单编号</desc>
</prop>
<prop>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<desc>运单号.具体一个物流公司的运单号码.</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收件人手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收件人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收件人电话</desc>
</prop>
<prop>
<name>seller_confirm</name>
<type>String</type>
<level>Basic</level>
<desc>卖家是否确认发货.可选值:yes(是),no(否).</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单状态,可选值: 
CREATED(订单已创建)  
RECREATED(订单重新创建)  
CANCELLED(订单已取消)  
CLOSED(订单关闭)  
SENDING(等候发送给物流公司)  
ACCEPTING(已发送给物流公司,等待接单)  
ACCEPTED(物流公司已接单)  
REJECTED(物流公司不接单)  
PICK_UP(物流公司揽收成功)  
PICK_UP_FAILED(物流公司揽收失败)  
LOST(物流公司丢单)  
REJECTED_BY_RECEIVER(对方拒签)  
ACCEPTED_BY_RECEIVER(发货方式在线下单：对方已签收；自己联系：卖家已发货)</desc>
</prop>
<prop>
<name>sub_tids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>拆单子订单列表，对应的数据是：该物流订单下的全部子订单</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易ID</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
</props>
</struct>
<struct>
<name>INRecordBase</name>
<desc>词基础数据对象</desc>
<props>
<prop>
<name>avg_price</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下平均点击价格</desc>
</prop>
<prop>
<name>click</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下点击量</desc>
</prop>
<prop>
<name>competition</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下竞争宝贝数(包括未展现客户)</desc>
</prop>
<prop>
<name>ctr</name>
<type>Price</type>
<level>Basic</level>
<desc>点击率</desc>
</prop>
<prop>
<name>date</name>
<type>Date</type>
<level>Basic</level>
<desc>时间点</desc>
</prop>
<prop>
<name>pv</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下展现量</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeRate</name>
<desc>评价列表</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>评价内容,最大长度:500个汉字</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>评价创建时间,格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格,精确到2位小数;单位:元.如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>评价者昵称</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的数字ID</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单ID</desc>
</prop>
<prop>
<name>rated_nick</name>
<type>String</type>
<level>Basic</level>
<desc>被评价者昵称</desc>
</prop>
<prop>
<name>reply</name>
<type>String</type>
<level>Basic</level>
<desc>评价解释,最大长度:500个汉字</desc>
</prop>
<prop>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</prop>
<prop>
<name>role</name>
<type>String</type>
<level>Basic</level>
<desc>评价者角色.可选值:seller(卖家),buyer(买家)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易ID</desc>
</prop>
<prop>
<name>valid_score</name>
<type>Boolean</type>
<level>Basic</level>
<desc>评价信息是否用于记分， 
可取值：true(参与记分)和false(不参与记分)</desc>
</prop>
</props>
</struct>
<struct>
<name>IpcInventoryDetailDo</name>
<desc>库存明细</desc>
<props>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主订单号</desc>
</prop>
<prop>
<name>biz_sub_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号</desc>
</prop>
<prop>
<name>flag</name>
<type>Number</type>
<level>Basic</level>
<desc>1拍减 2付减</desc>
</prop>
<prop>
<name>occupy_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>占用数量</desc>
</prop>
<prop>
<name>owner_nick</name>
<type>String</type>
<level>Basic</level>
<desc>货主昵称</desc>
</prop>
<prop>
<name>reserve_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>预扣库存数</desc>
</prop>
<prop>
<name>sc_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>仓储商品id</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryBase</name>
<desc>类目基础数据对象</desc>
<props>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_pv</name>
<type>Number</type>
<level>Basic</level>
<desc>类目展现量</desc>
</prop>
<prop>
<name>in_record_base_list</name>
<type>INRecordBase</type>
<level>Object Array</level>
<desc>类目数据信息列表</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallRefundMessage</name>
<desc>退款留言</desc>
<props>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>message_content</name>
<type>String</type>
<level>Basic</level>
<desc>留言内容</desc>
</prop>
<prop>
<name>message_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款留言</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款单编号</desc>
</prop>
<prop>
<name>refund_phase</name>
<type>String</type>
<level>Basic</level>
<desc>onsale:售中 
aftersale：售后</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>留言用户昵称</desc>
</prop>
<prop>
<name>user_role</name>
<type>String</type>
<level>Basic</level>
<desc>留言用户角色</desc>
</prop>
<prop>
<name>voucher_urls</name>
<type>String</type>
<level>Basic</level>
<desc>举证信息</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoSku</name>
<desc>分销产品SKU</desc>
<props>
<prop>
<name>cost_price</name>
<type>String</type>
<level>Basic</level>
<desc>代销采购价，单位：元</desc>
</prop>
<prop>
<name>dealer_cost_price</name>
<type>String</type>
<level>Basic</level>
<desc>经销采购价</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>SkuID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>名称</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>sku的销售属性组合字符串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>库存</desc>
</prop>
<prop>
<name>quota_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>配额可用库存</desc>
</prop>
<prop>
<name>reserved_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>预扣库存</desc>
</prop>
<prop>
<name>scitem_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关联的后端商品id</desc>
</prop>
<prop>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<desc>市场价</desc>
</prop>
</props>
</struct>
<struct>
<name>Tag</name>
<desc>标签信息</desc>
<props>
<prop>
<name>tag_key</name>
<type>String</type>
<level>Basic</level>
<desc>标签key</desc>
</prop>
<prop>
<name>tag_name</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称</desc>
</prop>
<prop>
<name>tag_type</name>
<type>String</type>
<level>Basic</level>
<desc>签标类型</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundItem</name>
<desc>退款商品信息</desc>
<props>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品外部商家编码</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>sku</name>
<type>String</type>
<level>Basic</level>
<desc>sku信息</desc>
</prop>
</props>
</struct>
<struct>
<name>DdTopAuctionRuleVO</name>
<desc>商品规则</desc>
<props>
<prop>
<name>day_ends</name>
<type>Number</type>
<level>Basic</level>
<desc>结束时间</desc>
</prop>
<prop>
<name>day_starts</name>
<type>Number</type>
<level>Basic</level>
<desc>每天的开始时间， 格式：10000*hh+100*mm+ss</desc>
</prop>
<prop>
<name>features</name>
<type>String</type>
<level>Basic</level>
<desc>扩展属性</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>规则ID</desc>
</prop>
<prop>
<name>is_diandian</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是到店</desc>
</prop>
<prop>
<name>is_takeout</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是外卖</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>规则名</desc>
</prop>
<prop>
<name>rule_ends</name>
<type>Date</type>
<level>Basic</level>
<desc>规则结束时间</desc>
</prop>
<prop>
<name>rule_starts</name>
<type>Date</type>
<level>Basic</level>
<desc>规则开始时间</desc>
</prop>
<prop>
<name>sort</name>
<type>Number</type>
<level>Basic</level>
<desc>排序</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态</desc>
</prop>
<prop>
<name>store_id</name>
<type>String</type>
<level>Basic</level>
<desc>商铺ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
<prop>
<name>weeklys</name>
<type>String</type>
<level>Basic</level>
<desc>周期轮询0,1,2,3通过逗号间隔</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryProperties</name>
<desc>类目属性对象</desc>
<props>
<prop>
<name>properties_desc</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性对象描述</desc>
</prop>
<prop>
<name>properties_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目属性对象ID</desc>
</prop>
<prop>
<name>properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性名称</desc>
</prop>
</props>
</struct>
<struct>
<name>ReturnBill</name>
<desc>退货单</desc>
<props>
<prop>
<name>bill_type</name>
<type>String</type>
<level>Basic</level>
<desc>单据类型</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司</desc>
</prop>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<desc>退款创建时间</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>item_list</name>
<type>RefundItem</type>
<level>Object Array</level>
<desc>退款商品信息</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<desc>最后一次修改时间</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易子订单号</desc>
</prop>
<prop>
<name>operation_log</name>
<type>String</type>
<level>Basic</level>
<desc>退货单操作日志</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>申请退款原因</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款单编号</desc>
</prop>
<prop>
<name>refund_phase</name>
<type>String</type>
<level>Basic</level>
<desc>onsale:售中 
aftersale：售后</desc>
</prop>
<prop>
<name>refund_version</name>
<type>Number</type>
<level>Basic</level>
<desc>退款协议版本</desc>
</prop>
<prop>
<name>sid</name>
<type>String</type>
<level>Basic</level>
<desc>物流运单号</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>退款单 状态 
wait_buyer_return_goods：卖家同意退货 
wait_seller_confirm_goods：买家已退款等待卖家确认 
confirm_success：卖家已同意退款 
confirm_failed: 卖家已拒绝退款</desc>
</prop>
<prop>
<name>tag_list</name>
<type>Tag</type>
<level>Object Array</level>
<desc>退款单的相关标签信息</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易主订单号</desc>
</prop>
</props>
</struct>
<struct>
<name>Permission</name>
<desc>权限信息</desc>
<props>
<prop>
<name>is_authorize</name>
<type>Number</type>
<level>Basic</level>
<desc>1 :允许授权  2：不允许授权 6：不允许授权但默认已有权限</desc>
</prop>
<prop>
<name>parent_code</name>
<type>String</type>
<level>Basic</level>
<desc>父权限code</desc>
</prop>
<prop>
<name>permission_code</name>
<type>String</type>
<level>Basic</level>
<desc>注册到权限中心的code值</desc>
</prop>
<prop>
<name>permission_name</name>
<type>String</type>
<level>Basic</level>
<desc>权限名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Receiver</name>
<desc>收货人详细信息</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的详细地址信息</desc>
</prop>
<prop>
<name>card_id</name>
<type>String</type>
<level>Basic</level>
<desc>证件号</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的城市</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<desc>区/县</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>移动电话。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人全名。</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>固定电话。</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<desc>收货人所在省份</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundBill</name>
<desc>退款单</desc>
<props>
<prop>
<name>actual_refund_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>实际退款金额</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>attribute</name>
<type>String</type>
<level>Basic</level>
<desc>扩展属性</desc>
</prop>
<prop>
<name>bill_type</name>
<type>String</type>
<level>Basic</level>
<desc>单据类型，退款单</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<desc>退款创建时间</desc>
</prop>
<prop>
<name>cs_status</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝小二是否介入</desc>
</prop>
<prop>
<name>current_phase_timeout</name>
<type>String</type>
<level>Basic</level>
<desc>当前状态超时时间</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>item_list</name>
<type>RefundItem</type>
<level>Object Array</level>
<desc>退款商品信息</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<desc>最后一次修改时间</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易子订单号</desc>
</prop>
<prop>
<name>operation_constraint</name>
<type>String</type>
<level>Basic</level>
<desc>cannot_refuse: 不允许操作 
refund_onweb: 需要到网页版操作</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>申请退款原因</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>申请退款金额，单位：分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款单编号</desc>
</prop>
<prop>
<name>refund_phase</name>
<type>String</type>
<level>Basic</level>
<desc>onsale:售中 
aftersale：售后</desc>
</prop>
<prop>
<name>refund_type</name>
<type>String</type>
<level>Basic</level>
<desc>refund:仅退款 
return:退款退货</desc>
</prop>
<prop>
<name>refund_version</name>
<type>Number</type>
<level>Basic</level>
<desc>退款协议版本</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>退款单 状态 
wait_seller_agree：买家申请，等待卖家同意 
seller_refuse：卖家拒绝 
goods_returning：退货中 
closed：退款失败 
success：退款成功</desc>
</prop>
<prop>
<name>tag_list</name>
<type>Tag</type>
<level>Object Array</level>
<desc>退款单的相关标签信息</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易主订单号</desc>
</prop>
<prop>
<name>trade_status</name>
<type>String</type>
<level>Basic</level>
<desc>wait_send_good:等待卖家发货 
wait_confirm_good：卖家已发货，等待买家确认收货 
finish: 交易完成</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryChildTop</name>
<desc>类目对象</desc>
<props>
<prop>
<name>category_desc</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性描述</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目对象id</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_properties_list</name>
<type>INCategoryProperties</type>
<level>Object Array</level>
<desc>类目属性对象列表</desc>
</prop>
</props>
</struct>
<struct>
<name>LoginUser</name>
<desc>登录分销用户信息</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>入驻时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>会员NICK</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销用户ID</desc>
</prop>
<prop>
<name>user_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销用户类型(1:分销商，2:供应商，3:品牌商；2、3都表示有供货能力，只是身份不同)</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemDescModule</name>
<desc>商品详情模块</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>描述具体内容</desc>
</prop>
<prop>
<name>intros</name>
<type>String</type>
<level>Basic</level>
<desc>一个List&lt;String&gt;的Json串，里面是模块引导提示，不超过3条（isv提交时可忽略不传）</desc>
</prop>
<prop>
<name>module_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模块id ,(注意:用户自定义模块不用填此项。)</desc>
</prop>
<prop>
<name>module_name</name>
<type>String</type>
<level>Basic</level>
<desc>模块名称</desc>
</prop>
<prop>
<name>required</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否必填 （isv提交时可忽略不传）</desc>
</prop>
<prop>
<name>tpl_urls</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝图片空间的地址链接，示例模板，最多不超过三个（isv提交时可忽略不传）</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>cat_mod:表示是运营设置的类目维度模块，usr_mod表示的是商家自定义模块。</desc>
</prop>
</props>
</struct>
<struct>
<name>ModularDescInfo</name>
<desc>商品描述模块化信息，包含类目级别的模块信息以及用户自定义模块约束等其他信息</desc>
<props>
<prop>
<name>dead_line</name>
<type>String</type>
<level>Basic</level>
<desc>旧描述与新描述共存时间（切换时间）。</desc>
</prop>
<prop>
<name>itm_dsc_modules</name>
<type>ItemDescModule</type>
<level>Object Array</level>
<desc>运营定义的该商品所属类目的类目级别模块信息列表，列表顺序即为模块顺序。</desc>
</prop>
<prop>
<name>user_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>默认值为false，如果此字段为true，则卖家上传的模块化的描述信息可以自定义排序。</desc>
</prop>
<prop>
<name>usr_def_max_num</name>
<type>Number</type>
<level>Basic</level>
<desc>用户自定义模块数量最大值限制。类目级别模块+用户级别模块必须小于&lt;20</desc>
</prop>
</props>
</struct>
<struct>
<name>QualityUsageDetail</name>
<desc>质检订单使用明细</desc>
<props>
<prop>
<name>application_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>该订单已经使用的数量</desc>
</prop>
<prop>
<name>article_item_code</name>
<type>String</type>
<level>Basic</level>
<desc>质检服务的收费项目码</desc>
</prop>
<prop>
<name>available_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>该订单中尚未使用的数量</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>该订单的到期时间</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>该订单中每个质检服务的价格</desc>
</prop>
<prop>
<name>purchas_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>该订单订购的数量</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>该订单的开通时间</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订购ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
</props>
</struct>
<struct>
<name>PurchaseOrder</name>
<desc>采购单及子采购单信息</desc>
<props>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号。</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家nick，供应商查询不会返回买家昵称，分销商查询才会返回。</desc>
</prop>
<prop>
<name>buyer_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>买家支付给分销商的总金额。注意买家购买的商品可能不是全部来自同一供货商，请同时参考子单上的相关金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>buyer_taobao_id</name>
<type>String</type>
<level>Basic</level>
<desc>加密后的买家淘宝ID，长度为32位</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<desc>物流发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>采购单创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>distributor_from</name>
<type>String</type>
<level>Basic</level>
<desc>分销商来源网站（taobao）。</desc>
</prop>
<prop>
<name>distributor_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商实付金额。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>distributor_username</name>
<type>String</type>
<level>Basic</level>
<desc>分销商在来源网站的帐号名。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易结束时间</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>主订单属性信息，key-value形式： 
orderNovice ：订单发票抬头； 
orderNoviceContent ：代表发票明细</desc>
</prop>
<prop>
<name>fenxiao_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销流水号，分销平台产生的主键</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商交易ID 非采购单ID，如果改发货状态 是需要该ID，ID在用户未付款前为0，付款后有具体值（发货时使用该ID）</desc>
</prop>
<prop>
<name>isv_custom_key</name>
<type>String</type>
<level>Basic Array</level>
<desc>自定义key</desc>
</prop>
<prop>
<name>isv_custom_value</name>
<type>String</type>
<level>Basic Array</level>
<desc>自定义值</desc>
</prop>
<prop>
<name>logistics_company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司</desc>
</prop>
<prop>
<name>logistics_id</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>采购单留言。（代销模式下信息包括买家留言和分销商留言）</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>交易修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>order_messages</name>
<type>OrderMessage</type>
<level>Object Array</level>
<desc>采购单留言列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>pay_type</name>
<type>String</type>
<level>Basic</level>
<desc>支付方式：ALIPAY_SURETY（支付宝担保交易）、ALIPAY_CHAIN（分账交易）、TRANSFER（线下转账）、PREPAY（预存款）、IMMEDIATELY（即时到账）、CASHGOODS（先款后货）</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>采购单邮费。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>receiver</name>
<type>Receiver</type>
<level>Object</level>
<desc>买家详细的信息。</desc>
</prop>
<prop>
<name>shipping</name>
<type>String</type>
<level>Basic</level>
<desc>配送方式，FAST(快速)、EMS、ORDINARY(平邮)、SELLER(卖家包邮)</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>采购单交易状态。可选值：&lt;br&gt;
WAIT_BUYER_PAY(等待付款)&lt;br&gt;
WAIT_SELLER_SEND_GOODS(已付款，待发货）&lt;br&gt;
WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)&lt;br&gt;
TRADE_FINISHED(交易成功)&lt;br&gt;
TRADE_CLOSED(交易关闭)&lt;br&gt;
WAIT_BUYER_CONFIRM_GOODS_ACOUNTED(已付款（已分账），已发货。只对代销分账支持)&lt;br&gt;
PAY_ACOUNTED_GOODS_CONFIRM （已分账发货成功）&lt;br&gt;
PAY_WAIT_ACOUNT_GOODS_CONFIRM（已付款，确认收货）</desc>
</prop>
<prop>
<name>sub_purchase_orders</name>
<type>SubPurchaseOrder</type>
<level>Object Array</level>
<desc>子订单的详细信息列表。</desc>
</prop>
<prop>
<name>supplier_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>返回供应商备注旗帜 
vlaue在1-5之间。非1-5之间，都采用1作为默认。 1:红色 2:黄色 3:绿色 4:蓝色 5:粉红色</desc>
</prop>
<prop>
<name>supplier_from</name>
<type>String</type>
<level>Basic</level>
<desc>供应商来源网站, values: taobao, alibaba</desc>
</prop>
<prop>
<name>supplier_memo</name>
<type>String</type>
<level>Basic</level>
<desc>供应商备注</desc>
</prop>
<prop>
<name>supplier_username</name>
<type>String</type>
<level>Basic</level>
<desc>供应商在来源网站的帐号名。</desc>
</prop>
<prop>
<name>tc_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主订单ID （经销不显示）</desc>
</prop>
<prop>
<name>total_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>采购单总额（不含邮费,精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式：AGENT（代销）、DEALER（经销）</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoProduct</name>
<desc>分销产品</desc>
<props>
<prop>
<name>alarm_number</name>
<type>Number</type>
<level>Basic</level>
<desc>警戒库存</desc>
</prop>
<prop>
<name>category_id</name>
<type>String</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>所在地：市</desc>
</prop>
<prop>
<name>cost_price</name>
<type>Price</type>
<level>Basic</level>
<desc>采购价格，单位：元。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>dealer_cost_price</name>
<type>Price</type>
<level>Basic</level>
<desc>经销采购价</desc>
</prop>
<prop>
<name>desc_path</name>
<type>String</type>
<level>Basic</level>
<desc>产品描述路径，通过http请求获取</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>产品描述的内容</desc>
</prop>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣ID（新增参数）</desc>
</prop>
<prop>
<name>have_guarantee</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有保修，可选值：false（否）、true（是）</desc>
</prop>
<prop>
<name>have_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有发票，可选值：false（否）、true（是）</desc>
</prop>
<prop>
<name>images</name>
<type>FenxiaoImage</type>
<level>Object Array</level>
<desc>产品图片</desc>
</prop>
<prop>
<name>input_properties</name>
<type>String</type>
<level>Basic</level>
<desc>自定义属性，格式为pid:value;pid:value</desc>
</prop>
<prop>
<name>is_authz</name>
<type>String</type>
<level>Basic</level>
<desc>查询产品列表时，查询入参增加is_authz:yes|no  
yes:需要授权  
no:不需要授权</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>导入的商品ID</desc>
</prop>
<prop>
<name>items_count</name>
<type>Number</type>
<level>Basic</level>
<desc>下载人数</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品名称</desc>
</prop>
<prop>
<name>orders_count</name>
<type>Number</type>
<level>Basic</level>
<desc>累计采购次数</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>pdus</name>
<type>FenxiaoPdu</type>
<level>Object Array</level>
<desc>产品分销商信息</desc>
</prop>
<prop>
<name>pictures</name>
<type>String</type>
<level>Basic</level>
<desc>产品图片路径</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>postage_ems</name>
<type>Price</type>
<level>Basic</level>
<desc>ems费用，单位：元</desc>
</prop>
<prop>
<name>postage_fast</name>
<type>Price</type>
<level>Basic</level>
<desc>快递费用，单位：元</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>运费模板ID</desc>
</prop>
<prop>
<name>postage_ordinary</name>
<type>Price</type>
<level>Basic</level>
<desc>平邮费用，单位：元</desc>
</prop>
<prop>
<name>postage_type</name>
<type>String</type>
<level>Basic</level>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）</desc>
</prop>
<prop>
<name>productcat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品线ID</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>产品属性，格式为pid:vid;pid:vid</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性别名，格式为pid:vid:alias;pid:vid:alias</desc>
</prop>
<prop>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<desc>所在地：省</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>产品库存</desc>
</prop>
<prop>
<name>query_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>根据商品ID查询时，返回这个产品对应的商品ID，只对分销商查询接口有效</desc>
</prop>
<prop>
<name>quota_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>配额可用库存</desc>
</prop>
<prop>
<name>reserved_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>预扣库存</desc>
</prop>
<prop>
<name>retail_price_high</name>
<type>Price</type>
<level>Basic</level>
<desc>最高零售价，单位：分。</desc>
</prop>
<prop>
<name>retail_price_low</name>
<type>Price</type>
<level>Basic</level>
<desc>最低零售价，单位：分。</desc>
</prop>
<prop>
<name>scitem_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关联的后端商品id</desc>
</prop>
<prop>
<name>skus</name>
<type>FenxiaoSku</type>
<level>Object Array</level>
<desc>sku列表</desc>
</prop>
<prop>
<name>spu_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品spu id</desc>
</prop>
<prop>
<name>standard_price</name>
<type>Price</type>
<level>Basic</level>
<desc>采购基准价，单位：元。</desc>
</prop>
<prop>
<name>standard_retail_price</name>
<type>Price</type>
<level>Basic</level>
<desc>零售基准价，单位：元</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>发布状态，可选值：up（上架）、down（下架）</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）</desc>
</prop>
<prop>
<name>upshelf_time</name>
<type>Date</type>
<level>Basic</level>
<desc>铺货时间</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductExtraInfo</name>
<desc>产品扩展信息</desc>
<props>
<prop>
<name>field_key</name>
<type>String</type>
<level>Basic</level>
<desc>产品扩展信息键</desc>
</prop>
<prop>
<name>field_name</name>
<type>String</type>
<level>Basic</level>
<desc>产品扩展信息名称</desc>
</prop>
<prop>
<name>field_value</name>
<type>String</type>
<level>Basic</level>
<desc>产品扩展信息简介</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserInfo</name>
<desc>子账号基本信息</desc>
<props>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>子账号姓名</desc>
</prop>
<prop>
<name>is_online</name>
<type>Number</type>
<level>Basic</level>
<desc>是否参与分流 1不参与 2参与</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号所属的主账号的唯一标识</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号昵称</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态 1正常 -1删除  2冻结</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
</props>
</struct>
<struct>
<name>JdpUser</name>
<desc>使用数据推送的用户信息</desc>
<props>
<prop>
<name>rds_name</name>
<type>String</type>
<level>Basic</level>
<desc>rds数据库的实例名</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>0:暂停 
1：正常 
2：sessoin失效，停止 
3：已删除</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>SubPurchaseOrder</name>
<desc>子采购单详细信息</desc>
<props>
<prop>
<name>auction_price</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商店铺中宝贝一口价</desc>
</prop>
<prop>
<name>bill_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>发票应开金额。根据买家实际付款去除邮费后，按各个子单(商品)金额比例进行分摊后的金额，仅供开发票时做票面金额参考。</desc>
</prop>
<prop>
<name>buyer_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>买家订单上对应的子单零售金额，除以num（数量）后等于最终宝贝的零售价格（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。格式 yyyy-MM-dd HH:mm:ss 。</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠活动的折扣金额</desc>
</prop>
<prop>
<name>distributor_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商实付金额=total_fee（分销商应付金额）+改价-优惠。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>Feature对象列表 
目前已有的属性： 
attr_key为 www，attr_value为1 表示是www子订单 
attr_key为 wwwStoreCode，attr_value 是www子订单发货的仓库编码 
attr_key为isWt,attr_value为1 表示是网厅子订单 
attr_key为wtInfo,attr_value为网厅相关合约信息</desc>
</prop>
<prop>
<name>fenxiao_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销平台的子采购单主键</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>子采购单id，淘宝交易主键，采购单未付款时为0.（只有支付宝 付款才有这个id，其余付款形式该字段为0）</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销平台上的产品id，同FenxiaoProduct 的pid</desc>
</prop>
<prop>
<name>item_outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>分销平台上商品商家编码。</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的采购数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>old_sku_properties</name>
<type>String</type>
<level>Basic</level>
<desc>老的SKU属性值。如: 颜色:红色:别名;尺码:L:别名</desc>
</prop>
<prop>
<name>order_200_status</name>
<type>String</type>
<level>Basic</level>
<desc>代销采购单对应下游200订单状态。 
可选值： 
WAIT_SELLER_SEND_GOODS(已付款，待发货) 
WAIT_BUYER_CONFIRM_GOODS(已付款，已发货) 
TRADE_CLOSED(已退款成功) 
TRADE_REFUNDING(退款中) 
TRADE_FINISHED(交易成功) 
TRADE_CLOSED_BY_TAOBAO(交易关闭)</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>产品的采购价格。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>promotion_type</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动类型 
0=无优惠 
1=限时折</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>退款金额</desc>
</prop>
<prop>
<name>sc_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>后端商品id</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的SKU id。当存在时才会有值，建议使用sku_outer_id，sku_properties这两个值</desc>
</prop>
<prop>
<name>sku_outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>SKU商家编码。</desc>
</prop>
<prop>
<name>sku_properties</name>
<type>String</type>
<level>Basic</level>
<desc>SKU属性值。如: 颜色:红色:别名;尺码:L:别名</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>快照地址。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。可选值：&lt;br&gt;
WAIT_BUYER_PAY(等待付款)&lt;br&gt;
WAIT_CONFIRM(付款信息待确认)&lt;br&gt;
WAIT_CONFIRM_WAIT_SEND_GOODS(付款信息待确认，待发货)&lt;br&gt;
WAIT_CONFIRM_SEND_GOODS(付款信息待确认，已发货)&lt;br&gt;
WAIT_CONFIRM_GOODS_CONFIRM(付款信息待确认，已收货)&lt;br&gt;
WAIT_SELLER_SEND_GOODS(已付款，待发货)&lt;br&gt;
WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)&lt;br&gt;
WAIT_BUYER_CONFIRM_GOODS_ACOUNTED(已付款（已分账），已发货。只对代销分账支持)&lt;br&gt;
CONFIRM_WAIT_SEND_GOODS(付款信息已确认，待发货)&lt;br&gt;
CONFIRM_SEND_GOODS(付款信息已确认，已发货)&lt;br&gt;
TRADE_REFUNDED(已退款)&lt;br&gt;
TRADE_REFUNDING(退款中)&lt;br&gt;
TRADE_FINISHED(交易成功)&lt;br&gt;
TRADE_CLOSED(交易关闭)&lt;br&gt;
PAY_ACOUNTED_GOODS_CONFIRM （已分账发货成功）&lt;br&gt;
PAY_WAIT_ACOUNT_GOODS_CONFIRM（已付款，确认收货）</desc>
</prop>
<prop>
<name>tc_adjust_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的卖出金额调整，金额增加时为正数，金额减少时为负数，单位是分，不带小数</desc>
</prop>
<prop>
<name>tc_discount_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠金额，始终为正数，单位是分，不带小数</desc>
</prop>
<prop>
<name>tc_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>TC子订单ID（经销不显示）</desc>
</prop>
<prop>
<name>tc_preferential_type</name>
<type>String</type>
<level>Basic</level>
<desc>商品优惠类型：聚划算、秒杀或其他</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>采购的产品标题。</desc>
</prop>
<prop>
<name>total_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商应付金额=num(采购数量)*price(采购价)。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductCat</name>
<desc>产品线</desc>
<props>
<prop>
<name>cost_percent_agent</name>
<type>String</type>
<level>Basic</level>
<desc>代销采购价百分比</desc>
</prop>
<prop>
<name>cost_percent_dealer</name>
<type>String</type>
<level>Basic</level>
<desc>经销采购价百分比</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品线ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品线名称</desc>
</prop>
<prop>
<name>product_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品数量</desc>
</prop>
<prop>
<name>retail_high_percent</name>
<type>String</type>
<level>Basic</level>
<desc>最高零食价百分比</desc>
</prop>
<prop>
<name>retail_low_percent</name>
<type>String</type>
<level>Basic</level>
<desc>最低零售价百分比</desc>
</prop>
</props>
</struct>
<struct>
<name>Feature</name>
<desc>类目属性</desc>
<props>
<prop>
<name>attr_key</name>
<type>String</type>
<level>Basic</level>
<desc>属性键</desc>
</prop>
<prop>
<name>attr_value</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
</props>
</struct>
<struct>
<name>TmcUser</name>
<desc>消息通道的用户结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>用户首次开通时间</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>接收用户消息的组名</desc>
</prop>
<prop>
<name>is_valid</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户授权是否有效，true表示授权有效，false表示授权过期</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>用户最后开通时间</desc>
</prop>
<prop>
<name>topics</name>
<type>String</type>
<level>Basic Array</level>
<desc>用户开通的消息类型列表。如果为空表示应用开通的所有类型</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>UserThirdAddress</name>
<desc>送货地址对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>送货地址</desc>
</prop>
<prop>
<name>mobile</name>
<type>String</type>
<level>Basic</level>
<desc>手机号</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>买家姓名</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>联系电话</desc>
</prop>
</props>
</struct>
<struct>
<name>TakeoutThirdOrder</name>
<desc>外卖订单对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>送餐地址</desc>
</prop>
<prop>
<name>alipay_stream_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝流水号</desc>
</prop>
<prop>
<name>create_time</name>
<type>String</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>delivery_pay</name>
<type>Price</type>
<level>Basic</level>
<desc>配送费</desc>
</prop>
<prop>
<name>end_deliverytime</name>
<type>String</type>
<level>Basic</level>
<desc>送达时间要求_结束</desc>
</prop>
<prop>
<name>from</name>
<type>Number</type>
<level>Basic</level>
<desc>用户下单方式(PC/APP)</desc>
</prop>
<prop>
<name>goods_list</name>
<type>OrderGoods</type>
<level>Object Array</level>
<desc>下单餐品列表</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>note</name>
<type>String</type>
<level>Basic</level>
<desc>用户下单时的备注信息</desc>
</prop>
<prop>
<name>order_status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单状态</desc>
</prop>
<prop>
<name>pay_account</name>
<type>String</type>
<level>Basic</level>
<desc>买家支付宝账号</desc>
</prop>
<prop>
<name>people_number</name>
<type>Number</type>
<level>Basic</level>
<desc>就餐人数</desc>
</prop>
<prop>
<name>start_deliverytime</name>
<type>String</type>
<level>Basic</level>
<desc>送达时间要求_起始</desc>
</prop>
<prop>
<name>store_contactphone</name>
<type>String</type>
<level>Basic</level>
<desc>店铺联系电话</desc>
</prop>
<prop>
<name>store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分店ID</desc>
</prop>
<prop>
<name>store_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名称</desc>
</prop>
<prop>
<name>total_pay</name>
<type>Price</type>
<level>Basic</level>
<desc>总支付金额</desc>
</prop>
<prop>
<name>user_address</name>
<type>UserThirdAddress</type>
<level>Object</level>
<desc>用户地址对象</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家ID</desc>
</prop>
</props>
</struct>
<struct>
<name>TmcMessage</name>
<desc>消息通道的通用消息结构</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>消息详细内容，格式为JSON/XML</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>消息ID</desc>
</prop>
<prop>
<name>pub_app_key</name>
<type>String</type>
<level>Basic</level>
<desc>消息发布者的AppKey</desc>
</prop>
<prop>
<name>pub_time</name>
<type>Date</type>
<level>Basic</level>
<desc>消息发布时间</desc>
</prop>
<prop>
<name>topic</name>
<type>String</type>
<level>Basic</level>
<desc>消息所属主题</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>消息所属的用户编号</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户的昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>ListResult</name>
<desc>外卖订单查询结果</desc>
<props>
<prop>
<name>result_list</name>
<type>TakeoutThirdOrder</type>
<level>Object Array</level>
<desc>订单列表</desc>
</prop>
<prop>
<name>result_size</name>
<type>Number</type>
<level>Basic</level>
<desc>返回记录数</desc>
</prop>
<prop>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>0:失败 1:成功</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</prop>
</props>
</struct>
<struct>
<name>TmcGroup</name>
<desc>消息通道的分组结构</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>分组名称</desc>
</prop>
<prop>
<name>users</name>
<type>String</type>
<level>Basic Array</level>
<desc>用户列表</desc>
</prop>
</props>
</struct>
<struct>
<name>DealerOrder</name>
<desc>采购申请和经销采购单</desc>
<props>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>applied_time</name>
<type>Date</type>
<level>Basic</level>
<desc>申请时间</desc>
</prop>
<prop>
<name>applier_nick</name>
<type>String</type>
<level>Basic</level>
<desc>分销商nick</desc>
</prop>
<prop>
<name>audit_time_applier</name>
<type>Date</type>
<level>Basic</level>
<desc>分销商最后一次确认/申请/拒绝的时间</desc>
</prop>
<prop>
<name>audit_time_supplier</name>
<type>Date</type>
<level>Basic</level>
<desc>供应商最后一次审核通过/修改/驳回的时间</desc>
</prop>
<prop>
<name>close_reason</name>
<type>String</type>
<level>Basic</level>
<desc>关闭原因</desc>
</prop>
<prop>
<name>dealer_order_details</name>
<type>DealerOrderDetail</type>
<level>Object Array</level>
<desc>产品明细</desc>
</prop>
<prop>
<name>dealer_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>经销采购单编号，API发货使用此字段</desc>
</prop>
<prop>
<name>delivered_quantity_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已发货数量</desc>
</prop>
<prop>
<name>logistics_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>物流费用(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>logistics_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式： 
SELF_PICKUP（自提）、LOGISTICS（物流发货)</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>WAIT_FOR_SUPPLIER_AUDIT1：分销商提交申请，待供应商审核； 
SUPPLIER_REFUSE：供应商驳回申请，待分销商确认； 
WAIT_FOR_APPLIER_AUDIT：供应商修改后，待分销商确认； 
WAIT_FOR_SUPPLIER_AUDIT2：分销商拒绝修改，待供应商再审核； 
BOTH_AGREE_WAIT_PAY：审核通过下单成功，待分销商付款 
WAIT_FOR_SUPPLIER_DELIVER：付款成功，待供应商发货； 
WAIT_FOR_APPLIER_STORAGE：供应商发货，待分销商收货； 
TRADE_FINISHED：分销商收货，交易成功； 
TRADE_CLOSED：经销采购单关闭。</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间</desc>
</prop>
<prop>
<name>pay_type</name>
<type>String</type>
<level>Basic</level>
<desc>支付方式： 
ALIPAY_SURETY（支付宝担保交易） 
TRANSFER（线下转账） 
PREPAY（预存款） 
IMMEDIATELY（即时到账）</desc>
</prop>
<prop>
<name>quantity_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总采购数量</desc>
</prop>
<prop>
<name>receiver</name>
<type>Receiver</type>
<level>Object</level>
<desc>收货人信息</desc>
</prop>
<prop>
<name>refuse_reason_applier</name>
<type>String</type>
<level>Basic</level>
<desc>分销商拒绝供应商修改的原因</desc>
</prop>
<prop>
<name>refuse_reason_supplier</name>
<type>String</type>
<level>Basic</level>
<desc>供应商驳回申请的原因</desc>
</prop>
<prop>
<name>supplier_memo</name>
<type>String</type>
<level>Basic</level>
<desc>供应商备注。 
仅供应商可见。</desc>
</prop>
<prop>
<name>supplier_memo_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商备注旗帜。 
1:红色 2:黄色 3:绿色 4:蓝色 5:粉红色。 
仅供应商可见。</desc>
</prop>
<prop>
<name>supplier_nick</name>
<type>String</type>
<level>Basic</level>
<desc>供应商nick</desc>
</prop>
<prop>
<name>total_price</name>
<type>Price</type>
<level>Basic</level>
<desc>采购总价(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
</props>
</struct>
<struct>
<name>DealerOrderDetail</name>
<desc>采购申请/经销采购单中的商品明细</desc>
<props>
<prop>
<name>dealer_detail_id</name>
<type>Number</type>
<level>Basic</level>
<desc>经销采购单明细id</desc>
</prop>
<prop>
<name>dealer_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>经销采购单编号</desc>
</prop>
<prop>
<name>final_price</name>
<type>Price</type>
<level>Basic</level>
<desc>最终价格(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>is_deleted</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该条明细是否已删除。true：已删除；false：未删除。</desc>
</prop>
<prop>
<name>original_price</name>
<type>Price</type>
<level>Basic</level>
<desc>原始价格(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>price_count</name>
<type>Price</type>
<level>Basic</level>
<desc>金额小计(采购数量乘以最终价格。精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品id</desc>
</prop>
<prop>
<name>product_title</name>
<type>String</type>
<level>Basic</level>
<desc>产品标题</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>采购数量</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>sku id</desc>
</prop>
<prop>
<name>sku_number</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码，是sku则为sku的商家编码，否则是产品的商家编码</desc>
</prop>
<prop>
<name>sku_spec</name>
<type>String</type>
<level>Basic</level>
<desc>产品规格</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>产品快照url</desc>
</prop>
</props>
</struct>
<struct>
<name>CertTxtInfo</name>
<desc>产品资质认证文本信息，包括认证类型以及文本信息</desc>
<props>
<prop>
<name>cert_type</name>
<type>Number</type>
<level>Basic</level>
<desc>认证类型的数值id</desc>
</prop>
<prop>
<name>text</name>
<type>String</type>
<level>Basic</level>
<desc>认证文本信息</desc>
</prop>
</props>
</struct>
<struct>
<name>GradeEquity</name>
<desc>tmall权益</desc>
<props>
<prop>
<name>cur_grade</name>
<type>String</type>
<level>Basic</level>
<desc>买家会员级别  0:店铺客户  1：普通会员 2：高级会员 3：VIP会员 4：至尊VIP</desc>
</prop>
<prop>
<name>cur_grade_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺客户、普通会员 、高级会员、VIP会员、至尊VIP</desc>
</prop>
<prop>
<name>exclude_area</name>
<type>String</type>
<level>Basic</level>
<desc>在包邮的前提下的不免邮区域</desc>
</prop>
<prop>
<name>point</name>
<type>Number</type>
<level>Basic</level>
<desc>返回几倍tmall积分</desc>
</prop>
<prop>
<name>postage</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否该等级开启包邮</desc>
</prop>
</props>
</struct>
<struct>
<name>PictureCategory</name>
<desc>图片分类</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片类目的创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>图片分类的修改时间</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>一级分类的parent_id为0 
二级分类的则为其父分类的picture_category_id</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_category_name</name>
<type>String</type>
<level>Basic</level>
<desc>图片分类名</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类排序</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>图片分类型别，sys-fixture代表店铺装修分类(系统分类)，sys-auction代表宝贝图片分类(系统分类)，user-define代表用户自定义分类</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderGoods</name>
<desc>物流订单商品</desc>
<props>
<prop>
<name>auction_code</name>
<type>String</type>
<level>Basic</level>
<desc>商品的商家编码</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖商品购买数量</desc>
</prop>
<prop>
<name>goods_code</name>
<type>String</type>
<level>Basic</level>
<desc>外卖商品外部ID</desc>
</prop>
<prop>
<name>goods_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>goods_pic_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片id</desc>
</prop>
<prop>
<name>goods_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>物流订单商品数量</desc>
</prop>
<prop>
<name>item_value</name>
<type>Number</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>外卖商品名称</desc>
</prop>
<prop>
<name>order_goods_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的唯一编码</desc>
</prop>
<prop>
<name>real_price</name>
<type>String</type>
<level>Basic</level>
<desc>外卖商品实际购买价格</desc>
</prop>
<prop>
<name>sell_property</name>
<type>String</type>
<level>Basic</level>
<desc>销售属性</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>Distributor</name>
<desc>分销API返回数据结构</desc>
<props>
<prop>
<name>alipay_account</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的支付宝帐户</desc>
</prop>
<prop>
<name>appraise</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商的淘宝卖家评价</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商店铺主营类目</desc>
</prop>
<prop>
<name>contact_person</name>
<type>String</type>
<level>Basic</level>
<desc>联系人</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>分销商创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商Id</desc>
</prop>
<prop>
<name>distributor_name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商姓名</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的email</desc>
</prop>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的真实姓名，认证姓名</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺等级</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的手机号</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的电话</desc>
</prop>
<prop>
<name>shop_web_link</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的网店链接</desc>
</prop>
<prop>
<name>starts</name>
<type>Date</type>
<level>Basic</level>
<desc>分销商卖家的开店时间</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
</props>
</struct>
<struct>
<name>BasicMember</name>
<desc>表示会员关系的基本信息字段，用于会员列表的基本查询</desc>
<props>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最后一次交易的订单号. 
注:该字段从2014.4.23之后不再返回.</desc>
</prop>
<prop>
<name>buyer_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家会员ID</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>会员昵称</desc>
</prop>
<prop>
<name>close_trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易关闭金额</desc>
</prop>
<prop>
<name>close_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易关闭的笔数</desc>
</prop>
<prop>
<name>grade</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级，0：店铺客户，1：普通会员，2：高级会员，3：VIP会员， 4：至尊VIP会员</desc>
</prop>
<prop>
<name>group_ids</name>
<type>String</type>
<level>Basic</level>
<desc>分组的id集合字符串</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买的宝贝件数</desc>
</prop>
<prop>
<name>last_trade_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后交易的日期</desc>
</prop>
<prop>
<name>relation_source</name>
<type>Number</type>
<level>Basic</level>
<desc>关系来源，1交易成功，2未交易成功 ,3 卖家主动吸纳</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>显示会员的状态，normal正常，blacklist黑名单</desc>
</prop>
<prop>
<name>trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易的金额</desc>
</prop>
<prop>
<name>trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易成功的次数</desc>
</prop>
</props>
</struct>
<struct>
<name>GradePromotion</name>
<desc>卖家设置的等级优惠信息</desc>
<props>
<prop>
<name>cur_grade</name>
<type>String</type>
<level>Basic</level>
<desc>买家会员级别  0:店铺客户  1：普通会员 2：高级会员 3：VIP会员 4：至尊VIP</desc>
</prop>
<prop>
<name>cur_grade_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺客户、普通会员 、高级会员、VIP会员、至尊VIP</desc>
</prop>
<prop>
<name>discount</name>
<type>Number</type>
<level>Basic</level>
<desc>会员级别折扣率没有小数，990代表9.9折</desc>
</prop>
<prop>
<name>next_grade</name>
<type>String</type>
<level>Basic</level>
<desc>普通会员、高级会员、VIP会员、至尊VIP。空的时候代表后续等级未启用或没有下一等级</desc>
</prop>
<prop>
<name>next_grade_name</name>
<type>String</type>
<level>Basic</level>
<desc>该等级对应的下一等级1:普通会员  2：高级会员 3：VIP会员 4：至尊VIP 0：后续等级都未启用或没有下一等级</desc>
</prop>
<prop>
<name>next_upgrade_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>升级到下一个级别的需要的交易额，单位：分</desc>
</prop>
<prop>
<name>next_upgrade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>升级到下一个级别的需要的交易量</desc>
</prop>
</props>
</struct>
<struct>
<name>CrmMember</name>
<desc>会员信息对象</desc>
<props>
<prop>
<name>avg_price</name>
<type>Price</type>
<level>Basic</level>
<desc>平均客单价.</desc>
</prop>
<prop>
<name>buyer_id</name>
<type>Number</type>
<level>Basic</level>
<desc>会员买家id</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市. 
请注意:从2014.4.23之后,省市将采用地区标准码,请通过物流API taobao.areas.get接口获取,参考:http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.nOOF9g&amp;path=cid:7-apiId:59.API对于老的省市代码兼容会逐步下线.</desc>
</prop>
<prop>
<name>close_trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易关闭的金额</desc>
</prop>
<prop>
<name>close_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易关闭的的笔数</desc>
</prop>
<prop>
<name>grade</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级，0:店铺客户，1：普通会员，2：高级会员，3：VIP会员， 4：至尊VIP会员</desc>
</prop>
<prop>
<name>group_ids</name>
<type>String</type>
<level>Basic</level>
<desc>会员拥有的所有分组</desc>
</prop>
<prop>
<name>item_close_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易关闭的宝贝件数</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买的宝贝件数</desc>
</prop>
<prop>
<name>last_trade_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后交易时间</desc>
</prop>
<prop>
<name>province</name>
<type>Number</type>
<level>Basic</level>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35. 
注:请注意:从2014.4.23之后,省市将采用地区标准码,请通过物流API taobao.areas.get接口获取,参考:http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.nOOF9g&amp;path=cid:7-apiId:59.API对于老的省市代码兼容会逐步下线.</desc>
</prop>
<prop>
<name>relation_source</name>
<type>Number</type>
<level>Basic</level>
<desc>关系来源，1交易成功，2未成交，3卖家主动吸纳</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>显示会员的状态，normal正常，blacklist黑名单</desc>
</prop>
<prop>
<name>trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易成功的金额</desc>
</prop>
<prop>
<name>trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易成功笔数</desc>
</prop>
</props>
</struct>
<struct>
<name>Group</name>
<desc>描述分组的数据结构</desc>
<props>
<prop>
<name>group_create</name>
<type>Date</type>
<level>Basic</level>
<desc>分组的创建时间</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分组的id</desc>
</prop>
<prop>
<name>group_modify</name>
<type>Date</type>
<level>Basic</level>
<desc>分组的修改时间</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>分组的名称</desc>
</prop>
<prop>
<name>member_count</name>
<type>Number</type>
<level>Basic</level>
<desc>分组所拥有的会员数量,如果返回值为-1，表示当前服务忙或数据在初始化。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>分组的状态，1表示正常</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbAuthorization</name>
<desc>授权关系</desc>
<props>
<prop>
<name>authorize_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>授权结束时间</desc>
</prop>
<prop>
<name>authorize_id</name>
<type>Number</type>
<level>Basic</level>
<desc>授权ID</desc>
</prop>
<prop>
<name>authorize_start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>授权开始时间</desc>
</prop>
<prop>
<name>consign_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销人用户ID</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>授权商品ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>授权名称</desc>
</prop>
<prop>
<name>owner_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货主用户ID</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>授权数量</desc>
</prop>
<prop>
<name>rule_code</name>
<type>String</type>
<level>Basic</level>
<desc>授权编码</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态： 
VALID -- 1 有效 
INVALIDATION -- 2 失效</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbMessage</name>
<desc>通道消息</desc>
<props>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>消息通道ID</desc>
</prop>
<prop>
<name>msg_code</name>
<type>String</type>
<level>Basic</level>
<desc>通知消息编码： STOCK_IN_NOT_CONSISTENT---入库单不一致 CANCEL_ORDER_SUCCESS---取消订单成功 CANCEL_ORDER_FAILURE---取消订单失败 INVENTORY_CHECK---盘点   INVENTORY_CHECK---盘点消息  ORDER_REJECT--wms拒单  ORDER_CONFIRMED--订单处理成功 WMS_FAILED--wms处理失败</desc>
</prop>
<prop>
<name>msg_content</name>
<type>String</type>
<level>Basic</level>
<desc>通知内容：msg_code为STOCK_IN_NOT_CONSISTENT时,msg_content为:orderCode:code;orderItemId:111;itemId:123;planQuantity:10;relQuantity:6; 
msg_code为CANCEL_ORDER_SUCCESS及其它时,msg_content为：orderCode:code;
msg_code为CANCEL_ORDER_SUCCESS及其它时,msg_content为：orderCode:code; msg_code为INVENTORY_CHECK时，msg_content为orderCode:code;</desc>
</prop>
<prop>
<name>msg_description</name>
<type>String</type>
<level>Basic</level>
<desc>消息描述</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>消息状态： 不需要确认：NO_NEED_CONFIRM 已确认：CONFIRMED 待确认：TO_BE_CONFIRM</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbConsignMent</name>
<desc>物流宝代销关系</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销关系id</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销商用户前台宝贝id</desc>
</prop>
<prop>
<name>number</name>
<type>Number</type>
<level>Basic</level>
<desc>代销数量</desc>
</prop>
<prop>
<name>tgt_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商商品id</desc>
</prop>
<prop>
<name>tgt_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商用户id</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销商用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbReplenish</name>
<desc>物流宝补货统计对象</desc>
<props>
<prop>
<name>estimate_value</name>
<type>String</type>
<level>Basic</level>
<desc>根据历史统计值计算出来的预期值 
WarnByLast3Days=1; ByLast3Days=3; 
ByLast10Days=10; 
ByLast30Days=30; 
ByLast90Days=90 
WarnByLast3Days为按照过去3天的发出的件数来统计的达到安全库存的天数；其它4项分别为按照过去3、10、30、90天发出的商品件数，现有库存可以维持的天数</desc>
</prop>
<prop>
<name>history_value</name>
<type>String</type>
<level>Basic</level>
<desc>订单历史统计值 
Last3DaysTotal=3; Last10DaysTotal=10; 
Last30DaysTotal=30; Last90DaysTotal=90 
分别为过去3、10、30、90天发出的商品件数</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>retrieval_count</name>
<type>Number</type>
<level>Basic</level>
<desc>补货周期（单位：天）</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<desc>可销售库存数</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>transport_count</name>
<type>Number</type>
<level>Basic</level>
<desc>在途库存数</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
<prop>
<name>warn_count</name>
<type>Number</type>
<level>Basic</level>
<desc>安全库存</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbProcessStatus</name>
<desc>物流宝订单流转信息对象</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>状态内容</desc>
</prop>
<prop>
<name>operate_time</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</prop>
<prop>
<name>operater</name>
<type>String</type>
<level>Basic</level>
<desc>操作人</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单编码</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>status_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单操作状态：WMS_ACCEPT;WMS_PRINT;WMS_PICK;WMS_CHECK;WMS_PACKAGE;WMS_CONSIGN;WMS_CANCEL;WMS_UNKNOWN;WMS_CONFIRMED 
TMS_ACCEPT;TMS_STATION_IN;TMS_STATION_OUT;TMS_SIGN;TMS_REJECT;TMS_CANCEL;TMS_UNKNOW;SYS_UNKNOWN</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>store_tp_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库合作公司编码</desc>
</prop>
<prop>
<name>tms_order_code</name>
<type>String</type>
<level>Basic</level>
<desc>tms合作公司订单编码</desc>
</prop>
<prop>
<name>tms_tp_code</name>
<type>String</type>
<level>Basic</level>
<desc>tms合作公司编码</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrderItem</name>
<desc>物流宝订单商品</desc>
<props>
<prop>
<name>batch_remark</name>
<type>String</type>
<level>Basic</level>
<desc>批次号备注</desc>
</prop>
<prop>
<name>confirm_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单确认状态： 
NO_NEED_CONFIRM--不需要确认 
WAIT_CONFIRM--待确认 
CONFIRMED--已确认</desc>
</prop>
<prop>
<name>ext_entity_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部实体id</desc>
</prop>
<prop>
<name>ext_entity_type</name>
<type>String</type>
<level>Basic</level>
<desc>外部实体类型</desc>
</prop>
<prop>
<name>flag</name>
<type>Number</type>
<level>Basic</level>
<desc>第一位标示是否为赠品</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单商品id</desc>
</prop>
<prop>
<name>inventory_type</name>
<type>String</type>
<level>Basic</level>
<desc>INVENTORY_TYPE_SELL 可销库存 
INVENTORY_TYPE_IMPERFECTIONS 残次库存 
INVENTORY_TYPE_FREEZE 冻结库存 
INVENTORY_TYPE_ON_PASSAGE 在途库存 
INVENTORY_TYPE_ENGINE_DAMAGE 机损 
INVENTORY_TYPE_BOX_DAMAGE 箱损</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品编码</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝订单商品的物流宝商品id</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品名称</desc>
</prop>
<prop>
<name>item_price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单编码</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝订单id</desc>
</prop>
<prop>
<name>order_sub_2code</name>
<type>String</type>
<level>Basic</level>
<desc>子交易号</desc>
</prop>
<prop>
<name>order_sub_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>order_sub_type</name>
<type>String</type>
<level>Basic</level>
<desc>(1)其它: OTHER (2)淘宝交易: TAOBAO (3)调拨: ALLOCATION (4)盘点:CHECK (5)销售采购:PRUCHASE(6)其它交易：OTHER_TRADE</desc>
</prop>
<prop>
<name>picture_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品图片url</desc>
</prop>
<prop>
<name>plan_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>计划数量</desc>
</prop>
<prop>
<name>provider_tp_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货主id</desc>
</prop>
<prop>
<name>provider_tp_nick</name>
<type>String</type>
<level>Basic</level>
<desc>货主nick</desc>
</prop>
<prop>
<name>publish_version</name>
<type>Number</type>
<level>Basic</level>
<desc>商品发布版本号</desc>
</prop>
<prop>
<name>real_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>实际数量</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品备注</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单商品用户id</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrder</name>
<desc>物流宝订单对象</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家nick</desc>
</prop>
<prop>
<name>cancel_order_status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单取消状态： 
1-取消中；  
2-取消失败； 
3-取消完成</desc>
</prop>
<prop>
<name>confirm_status</name>
<type>String</type>
<level>Basic</level>
<desc>确认状态： 
(1)不需要确认：NO_NEED_CONFIRM 
(2)等待确认：WAIT_CONFIRM 
(3)已确认:CONFIRMED</desc>
</prop>
<prop>
<name>expect_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>计划送达结束时间</desc>
</prop>
<prop>
<name>expect_start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>计划送达开始时间</desc>
</prop>
<prop>
<name>invoice_info</name>
<type>String</type>
<level>Basic</level>
<desc>发票信息</desc>
</prop>
<prop>
<name>item_kinds_count</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝订单中的商品种类数量</desc>
</prop>
<prop>
<name>operate_type</name>
<type>String</type>
<level>Basic</level>
<desc>出库或者入库，IN表示入库，OUT表示出库</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单编码</desc>
</prop>
<prop>
<name>order_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>第1位:COD,2:限时配送,3:预售,4:需要发票,5:已投诉,第6位:合单,第7位:拆单 第8位：EXCHANGE-换货， 第9位:VISIT-上门 ， 第10位: MODIFYTRANSPORT-是否可改配送方式，第11位：是否物流代理确认发货</desc>
</prop>
<prop>
<name>order_source</name>
<type>String</type>
<level>Basic</level>
<desc>订单来源: 
产生物流订单的原因，比如: 
 
订单来源:1:TAOBAO;2:EXT;3:ERP;4:WMS</desc>
</prop>
<prop>
<name>order_source_code</name>
<type>String</type>
<level>Basic</level>
<desc>对应创建物流宝订单top接口中的的out_biz_code字段，主要是用来去重用</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流状态， 
订单已创建：0 
订单已取消: -1 
订单关闭:-3 
下发中: 10 
已下发: 11 
接收方拒签 :-100 
已发货:100 
签收成功:200</desc>
</prop>
<prop>
<name>order_status_reason</name>
<type>String</type>
<level>Basic</level>
<desc>卖家取消,仓库取消标识</desc>
</prop>
<prop>
<name>order_sub_type</name>
<type>String</type>
<level>Basic</level>
<desc>(1)其它:    OTHER 
(2)淘宝交易: TAOBAO 
(3)301:调拨: ALLOCATION 
(4)401:盘点:CHECK 
(5)501:销售采购:PRUCHASE</desc>
</prop>
<prop>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>1:正常订单: NARMAL 
2:退货订单: RETURN 
3:换货订单: CHANGE</desc>
</prop>
<prop>
<name>prev_order_code</name>
<type>String</type>
<level>Basic</level>
<desc>原订单编码</desc>
</prop>
<prop>
<name>real_kinds_count</name>
<type>Number</type>
<level>Basic</level>
<desc>实际入库的种类数量</desc>
</prop>
<prop>
<name>receivable_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>应收金额</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<desc>收件人具体地址</desc>
</prop>
<prop>
<name>receiver_area</name>
<type>String</type>
<level>Basic</level>
<desc>区或者县</desc>
</prop>
<prop>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<desc>收件人城市</desc>
</prop>
<prop>
<name>receiver_mail</name>
<type>String</type>
<level>Basic</level>
<desc>接收人电子邮箱</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>接收人手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>接收人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>接收人固定电话</desc>
</prop>
<prop>
<name>receiver_province</name>
<type>String</type>
<level>Basic</level>
<desc>收件人省份</desc>
</prop>
<prop>
<name>receiver_wangwang</name>
<type>String</type>
<level>Basic</level>
<desc>接收人旺旺</desc>
</prop>
<prop>
<name>receiver_zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>收件人邮编</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>订单备注</desc>
</prop>
<prop>
<name>schedule_day</name>
<type>String</type>
<level>Basic</level>
<desc>发货日期: 
(1)1 为工作日 
(2)2 为节假日</desc>
</prop>
<prop>
<name>schedule_end</name>
<type>String</type>
<level>Basic</level>
<desc>配送结束时间通常是HH:MM格式</desc>
</prop>
<prop>
<name>schedule_speed</name>
<type>Number</type>
<level>Basic</level>
<desc>发货速度  ， 
101-当日达， 
102-次晨达， 
103-次日达</desc>
</prop>
<prop>
<name>schedule_start</name>
<type>String</type>
<level>Basic</level>
<desc>配送开始时间通常是HH:MM格式</desc>
</prop>
<prop>
<name>sender_address</name>
<type>String</type>
<level>Basic</level>
<desc>发件人地址</desc>
</prop>
<prop>
<name>sender_area</name>
<type>String</type>
<level>Basic</level>
<desc>发件人所在区</desc>
</prop>
<prop>
<name>sender_city</name>
<type>String</type>
<level>Basic</level>
<desc>发件人城市</desc>
</prop>
<prop>
<name>sender_email</name>
<type>String</type>
<level>Basic</level>
<desc>发件人电子邮箱</desc>
</prop>
<prop>
<name>sender_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>发件人移动电话</desc>
</prop>
<prop>
<name>sender_name</name>
<type>String</type>
<level>Basic</level>
<desc>发件人姓名</desc>
</prop>
<prop>
<name>sender_phone</name>
<type>String</type>
<level>Basic</level>
<desc>发件人联系电话</desc>
</prop>
<prop>
<name>sender_province</name>
<type>String</type>
<level>Basic</level>
<desc>发件人所在省份</desc>
</prop>
<prop>
<name>sender_zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>发件人邮编</desc>
</prop>
<prop>
<name>service_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>cod服务费</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流运输方式： 
MAIL-平邮 
EXPRESS-快递 
EMS-EMS 
OTHER-其他</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>tms_tp_code</name>
<type>String</type>
<level>Basic</level>
<desc>发货物流公司编码，STO,YTO,EMS等</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>订单总价</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家NICK</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbSellerSubscription</name>
<desc>卖家定购的服务</desc>
<props>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>定购有效结束日期</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>定购ID</desc>
</prop>
<prop>
<name>is_own_service</name>
<type>Number</type>
<level>Basic</level>
<desc>判断该仓库是否是实体仓，还是虚拟仓，null是实体仓，10:代表虚拟仓</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父定购ID 
可通过该字段来得之服务上下级关系。 
例定购了仓储服务，下又有TMS服务。 
该字段保存仓储服务ID。</desc>
</prop>
<prop>
<name>provider_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务商ID</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>service_alias</name>
<type>String</type>
<level>Basic</level>
<desc>自有仓的别名，当当前订购记录为自有仓时才会有值</desc>
</prop>
<prop>
<name>service_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务编码</desc>
</prop>
<prop>
<name>service_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务ID</desc>
</prop>
<prop>
<name>service_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务名</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>服务类型， 
STORE 1-仓储、 
TMS 2-TMS、 
PACKAGE 3-包装服务 
SUPPLIER 4-供货 
INSTALL 5-安装 
COMPLEX_SERVICE 100-综合服务</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>定购有效开始日期</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态 
AUDITING 1-待审核 
CANCEL 2-撤销 
CHECKED 3-审核通过 
FAILED 4-审核未通过 
SYNCHRONIZING 5-同步中</desc>
</prop>
<prop>
<name>subscriber_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>定购用户ID</desc>
</prop>
<prop>
<name>subscriber_user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>定购用户NICK</desc>
</prop>
<prop>
<name>wlb_partner_address</name>
<type>WlbPartnerAddress</type>
<level>Object</level>
<desc>联系人地址信息</desc>
</prop>
<prop>
<name>wlb_partner_contact</name>
<type>WlbPartnerContact</type>
<level>Object</level>
<desc>联系人联系详情</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemInventoryLog</name>
<desc>库存变更记录</desc>
<props>
<prop>
<name>batch_code</name>
<type>String</type>
<level>Basic</level>
<desc>批次号</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建日期</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>库存变更ID</desc>
</prop>
<prop>
<name>invent_type</name>
<type>String</type>
<level>Basic</level>
<desc>VENDIBLE  1-可销售; 
FREEZE  201-冻结库存; 
ONWAY  301-在途库存; 
DEFECT  101-残存品; 
ENGINE_DAMAGE 102-机损; 
BOX_DAMAGE 103-箱损</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>op_type</name>
<type>String</type>
<level>Basic</level>
<desc>库存操作作类型 
CHU_KU 1-出库 
RU_KU 2-入库 
FREEZE 3-冻结 
THAW 4-解冻 
CHECK_FREEZE 5-冻结确认 
CHANGE_KU 6-库存类型变更</desc>
</prop>
<prop>
<name>op_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>库存操作者ID</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>order_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单商品ID</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>处理数量变化值</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>result_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>结果值</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
</props>
</struct>
<struct>
<name>OutEntityItem</name>
<desc>外部商品实体</desc>
<props>
<prop>
<name>entity_id</name>
<type>String</type>
<level>Basic</level>
<desc>entity_type对应的实体类型的id： 
当entity_type为IC_ITEM时，entity_id为ic的商品id</desc>
</prop>
<prop>
<name>entity_type</name>
<type>String</type>
<level>Basic</level>
<desc>外部实体类型： 
IC_ITEM--ic商品 
IC_SKU--ic销售单元</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrderScheduleRule</name>
<desc>订单调度规则</desc>
<props>
<prop>
<name>area_ids</name>
<type>String</type>
<level>Basic</level>
<desc>收货地址范围: 6位数的地址ID，用逗号分隔。如“140400,230500”。同一个卖家的订单调度规则中，设置的收货地址范围不能重复。</desc>
</prop>
<prop>
<name>backup_store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>备用配送中心ID</desc>
</prop>
<prop>
<name>default_store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>默认配送中心ID</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单调度规则ID</desc>
</prop>
<prop>
<name>options</name>
<type>String</type>
<level>Basic</level>
<desc>发货规则的额外规则设置： 允许组合，用逗号隔开. 
REMARK_STOP--有订单留言不自动下发; 
COD_STOP--货到付款订单不自动下发; 
CHECK_WAREHOUSE_DELIVER--检查仓库的配送范围</desc>
</prop>
<prop>
<name>presell_store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>预售配送中心ID（预留，暂未使用）</desc>
</prop>
<prop>
<name>rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>wlb_base_rule表的ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商家userId</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品userNick</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbTmsOrder</name>
<desc>物流订单运单信息</desc>
<props>
<prop>
<name>code</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司编码</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单编号</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流订单的所有者ID,货主</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleUserSubscribe</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<desc>订购关系到期时间</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleBizOrder</name>
<desc>应用订单信息</desc>
<props>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品模型名称</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<desc>应用名称</desc>
</prop>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>biz_type</name>
<type>Number</type>
<level>Basic</level>
<desc>订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到）</desc>
</prop>
<prop>
<name>create</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间（订购时间）</desc>
</prop>
<prop>
<name>fee</name>
<type>String</type>
<level>Basic</level>
<desc>原价（单位为分）</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>order_cycle</name>
<type>String</type>
<level>Basic</level>
<desc>订购周期  1表示年 ，2表示月，3表示天。</desc>
</prop>
<prop>
<name>order_cycle_end</name>
<type>Date</type>
<level>Basic</level>
<desc>订购周期结束时间</desc>
</prop>
<prop>
<name>order_cycle_start</name>
<type>Date</type>
<level>Basic</level>
<desc>订购周期开始时间</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号</desc>
</prop>
<prop>
<name>prom_fee</name>
<type>String</type>
<level>Basic</level>
<desc>优惠（单位为分）</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<desc>退款（单位为分；升级时，系统会将升级前老版本按照剩余订购天数退还剩余金额）</desc>
</prop>
<prop>
<name>total_pay_fee</name>
<type>String</type>
<level>Basic</level>
<desc>实付（单位为分）</desc>
</prop>
</props>
</struct>
<struct>
<name>SpuTemplateDO</name>
<desc>SPU发布模板，定义了产品发布需要那些关键属性，绑定属性。</desc>
<props>
<prop>
<name>affect_properties</name>
<type>Number</type>
<level>Basic Array</level>
<desc>产品绑定属性，内容为属性ID(PID)的列表,绑定属性肯定在类目上有，对应属性的类目特征，子属性请根据PID到类目上去取</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>commodity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品类ID，和类目ID类似</desc>
</prop>
<prop>
<name>filter_properties</name>
<type>Number</type>
<level>Basic Array</level>
<desc>过滤属性，内容有属性ID(PID)列表，很重要的属性，filter_properties包含的属性，必须填写</desc>
</prop>
<prop>
<name>key_properties</name>
<type>Number</type>
<level>Basic Array</level>
<desc>产品关键属性，内容为属性ID(PID)的列表，注意关键属性可以在类目上不存在。不存在的PID，默认为输入，没有子属性。属性名称在prop_name_str中取</desc>
</prop>
<prop>
<name>prop_features</name>
<type>String</type>
<level>Basic</level>
<desc>预留</desc>
</prop>
<prop>
<name>prop_name_str</name>
<type>String</type>
<level>Basic</level>
<desc>属性名称扁平化结构，只保证不在类目上的CP有值</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模板ID，发布产品，必须放到Product中</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoGrade</name>
<desc>分销商等级</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>记录创建时间</desc>
</prop>
<prop>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主键</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>记录最后修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商等级名称</desc>
</prop>
</props>
</struct>
<struct>
<name>SuiteConfDO</name>
<desc>套装配置</desc>
<props>
<prop>
<name>inputs</name>
<type>Number</type>
<level>Basic Array</level>
<desc>如果有值，套装子规格形如：A*n,B*n,C*n....，n只能是inputs中的</desc>
</prop>
<prop>
<name>max_size</name>
<type>Number</type>
<level>Basic</level>
<desc>套装，子规格限制数，当前一级类目，最多允许选择多少个产品规格，为空表示无限制。套装子规格形如:A*n,B*n,C*n....,max_size就是C的最大个数</desc>
</prop>
<prop>
<name>max_total_number</name>
<type>Number</type>
<level>Basic</level>
<desc>套装，子规格数量总和限制，当前一级类目，所以子产品规格的数量不能超过这个值，为空表示无限制,套装子规格形如：A*n,B*n,C*n....,max_total_number就是所有n和的最大限制</desc>
</prop>
<prop>
<name>root_cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>一级类目ID，标识在该一级在类目下能布套装</desc>
</prop>
<prop>
<name>suite_cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套装类目ID，当前一级类目，如果发布跨叶子类目的的套装，默认放到那个类目。如果没有值表示root_cat_id类目下发布的套装产品，不支持跨类目</desc>
</prop>
</props>
</struct>
<struct>
<name>LaiwangUser</name>
<desc>来往用户基本信息</desc>
<props>
<prop>
<name>avatar</name>
<type>String</type>
<level>Basic</level>
<desc>头像URL</desc>
</prop>
<prop>
<name>avatar_big</name>
<type>String</type>
<level>Basic</level>
<desc>头像URL（大幅）</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>用户所在城市</desc>
</prop>
<prop>
<name>gender</name>
<type>String</type>
<level>Basic</level>
<desc>用户性别</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
<prop>
<name>openid</name>
<type>String</type>
<level>Basic</level>
<desc>openid</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerPointRecordModule</name>
<desc>卖家积分明细记录</desc>
<props>
<prop>
<name>business_info</name>
<type>String</type>
<level>Basic</level>
<desc>业务扩展信息 ，用于ISV描述积分记录的具体业务信息</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家NICK</desc>
</prop>
<prop>
<name>point_num</name>
<type>Number</type>
<level>Basic</level>
<desc>积分数量</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>记录状态 1成功 0冻结 -1失败</desc>
</prop>
<prop>
<name>transaction_id</name>
<type>Number</type>
<level>Basic</level>
<desc>upp内部业务ID，由预扣或预发积分接口返回，ISV可以直接使用，或映射自己的业务ID。</desc>
</prop>
<prop>
<name>transaction_time</name>
<type>Date</type>
<level>Basic</level>
<desc>业务发生时间</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>3：ISV送积分   
4：ISV扣减积分</desc>
</prop>
</props>
</struct>
<struct>
<name>TipInfo</name>
<desc>提示信息对象</desc>
<props>
<prop>
<name>info</name>
<type>String</type>
<level>Basic</level>
<desc>提示信息</desc>
</prop>
<prop>
<name>sc_item_id</name>
<type>String</type>
<level>Basic</level>
<desc>后端商品ID或者商家编码</desc>
</prop>
</props>
</struct>
<struct>
<name>Store</name>
<desc>仓库对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>仓库的物理地址</desc>
</prop>
<prop>
<name>address_area_name</name>
<type>String</type>
<level>Basic</level>
<desc>仓库对应的淘宝区域</desc>
</prop>
<prop>
<name>alias_name</name>
<type>String</type>
<level>Basic</level>
<desc>仓库简称</desc>
</prop>
<prop>
<name>contact</name>
<type>String</type>
<level>Basic</level>
<desc>联系人</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>联系电话</desc>
</prop>
<prop>
<name>post_code</name>
<type>String</type>
<level>Basic</level>
<desc>邮编</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>商家的仓库编码，不允许重复</desc>
</prop>
<prop>
<name>store_name</name>
<type>String</type>
<level>Basic</level>
<desc>商家的仓库名称</desc>
</prop>
<prop>
<name>store_type</name>
<type>String</type>
<level>Basic</level>
<desc>仓库类型</desc>
</prop>
</props>
</struct>
<struct>
<name>InventorySum</name>
<desc>商品库存对象</desc>
<props>
<prop>
<name>inventory_type</name>
<type>Number</type>
<level>Basic</level>
<desc>库存类型： 
1：正常  
2：损坏  
3：冻结  
10：质押  
11-20:商家自定义</desc>
</prop>
<prop>
<name>inventory_type_name</name>
<type>String</type>
<level>Basic</level>
<desc>库存类型名称</desc>
</prop>
<prop>
<name>occupy_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>总占用数量</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>总物理库存数量</desc>
</prop>
<prop>
<name>reserve_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>总预扣数量</desc>
</prop>
<prop>
<name>sc_item_code</name>
<type>String</type>
<level>Basic</level>
<desc>商品商家编码</desc>
</prop>
<prop>
<name>sc_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品后端ID，如果有传sc_item_code,参数可以为0</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>商家仓库编码</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbPartnerContact</name>
<desc>联系人联系详情</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>仓库联系人姓名</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>联系电话</desc>
</prop>
</props>
</struct>
<struct>
<name>CheckToolModule</name>
<desc>工具审核结果</desc>
<props>
<prop>
<name>check_url</name>
<type>String</type>
<level>Basic</level>
<desc>工具审核的URL，工具检测通过后，ISV需要把该URL和工具基本信息一起提交UMP工具技术审核。</desc>
</prop>
<prop>
<name>error_message</name>
<type>String</type>
<level>Basic</level>
<desc>工具检测结果中的错误信息。</desc>
</prop>
<prop>
<name>is_pass</name>
<type>String</type>
<level>Basic</level>
<desc>工具是否检测通过。</desc>
</prop>
<prop>
<name>meta_def</name>
<type>String</type>
<level>Basic</level>
<desc>工具中已经使用的元数据。</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbPartnerAddress</name>
<desc>联系人地址信息</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址</desc>
</prop>
<prop>
<name>borough</name>
<type>String</type>
<level>Basic</level>
<desc>区</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>市</desc>
</prop>
<prop>
<name>province</name>
<type>String</type>
<level>Basic</level>
<desc>省</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮编</desc>
</prop>
</props>
</struct>
<struct>
<name>Meal</name>
<desc>搭配套餐类。</desc>
<props>
<prop>
<name>item_list</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐商品列表。item_id为商品的id;item_show_name为商品显示名。因最多允许5个商品进行搭配，所以查询最多有5个，以json格式传出。</desc>
</prop>
<prop>
<name>meal_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套餐id。</desc>
</prop>
<prop>
<name>meal_memo</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐描述！</desc>
</prop>
<prop>
<name>meal_name</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐名称。</desc>
</prop>
<prop>
<name>meal_price</name>
<type>Price</type>
<level>Basic</level>
<desc>套餐一口价(单位是：分)</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>普通运费模板id。若这个字段为空或0时，运费是卖家负责;若这个字段不为空，说明运费模板存在，运费是买家负责。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleSub</name>
<desc>应用订购信息</desc>
<props>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<desc>应用名称</desc>
</prop>
<prop>
<name>autosub</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否自动续费</desc>
</prop>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<desc>订购关系到期时间</desc>
</prop>
<prop>
<name>expire_notice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否到期提醒</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态，1=有效 2=过期</desc>
</prop>
</props>
</struct>
<struct>
<name>Room</name>
<desc>Room（酒店商品）结构。各字段详细说明可参考接口定义，如：商品发布接口。</desc>
<props>
<prop>
<name>area</name>
<type>String</type>
<level>Basic</level>
<desc>面积</desc>
</prop>
<prop>
<name>bbn</name>
<type>String</type>
<level>Basic</level>
<desc>宽带服务</desc>
</prop>
<prop>
<name>bed_type</name>
<type>String</type>
<level>Basic</level>
<desc>床型</desc>
</prop>
<prop>
<name>breakfast</name>
<type>String</type>
<level>Basic</level>
<desc>早餐</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>deposit</name>
<type>Number</type>
<level>Basic</level>
<desc>订金</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述</desc>
</prop>
<prop>
<name>fee</name>
<type>Number</type>
<level>Basic</level>
<desc>手续费</desc>
</prop>
<prop>
<name>gid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店商品id</desc>
</prop>
<prop>
<name>guide</name>
<type>String</type>
<level>Basic</level>
<desc>购买须知</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店信息</desc>
</prop>
<prop>
<name>iid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝商品id</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>multi_room_quotas</name>
<type>String</type>
<level>Basic</level>
<desc>为到店支付卖家特殊使用，代表多种支付类型的房态</desc>
</prop>
<prop>
<name>payment_type</name>
<type>String</type>
<level>Basic</level>
<desc>支付类型</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>酒店商品图片Url。多个url用逗号隔开</desc>
</prop>
<prop>
<name>price_type</name>
<type>String</type>
<level>Basic</level>
<desc>价格类型</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>房型id</desc>
</prop>
<prop>
<name>room_quotas</name>
<type>String</type>
<level>Basic</level>
<desc>房态信息。JSON格式串</desc>
</prop>
<prop>
<name>room_type</name>
<type>RoomType</type>
<level>Object</level>
<desc>房型信息</desc>
</prop>
<prop>
<name>service</name>
<type>String</type>
<level>Basic</level>
<desc>设施服务。JSON格式串</desc>
</prop>
<prop>
<name>size</name>
<type>String</type>
<level>Basic</level>
<desc>床宽</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态。1：上架。2：下架。3：删除</desc>
</prop>
<prop>
<name>storey</name>
<type>String</type>
<level>Basic</level>
<desc>楼层</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>酒店商品名称</desc>
</prop>
</props>
</struct>
<struct>
<name>HotelOrder</name>
<desc>HotelOrder（酒店订单）结构。各字段详细说明可参考接口定义。注意：trade_status，refund_status，logistics_status不是严格准确的，请以交易API，物流API等得到的订单状态、物流状态为准确依据。</desc>
<props>
<prop>
<name>alipay_trade_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，22位字符</desc>
</prop>
<prop>
<name>arrive_early</name>
<type>Date</type>
<level>Basic</level>
<desc>买家最早到达时间</desc>
</prop>
<prop>
<name>arrive_late</name>
<type>Date</type>
<level>Basic</level>
<desc>买家最晚到达时间</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家淘宝账号</desc>
</prop>
<prop>
<name>checkin_date</name>
<type>Date</type>
<level>Basic</level>
<desc>入住时间</desc>
</prop>
<prop>
<name>checkout_date</name>
<type>Date</type>
<level>Basic</level>
<desc>离店时间</desc>
</prop>
<prop>
<name>comment</name>
<type>String</type>
<level>Basic</level>
<desc>备注，存储关于礼品的信息，比如杜蕾斯</desc>
</prop>
<prop>
<name>contact_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>contact_phone</name>
<type>String</type>
<level>Basic</level>
<desc>联系人电话</desc>
</prop>
<prop>
<name>contact_phone_bak</name>
<type>String</type>
<level>Basic</level>
<desc>备用联系人电话</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>结束时间</desc>
</prop>
<prop>
<name>gid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>guests</name>
<type>OrderGuest</type>
<level>Object Array</level>
<desc>入住人信息</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>logistics_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流状态。STATUS_UNCONSIGNED：未发货 -&gt; 等待卖家发货。STATUS_CONSIGNED：已发货 -&gt; 等待买家确认收货。STATUS_DELIVERED：已收货 -&gt; 交易成功。STATUS_REVERT：已经退货 -&gt; 交易失败。STATUS_DELIVERED_PART：部分发货 -&gt; 交易成功。STATUS_NO_OUT_ORDER：还未创建物流订单</desc>
</prop>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>买家留言</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>订单修改时间</desc>
</prop>
<prop>
<name>nights</name>
<type>Number</type>
<level>Basic</level>
<desc>天数</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店订单id</desc>
</prop>
<prop>
<name>out_oid</name>
<type>String</type>
<level>Basic</level>
<desc>合作方订单号,最长250个字符</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间</desc>
</prop>
<prop>
<name>payment</name>
<type>Number</type>
<level>Basic</level>
<desc>实付款（分）</desc>
</prop>
<prop>
<name>prices</name>
<type>Number</type>
<level>Basic Array</level>
<desc>下单时每间夜的价格（分）</desc>
</prop>
<prop>
<name>refund_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。STATUS_WAIT_SELLER_AGREE：买家已经申请退款，等待卖家同意。STATUS_WAIT_BUYER_RETURN_GOODS：卖家已经同意退款，等待买家退货。STATUS_WAIT_SELLER_CONFIRM_GOODS：买家已经退货，等待卖家确认收货。STATUS_CLOSED：退款关闭。STATUS_SUCCESS：退款成功-&gt;买家取消预定。STATUS_SELLER_REFUSE_BUYER：卖家拒绝退款。STATUS_WAIT_OUT_PAY_SYSTEM_REFUND：等待外部交易系统退款。STATUS_NO_REFUND：没有申请退款。STATUS_ACTIVE_REFUND：有活动退款。STATUS_END_REFUND：退款结束。</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>房型id</desc>
</prop>
<prop>
<name>room_number</name>
<type>Number</type>
<level>Basic</level>
<desc>房间数</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家淘宝账号</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝订单id</desc>
</prop>
<prop>
<name>total_room_price</name>
<type>Number</type>
<level>Basic</level>
<desc>总房价（分）</desc>
</prop>
<prop>
<name>trade_status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。WAIT_BUYER_PAY：未冻结/未付款 -&gt; 等待买家付款。WAIT_SELLER_SEND_GOODS：已冻结/已付款 -&gt; 等待卖家发货 -&gt; 等待卖家确认。TRADE_CLOSED：已退款 -&gt; 交易关闭。TRADE_FINISHED：已转交易 -&gt; 交易成功。TRADE_NO_CREATE_PAY：没有创建支付宝交易。TRADE_CLOSED_BY_TAOBAO：交易被淘宝关闭-&gt;卖家关闭交易或卖家核实未入住。TRADE_SUCCESS：预定成功（等待卖家核实入住）</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>支付类型。A：全额支付。B：灵活支付－手续费。C：灵活支付－订金。D：灵活支付－手续费/间夜</desc>
</prop>
</props>
</struct>
<struct>
<name>ShipFresh</name>
<desc>发货后返回给仓库的名称中转仓信息</desc>
<props>
<prop>
<name>delivery_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>send_addr</name>
<type>String</type>
<level>Basic</level>
<desc>返回的地址信息</desc>
</prop>
<prop>
<name>tel</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司服务电话</desc>
</prop>
<prop>
<name>wangwang_id</name>
<type>String</type>
<level>Basic</level>
<desc>旺旺ID</desc>
</prop>
</props>
</struct>
<struct>
<name>StoreInfo</name>
<desc>商家的仓库信息详情</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>XXX果园</desc>
</prop>
<prop>
<name>real_name</name>
<type>String</type>
<level>Basic</level>
<desc>仓库真实名字</desc>
</prop>
<prop>
<name>service_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库服务代码</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbExtOrder</name>
<desc>物流宝外部订单</desc>
<props>
<prop>
<name>buyer_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家id</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家nick</desc>
</prop>
<prop>
<name>ext_order_source</name>
<type>String</type>
<level>Basic</level>
<desc>订单来源： 
TAOBAO 
PAIPAI</desc>
</prop>
<prop>
<name>ext_order_status</name>
<type>String</type>
<level>Basic</level>
<desc>订单已创建：CREATE 
订单下发中：PROCESSING 
订单接受成功：ACCESSED 
订单关闭：CLOSED</desc>
</prop>
<prop>
<name>ext_order_status_reason</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态原因</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单标识号</desc>
</prop>
<prop>
<name>operate_type</name>
<type>String</type>
<level>Basic</level>
<desc>SALE:销售订单 
SALE_RETURN:销售退货单</desc>
</prop>
<prop>
<name>prev_id</name>
<type>String</type>
<level>Basic</level>
<desc>取消前订单</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<desc>收件人地址</desc>
</prop>
<prop>
<name>receiver_country_id</name>
<type>String</type>
<level>Basic</level>
<desc>国家地区标准编码</desc>
</prop>
<prop>
<name>receiver_mail</name>
<type>String</type>
<level>Basic</level>
<desc>收件人email</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收件人手机</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收件人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收件人固话</desc>
</prop>
<prop>
<name>receiver_wangwang</name>
<type>String</type>
<level>Basic</level>
<desc>收件人旺旺</desc>
</prop>
<prop>
<name>receiver_zip</name>
<type>String</type>
<level>Basic</level>
<desc>收件人邮编</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>订单备注</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家id</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家nick</desc>
</prop>
<prop>
<name>send_name</name>
<type>String</type>
<level>Basic</level>
<desc>发货人姓名</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流运送方式</desc>
</prop>
<prop>
<name>tms_code</name>
<type>String</type>
<level>Basic</level>
<desc>快递公司编码</desc>
</prop>
<prop>
<name>total_price</name>
<type>Number</type>
<level>Basic</level>
<desc>订单总价</desc>
</prop>
<prop>
<name>wms_code</name>
<type>String</type>
<level>Basic</level>
<desc>发货仓库编码</desc>
</prop>
</props>
</struct>
<struct>
<name>GradeDiscount</name>
<desc>等级折扣数据结构</desc>
<props>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>等级ID或分销商ID</desc>
</prop>
<prop>
<name>discount_type</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣类型：1-等级、2-分销商折扣</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>采购价格</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>skuId</desc>
</prop>
<prop>
<name>trade_type</name>
<type>Number</type>
<level>Basic</level>
<desc>模式：1-代销、2-经销</desc>
</prop>
</props>
</struct>
<struct>
<name>Requisition</name>
<desc>合作申请</desc>
<props>
<prop>
<name>dist_appraise</name>
<type>Number</type>
<level>Basic</level>
<desc>好评率</desc>
</prop>
<prop>
<name>dist_category</name>
<type>Number</type>
<level>Basic</level>
<desc>主营类目</desc>
</prop>
<prop>
<name>dist_category_name</name>
<type>String</type>
<level>Basic</level>
<desc>主营类目名称</desc>
</prop>
<prop>
<name>dist_is_xiaobao</name>
<type>Number</type>
<level>Basic</level>
<desc>是否消保(0-不是、1-是)</desc>
</prop>
<prop>
<name>dist_level</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺星级</desc>
</prop>
<prop>
<name>dist_message</name>
<type>String</type>
<level>Basic</level>
<desc>分销申请加盟时，给供应商的留言</desc>
</prop>
<prop>
<name>dist_open_date</name>
<type>Date</type>
<level>Basic</level>
<desc>开店时间</desc>
</prop>
<prop>
<name>dist_shop_address</name>
<type>String</type>
<level>Basic</level>
<desc>店铺地址</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商id</desc>
</prop>
<prop>
<name>distributor_nick</name>
<type>String</type>
<level>Basic</level>
<desc>分销商nick</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>申请时间</desc>
</prop>
<prop>
<name>requisition_id</name>
<type>Number</type>
<level>Basic</level>
<desc>合作申请ID</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>申请状态（1-申请中、2-成功、3-被退回、4-已撤消、5-过期）</desc>
</prop>
</props>
</struct>
<struct>
<name>ScItemMap</name>
<desc>后端商品映射关系对象</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>map_type=1时，item_id为IC商品id 
 
map_type=7时，item_id为分销商品id</desc>
</prop>
<prop>
<name>map_type</name>
<type>Number</type>
<level>Basic</level>
<desc>1:前台和后台关系 
7:分销和后台关系</desc>
</prop>
<prop>
<name>rel_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>后端商品ID</desc>
</prop>
<prop>
<name>rel_outer_code</name>
<type>String</type>
<level>Basic</level>
<desc>后端商品所有者商家编码</desc>
</prop>
<prop>
<name>rel_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>后端商品所有者id</desc>
</prop>
<prop>
<name>rel_user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>后端商品所有者名称</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>当宝贝下没SKU时该字段为空</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>Ic商家id(分销商id)</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>Ic商家nick(分销商nick)</desc>
</prop>
</props>
</struct>
<struct>
<name>QueryPagination</name>
<desc>查询分页结构</desc>
<props>
<prop>
<name>page_index</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页码数</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</prop>
</props>
</struct>
<struct>
<name>DistributorArchive</name>
<desc>分销商档案信息</desc>
<props>
<prop>
<name>complaints_count_per</name>
<type>String</type>
<level>Basic</level>
<desc>近30天投诉率=近30天投诉总数/近30天支付宝成交笔数</desc>
</prop>
<prop>
<name>down_load_ratio</name>
<type>String</type>
<level>Basic</level>
<desc>供应商授权分销商的产品的下载率。 
率的值都是*10000后的，取值后直接除以100后加上%即可。比如12.33%，返回值是1233。</desc>
</prop>
<prop>
<name>good_evaluation_rate</name>
<type>String</type>
<level>Basic</level>
<desc>好评率</desc>
</prop>
<prop>
<name>good_evaluation_rate_d</name>
<type>String</type>
<level>Basic</level>
<desc>店铺好评率，即店铺累计好评数/店铺评价总数</desc>
</prop>
<prop>
<name>goods_sum</name>
<type>String</type>
<level>Basic</level>
<desc>总商品数</desc>
</prop>
<prop>
<name>indus_per_scole</name>
<type>String</type>
<level>Basic</level>
<desc>行业主营占比</desc>
</prop>
<prop>
<name>industry</name>
<type>String</type>
<level>Basic</level>
<desc>所在行业</desc>
</prop>
<prop>
<name>openashop_time</name>
<type>String</type>
<level>Basic</level>
<desc>开店时间</desc>
</prop>
<prop>
<name>order_merchandise_score</name>
<type>String</type>
<level>Basic</level>
<desc>近180天“宝贝与描述相符”店铺动态评分数据</desc>
</prop>
<prop>
<name>order_shop_ratio</name>
<type>String</type>
<level>Basic</level>
<desc>供应商在分销商店铺中的成交（已付款）订单笔数占比。 
率的值都是*10000后的，取值后直接除以100后加上%即可。比如12.33%，返回值是1233。</desc>
</prop>
<prop>
<name>punished_count</name>
<type>String</type>
<level>Basic</level>
<desc>近30天被处罚总数</desc>
</prop>
<prop>
<name>sale_consignment_score</name>
<type>String</type>
<level>Basic</level>
<desc>近180天“卖家发货速度”店铺动态评分数据</desc>
</prop>
<prop>
<name>seller_refund_time</name>
<type>String</type>
<level>Basic</level>
<desc>近30天卖家平均退款时间,单位天</desc>
</prop>
<prop>
<name>seller_refund_time_per</name>
<type>String</type>
<level>Basic</level>
<desc>近30天平均退款率=近30天退款笔数/近30天支付宝成交笔数</desc>
</prop>
<prop>
<name>seller_star_name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家星级，加载周期：日</desc>
</prop>
<prop>
<name>seller_type</name>
<type>String</type>
<level>Basic</level>
<desc>卖家类型</desc>
</prop>
<prop>
<name>service_quality_score</name>
<type>String</type>
<level>Basic</level>
<desc>近180天“卖家服务态度”店铺动态评分数据</desc>
</prop>
<prop>
<name>shop_address</name>
<type>String</type>
<level>Basic</level>
<desc>店铺url</desc>
</prop>
<prop>
<name>shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名称</desc>
</prop>
<prop>
<name>up_self_ratio</name>
<type>String</type>
<level>Basic</level>
<desc>供应商授权分销商的产品的上架率。 
率的值都是*10000后的，取值后直接除以100后加上%即可。比如12.33%，返回值是1233。</desc>
</prop>
<prop>
<name>up_shop_ratio</name>
<type>String</type>
<level>Basic</level>
<desc>供应商在分销商店铺中的上架商品占比。 
率的值都是*10000后的，取值后直接除以100后加上%即可。比如12.33%，返回值是1233。</desc>
</prop>
<prop>
<name>uv_shop_ratio</name>
<type>String</type>
<level>Basic</level>
<desc>供应商在分销商店铺中铺货商品UV占店铺商品总UV的比。 
率的值都是*10000后的，取值后直接除以100后加上%即可。比如12.33%，返回值是1233。</desc>
</prop>
</props>
</struct>
<struct>
<name>ScItem</name>
<desc>后端商品</desc>
<props>
<prop>
<name>bar_code</name>
<type>String</type>
<level>Basic</level>
<desc>条形码</desc>
</prop>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌id</desc>
</prop>
<prop>
<name>brand_name</name>
<type>String</type>
<level>Basic</level>
<desc>品牌名称</desc>
</prop>
<prop>
<name>height</name>
<type>Number</type>
<level>Basic</level>
<desc>高 单位：mm</desc>
</prop>
<prop>
<name>is_area_sale</name>
<type>Number</type>
<level>Basic</level>
<desc>1表示区域销售，0或是空是非区域销售</desc>
</prop>
<prop>
<name>is_costly</name>
<type>Boolean</type>
<level>Basic</level>
<desc>贵重品:false:不是 true：是</desc>
</prop>
<prop>
<name>is_dangerous</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否危险 false：不是  true：是</desc>
</prop>
<prop>
<name>is_friable</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否易碎 false ：不是  true：是</desc>
</prop>
<prop>
<name>is_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保质期：false:不是 true：是</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>item_type</name>
<type>Number</type>
<level>Basic</level>
<desc>1.普通供应链商品 2.供应链组合主商品</desc>
</prop>
<prop>
<name>length</name>
<type>Number</type>
<level>Basic</level>
<desc>长度 单位：mm</desc>
</prop>
<prop>
<name>matter_status</name>
<type>String</type>
<level>Basic</level>
<desc>LIQUID:液体，1：粉体，SOLID：固体</desc>
</prop>
<prop>
<name>options</name>
<type>Number</type>
<level>Basic</level>
<desc>后端商品options字段</desc>
</prop>
<prop>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>价格：分（吊牌价）</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性格式是  p1:v1,p2:v2,p3:v3</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>体积：立方厘米</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>重量.单位：克</desc>
</prop>
<prop>
<name>width</name>
<type>Number</type>
<level>Basic</level>
<desc>宽 单位：mm</desc>
</prop>
<prop>
<name>wms_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓储商编码，可以支持多个，格式wmsname:code</desc>
</prop>
</props>
</struct>
<struct>
<name>WaybillAddress</name>
<desc>收\发货 地址</desc>
<props>
<prop>
<name>address_detail</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址</desc>
</prop>
<prop>
<name>address_format</name>
<type>String</type>
<level>Basic</level>
<desc>--</desc>
</prop>
<prop>
<name>area</name>
<type>String</type>
<level>Basic</level>
<desc>三级地址</desc>
</prop>
<prop>
<name>area_code</name>
<type>Number</type>
<level>Basic</level>
<desc>三级地址代码</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>二级地址</desc>
</prop>
<prop>
<name>city_code</name>
<type>Number</type>
<level>Basic</level>
<desc>二级地址代码</desc>
</prop>
<prop>
<name>division_id</name>
<type>Number</type>
<level>Basic</level>
<desc>末级地址</desc>
</prop>
<prop>
<name>province</name>
<type>String</type>
<level>Basic</level>
<desc>一级地址</desc>
</prop>
<prop>
<name>province_code</name>
<type>Number</type>
<level>Basic</level>
<desc>一级地址代码</desc>
</prop>
<prop>
<name>town</name>
<type>String</type>
<level>Basic</level>
<desc>四级地址</desc>
</prop>
<prop>
<name>town_code</name>
<type>Number</type>
<level>Basic</level>
<desc>四级地址代码</desc>
</prop>
<prop>
<name>waybill_address_id</name>
<type>Number</type>
<level>Basic</level>
<desc>waybill 地址记录ID(非地址库ID)</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeOrderInfo</name>
<desc>订单数据</desc>
<props>
<prop>
<name>ali_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否阿里系订单</desc>
</prop>
<prop>
<name>consignee_address</name>
<type>WaybillAddress</type>
<level>Object</level>
<desc>收货人地址</desc>
</prop>
<prop>
<name>consignee_name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人</desc>
</prop>
<prop>
<name>consignee_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收货人联系方式</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>order_channels_type</name>
<type>String</type>
<level>Basic</level>
<desc>订单渠道</desc>
</prop>
<prop>
<name>short_address</name>
<type>String</type>
<level>Basic</level>
<desc>大头笔</desc>
</prop>
<prop>
<name>trade_order_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>交易订单列表</desc>
</prop>
<prop>
<name>waybill_code</name>
<type>String</type>
<level>Basic</level>
<desc>面单号</desc>
</prop>
</props>
</struct>
<struct>
<name>DistributorItemFlow</name>
<desc>分销商品流量</desc>
<props>
<prop>
<name>item_pv</name>
<type>String</type>
<level>Basic</level>
<desc>分销商商品PV。返回KV串中可能不足一周数据，如新上架商品、中间下架以及删除等操作导致。</desc>
</prop>
<prop>
<name>item_uv</name>
<type>String</type>
<level>Basic</level>
<desc>分销商商品UV。返回KV串中可能不足一周数据，如新上架商品、中间下架以及删除等操作导致。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemTemplate</name>
<desc>宝贝详情页面信息</desc>
<props>
<prop>
<name>shop_type</name>
<type>Number</type>
<level>Basic</level>
<desc>用于区分宝贝模板属于内店和外店</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝模板的id</desc>
</prop>
<prop>
<name>template_name</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝详情模板的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>WaybillApplyNewInfo</name>
<desc>申请面单返回数据</desc>
<props>
<prop>
<name>feature</name>
<type>String</type>
<level>Basic</level>
<desc>预留字段</desc>
</prop>
<prop>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>--</desc>
</prop>
<prop>
<name>short_address</name>
<type>String</type>
<level>Basic</level>
<desc>根据收货地址返回大头笔信息</desc>
</prop>
<prop>
<name>trade_order_info</name>
<type>TradeOrderInfo</type>
<level>Object</level>
<desc>面单对应的订单列</desc>
</prop>
<prop>
<name>waybill_code</name>
<type>String</type>
<level>Basic</level>
<desc>返回的面单号</desc>
</prop>
</props>
</struct>
<struct>
<name>Hotel</name>
<desc>Hotel（酒店）结构。各字段详细说明可参考接口定义，如：酒店发布接口。</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>酒店地址</desc>
</prop>
<prop>
<name>alias_name</name>
<type>String</type>
<level>Basic</level>
<desc>某个卖家发布的酒店的别名(注：该字段将要废弃)</desc>
</prop>
<prop>
<name>audit_deny_reason</name>
<type>String</type>
<level>Basic</level>
<desc>酒店审核被否决的原因</desc>
</prop>
<prop>
<name>city</name>
<type>Number</type>
<level>Basic</level>
<desc>城市编码</desc>
</prop>
<prop>
<name>city_str</name>
<type>String</type>
<level>Basic</level>
<desc>城市中文名称</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家编码</desc>
</prop>
<prop>
<name>country_str</name>
<type>String</type>
<level>Basic</level>
<desc>国家中文名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>decorate_time</name>
<type>String</type>
<level>Basic</level>
<desc>装修时间</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>酒店介绍</desc>
</prop>
<prop>
<name>district</name>
<type>Number</type>
<level>Basic</level>
<desc>区域编码</desc>
</prop>
<prop>
<name>district_str</name>
<type>String</type>
<level>Basic</level>
<desc>区域中文名称</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>level</name>
<type>String</type>
<level>Basic</level>
<desc>酒店级别</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>酒店名称</desc>
</prop>
<prop>
<name>opening_time</name>
<type>String</type>
<level>Basic</level>
<desc>开业时间</desc>
</prop>
<prop>
<name>orientation</name>
<type>String</type>
<level>Basic</level>
<desc>酒店定位</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>酒店图片url</desc>
</prop>
<prop>
<name>province</name>
<type>Number</type>
<level>Basic</level>
<desc>省份编码</desc>
</prop>
<prop>
<name>province_str</name>
<type>String</type>
<level>Basic</level>
<desc>省份中文名称</desc>
</prop>
<prop>
<name>room_types</name>
<type>RoomType</type>
<level>Object Array</level>
<desc>房型列表</desc>
</prop>
<prop>
<name>rooms</name>
<type>Number</type>
<level>Basic</level>
<desc>房间数</desc>
</prop>
<prop>
<name>service</name>
<type>String</type>
<level>Basic</level>
<desc>交通距离与设施服务。JSON格式串。</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态。0：待审核，1：正常（审核通过），2：审核否决，3：停售</desc>
</prop>
<prop>
<name>storeys</name>
<type>Number</type>
<level>Basic</level>
<desc>楼层数</desc>
</prop>
<prop>
<name>tel</name>
<type>String</type>
<level>Basic</level>
<desc>酒店电话</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoItemRecord</name>
<desc>分销商品下载记录</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>下载时间</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间（系统时间，无业务意义）</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）</desc>
</prop>
</props>
</struct>
<struct>
<name>Cooperation</name>
<desc>合作分销关系</desc>
<props>
<prop>
<name>auth_payway</name>
<type>String</type>
<level>Basic Array</level>
<desc>供应商授权的支付方式：ALIPAY(支付宝)、OFFPREPAY(预付款)、OFFTRANSFER(转帐)、OFFSETTLEMENT(后期结算)</desc>
</prop>
<prop>
<name>cooperate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>合作关系ID</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
<prop>
<name>distributor_nick</name>
<type>String</type>
<level>Basic</level>
<desc>分销商nick</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>合作终止时间</desc>
</prop>
<prop>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>等级ID</desc>
</prop>
<prop>
<name>product_line</name>
<type>String</type>
<level>Basic</level>
<desc>授权产品线</desc>
</prop>
<prop>
<name>product_line_name</name>
<type>String</type>
<level>Basic Array</level>
<desc>授权产品线名称，和product_line中的值按序对应</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>合作起始时间</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>合作状态： NORMAL(合作中)、 ENDING(终止中) 、END (终止)</desc>
</prop>
<prop>
<name>supplier_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商ID</desc>
</prop>
<prop>
<name>supplier_nick</name>
<type>String</type>
<level>Basic</level>
<desc>供应商NICK</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式： AGENT(代销) 、DEALER(经销)</desc>
</prop>
</props>
</struct>
<struct>
<name>LimitDiscount</name>
<desc>限时打折</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折结束时间。</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>该限时打折宝贝数量。</desc>
</prop>
<prop>
<name>limit_discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>限时打折ID。</desc>
</prop>
<prop>
<name>limit_discount_name</name>
<type>String</type>
<level>Basic</level>
<desc>限时打折名称。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折开始时间。</desc>
</prop>
</props>
</struct>
<struct>
<name>BrandCatMetaData</name>
<desc>类目、品牌下的达尔文元数据</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌id</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>叶子类目id</desc>
</prop>
<prop>
<name>certified_data</name>
<type>String</type>
<level>Basic</level>
<desc>以;隔开多个认证资料。:隔开资料ID与内容。如？1:产品包装图片;2:完整产品资质</desc>
</prop>
<prop>
<name>is_darwin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>类目、品牌是否切入达尔文</desc>
</prop>
</props>
</struct>
<struct>
<name>RoomType</name>
<desc>RoomType（房型）结构。各字段详细说明可参考接口定义，如：房型发布接口。</desc>
<props>
<prop>
<name>alias_name</name>
<type>String</type>
<level>Basic</level>
<desc>某卖家提供的房型别名(注：该字段将被废弃)</desc>
</prop>
<prop>
<name>audit_deny_reason</name>
<type>String</type>
<level>Basic</level>
<desc>房型审核被否决的原因</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>房型名称</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>房型id</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态。0：待审核，1：正常（审核通过），2：审核否决，3：停售</desc>
</prop>
</props>
</struct>
<struct>
<name>AddressResult</name>
<desc>地址库返回数据信息</desc>
<props>
<prop>
<name>addr</name>
<type>String</type>
<level>Basic</level>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</prop>
<prop>
<name>area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>区域ID</desc>
</prop>
<prop>
<name>cancel_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认退货地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>市</desc>
</prop>
<prop>
<name>contact_id</name>
<type>Number</type>
<level>Basic</level>
<desc>地址库ID</desc>
</prop>
<prop>
<name>contact_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>区、县</desc>
</prop>
<prop>
<name>get_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认取货地址</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>手机号码，手机与电话必需有一个  
手机号码不能超过20位</desc>
</prop>
<prop>
<name>modify_date</name>
<type>Date</type>
<level>Basic</level>
<desc>修改日期时间</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>电话号码,手机与电话必需有一个</desc>
</prop>
<prop>
<name>province</name>
<type>String</type>
<level>Basic</level>
<desc>省</desc>
</prop>
<prop>
<name>seller_company</name>
<type>String</type>
<level>Basic</level>
<desc>公司名称,</desc>
</prop>
<prop>
<name>send_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认发货地址</desc>
</prop>
<prop>
<name>zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>地区邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderGuest</name>
<desc>酒店订单入住人结构。</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>入住人姓名</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店订单id</desc>
</prop>
<prop>
<name>person_pos</name>
<type>Number</type>
<level>Basic</level>
<desc>入住人序号</desc>
</prop>
<prop>
<name>room_pos</name>
<type>Number</type>
<level>Basic</level>
<desc>房间序号</desc>
</prop>
<prop>
<name>tel</name>
<type>String</type>
<level>Basic</level>
<desc>入住人电话</desc>
</prop>
</props>
</struct>
<struct>
<name>RoomImage</name>
<desc>RoomImage（酒店图片）结构。各字段详细说明可参考接口定义，如：商品图片上传接口。</desc>
<props>
<prop>
<name>all_images</name>
<type>String</type>
<level>Basic</level>
<desc>商品所有图片的url，用”,”隔开。即，当前该商品的所有图片地址。</desc>
</prop>
<prop>
<name>gid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店商品id</desc>
</prop>
<prop>
<name>image</name>
<type>String</type>
<level>Basic</level>
<desc>图片url。当前接口操作的图片url。调用上传图片接口时，代表上传图片后得到的图片url。调用删除图片接口时，代表被删除掉的图片url。</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片位置，可选值：1,2,3,4,5。代表图片的位置，如：2，代表第二张图片。</desc>
</prop>
</props>
</struct>
<struct>
<name>LimitDiscountDetail</name>
<desc>限时打折详情</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折结束时间。</desc>
</prop>
<prop>
<name>item_discount</name>
<type>Price</type>
<level>Basic</level>
<desc>该商品限时折扣</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的id(数字类型)</desc>
</prop>
<prop>
<name>limit_discount_name</name>
<type>String</type>
<level>Basic</level>
<desc>限时打折名称</desc>
</prop>
<prop>
<name>limit_num</name>
<type>Number</type>
<level>Basic</level>
<desc>每人限购数量，1、2、5、10000(不限)。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折开始时间。</desc>
</prop>
</props>
</struct>
<struct>
<name>GroupData</name>
<desc>聚划算商品组对象</desc>
<props>
<prop>
<name>group_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>团结束时间</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>组id，唯一标识一个聚划算的组</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>组的名称</desc>
</prop>
<prop>
<name>group_start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>团开始时间</desc>
</prop>
<prop>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</prop>
<prop>
<name>ju_view</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该组是否在聚划算平台显示</desc>
</prop>
<prop>
<name>platform_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品组所对应的平台id，1001=聚划算</desc>
</prop>
</props>
</struct>
<struct>
<name>LaiwangUsers</name>
<desc>公众账号关注者openid列表</desc>
<props>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>拉取的OPENID个数，最大值为10000</desc>
</prop>
<prop>
<name>data</name>
<type>String</type>
<level>Basic</level>
<desc>OPENID列表数据</desc>
</prop>
<prop>
<name>next_openid</name>
<type>String</type>
<level>Basic</level>
<desc>拉取列表的后一个用户的OPENID</desc>
</prop>
<prop>
<name>total</name>
<type>Number</type>
<level>Basic</level>
<desc>关注该公众账号的总用户数</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopPositionData</name>
<desc>聚划算应用，展示本地化服务类商品的分店地理信息的对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>卖家店铺所在的城市</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝商品的数字id，对应了商品线的一个商品对象标识</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>卖家店铺的手机联系号码</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家的账户数字id</desc>
</prop>
<prop>
<name>shop_position_id</name>
<type>Number</type>
<level>Basic</level>
<desc>标识了一个唯一的地址位置对象，具有独立的坐标和交通信息</desc>
</prop>
<prop>
<name>store_name</name>
<type>String</type>
<level>Basic</level>
<desc>描述店铺的名称</desc>
</prop>
<prop>
<name>traffic</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的一些交通提示信息</desc>
</prop>
<prop>
<name>x</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所在的经度，放大100000倍</desc>
</prop>
<prop>
<name>y</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所在的纬度，放大100000倍</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemData</name>
<desc>聚划算商品对象</desc>
<props>
<prop>
<name>activity_price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的聚划算价格，单位分</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的淘宝类目id</desc>
</prop>
<prop>
<name>child_category</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的聚划算二级类目</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在城市</desc>
</prop>
<prop>
<name>current_stock</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的当前库存</desc>
</prop>
<prop>
<name>discount</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的折扣 聚划算价/原价</desc>
</prop>
<prop>
<name>exist_hold_stock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在占座（下单未支付的订单）</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的团id</desc>
</prop>
<prop>
<name>is_lock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为锁定状态,锁定状态的商品才显示为可销售</desc>
</prop>
<prop>
<name>item_desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的聚划算描述信息</desc>
</prop>
<prop>
<name>item_guarantee</name>
<type>String</type>
<level>Basic</level>
<desc>代表聚划算支持的6种消保该商品是否支持，1支持，0不支持 
第一位：如实描述 
第二位：七天退换 
第三位：假一陪三 
第四位：商城正品保障 
第五位：商城提供发票 
第六位：商城7天退换</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的数字id</desc>
</prop>
<prop>
<name>item_status</name>
<type>String</type>
<level>Basic</level>
<desc>描述商品的状态，AVAIL_BUY=可以购买 
WAIT_FOR_START=即将开始 
EXIST_HOLDER=有占座 
NO_STOCK=卖光了 
OUT_OF_TIME=团购已结束</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的URl</desc>
</prop>
<prop>
<name>long_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品的长名称</desc>
</prop>
<prop>
<name>online_end_time</name>
<type>Number</type>
<level>Basic</level>
<desc>商品活动结束时间点的毫秒值</desc>
</prop>
<prop>
<name>online_start_time</name>
<type>Number</type>
<level>Basic</level>
<desc>商品上架开始时间点的毫秒值</desc>
</prop>
<prop>
<name>original_price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的原价，单位分</desc>
</prop>
<prop>
<name>parent_category</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的聚划算一级类目</desc>
</prop>
<prop>
<name>pay_postage</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否包邮</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的图片地址</desc>
</prop>
<prop>
<name>pic_url_from_ic</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的交易线原始图片地址</desc>
</prop>
<prop>
<name>pic_wide_url</name>
<type>String</type>
<level>Basic</level>
<desc>聚划算图片宽图的地址</desc>
</prop>
<prop>
<name>platform_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的平台id，1001=聚划算</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家对应的信用等级</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的卖家账户id</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的卖家账户nick</desc>
</prop>
<prop>
<name>shop_position_list</name>
<type>ShopPositionData</type>
<level>Object Array</level>
<desc>本地化服务对象的分店信息</desc>
</prop>
<prop>
<name>shop_type</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的店铺类型，集市，商城</desc>
</prop>
<prop>
<name>short_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品短名称</desc>
</prop>
<prop>
<name>sold_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已参团的人数（付款）</desc>
</prop>
</props>
</struct>
<struct>
<name>NonreplyStatById</name>
<desc>客服未回复统计</desc>
<props>
<prop>
<name>non_reply_customId</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员未回复的客户ID</desc>
</prop>
<prop>
<name>non_reply_num</name>
<type>Number</type>
<level>Basic</level>
<desc>客服未回复数</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionTag</name>
<desc>优惠标签对象</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>标签结束时间</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>标签开始时间</desc>
</prop>
<prop>
<name>tag_desc</name>
<type>String</type>
<level>Basic</level>
<desc>标签描述</desc>
</prop>
<prop>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>标签ID</desc>
</prop>
<prop>
<name>tag_name</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称</desc>
</prop>
</props>
</struct>
<struct>
<name>StaffEvalStatById</name>
<desc>客服评价统计</desc>
<props>
<prop>
<name>evaluations</name>
<type>Evaluation</type>
<level>Object Array</level>
<desc>客服评价</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionTagQuery</name>
<desc>优惠标签查询结果</desc>
<props>
<prop>
<name>tag_list</name>
<type>PromotionTag</type>
<level>Object Array</level>
<desc>标签结果列表</desc>
</prop>
<prop>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</prop>
</props>
</struct>
<struct>
<name>SubscInfo</name>
<desc>需求订购信息</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单id</desc>
</prop>
<prop>
<name>process_status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单状态</desc>
</prop>
<prop>
<name>sale_bonus</name>
<type>Number</type>
<level>Basic</level>
<desc>销售提成</desc>
</prop>
<prop>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<desc>商家名称</desc>
</prop>
<prop>
<name>service_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>服务开结束时间</desc>
</prop>
<prop>
<name>service_start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>服务开始时间</desc>
</prop>
<prop>
<name>sp_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务商名称</desc>
</prop>
<prop>
<name>sub_account_list</name>
<type>String</type>
<level>Basic</level>
<desc>子账号名称列表</desc>
</prop>
<prop>
<name>subsc_created_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>subsc_modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单修改时间</desc>
</prop>
</props>
</struct>
<struct>
<name>CreativeRecord</name>
<desc>创意修改记录，只记录最后一次修改</desc>
<props>
<prop>
<name>audit_desc</name>
<type>String</type>
<level>Basic</level>
<desc>审核拒绝原因描述</desc>
</prop>
<prop>
<name>audit_status</name>
<type>String</type>
<level>Basic</level>
<desc>审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；默认为audit_pass。</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>creative_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词id</desc>
</prop>
<prop>
<name>img_url</name>
<type>String</type>
<level>Basic</level>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>系统记录最后修改时间</desc>
</prop>
<prop>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创意被修改的时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>old_img_url</name>
<type>String</type>
<level>Basic</level>
<desc>修改前创意图片地址</desc>
</prop>
<prop>
<name>old_title</name>
<type>String</type>
<level>Basic</level>
<desc>修改前创意标题</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>创意标题，最多20个汉字</desc>
</prop>
</props>
</struct>
<struct>
<name>Keyword</name>
<desc>关键词</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>audit_desc</name>
<type>String</type>
<level>Basic</level>
<desc>审核拒绝原因描述</desc>
</prop>
<prop>
<name>audit_status</name>
<type>String</type>
<level>Basic</level>
<desc>审核状态：  
audit_wait-待审核； 
audit_pass-审核通过(上线)； 
audit_reject-审核拒绝； 
audit_offline-审核直接下线； 
默认为 audit_pass。</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划id</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_default_price</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否使用推广组默认出价，true-是；false-否；</desc>
</prop>
<prop>
<name>is_garbage</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是垃圾词，false-不是；true-是；垃圾词是近期无点击的词</desc>
</prop>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词id</desc>
</prop>
<prop>
<name>match_scope</name>
<type>String</type>
<level>Basic</level>
<desc>匹配模式</desc>
</prop>
<prop>
<name>max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>qscore</name>
<type>String</type>
<level>Basic</level>
<desc>词质量得分</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupCatmatch</name>
<desc>推广组类目出价</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划Id</desc>
</prop>
<prop>
<name>catmatch_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目出价Id</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_default_price</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否使用推广组默认出价，false-不使用默认出价  true-使用默认出价；默认true</desc>
</prop>
<prop>
<name>max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>类目出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>推广组主人昵称</desc>
</prop>
<prop>
<name>online_status</name>
<type>String</type>
<level>Basic</level>
<desc>是否启用类目出价；offline-不启用；online-启用；默认启用</desc>
</prop>
<prop>
<name>qscore</name>
<type>String</type>
<level>Basic</level>
<desc>类目出价质量得分</desc>
</prop>
</props>
</struct>
<struct>
<name>Creative</name>
<desc>创意</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>audit_desc</name>
<type>String</type>
<level>Basic</level>
<desc>审核拒绝原因描述</desc>
</prop>
<prop>
<name>audit_status</name>
<type>String</type>
<level>Basic</level>
<desc>审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；默认为audit_pass。</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划Id</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>creative_id</name>
<type>Number</type>
<level>Basic</level>
<desc>创意id</desc>
</prop>
<prop>
<name>img_url</name>
<type>String</type>
<level>Basic</level>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>创意标题，最多20个汉字</desc>
</prop>
</props>
</struct>
<struct>
<name>ChannelOption</name>
<desc>Campaign投放频道</desc>
<props>
<prop>
<name>channel_id</name>
<type>Number</type>
<level>Basic</level>
<desc>频道id</desc>
</prop>
<prop>
<name>is_nonsearch</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有非搜索流量，true：是；false：否；</desc>
</prop>
<prop>
<name>is_search</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有搜索流量，true：是；false：否；</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>频道名称</desc>
</prop>
<prop>
<name>traffic_name</name>
<type>String</type>
<level>Basic</level>
<desc>流量名称</desc>
</prop>
<prop>
<name>traffic_type</name>
<type>String</type>
<level>Basic</level>
<desc>流量类型，taobao：淘宝站内；other：淘宝站外</desc>
</prop>
</props>
</struct>
<struct>
<name>WaybillApplySubscriptionInfo</name>
<desc>商家与CP的订购关系</desc>
<props>
<prop>
<name>branch_account_cols</name>
<type>WaybillBranchAccount</type>
<level>Object Array</level>
<desc>CP网点信息及对应的商家的发货信息</desc>
</prop>
<prop>
<name>cp_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务商ID</desc>
</prop>
<prop>
<name>cp_type</name>
<type>Number</type>
<level>Basic</level>
<desc>CP类型</desc>
</prop>
<prop>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>订购关系是否建立</desc>
</prop>
</props>
</struct>
<struct>
<name>AreaOption</name>
<desc>直通车可推广的地域</desc>
<props>
<prop>
<name>area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>地域id</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>地域级别，目前自治区、省、直辖市是1，其他城市、地区是2</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>地域名称</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父地域id，若该字段为0表示该行政区为顶层，例如像北京，国外等。</desc>
</prop>
</props>
</struct>
<struct>
<name>WaybillBranchAccount</name>
<desc>CP下的网点信息</desc>
<props>
<prop>
<name>allocated_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>已用单数</desc>
</prop>
<prop>
<name>branch_code</name>
<type>String</type>
<level>Basic</level>
<desc>网点ID</desc>
</prop>
<prop>
<name>cp_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务商ID</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>可用单数</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商家ID</desc>
</prop>
<prop>
<name>shipp_address_cols</name>
<type>WaybillAddress</type>
<level>Object Array</level>
<desc>当前网点下的发货地址</desc>
</prop>
</props>
</struct>
<struct>
<name>RankedItem</name>
<desc>关键词排名推广商品信息</desc>
<props>
<prop>
<name>link_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品链接</desc>
</prop>
<prop>
<name>max_price</name>
<type>Price</type>
<level>Basic</level>
<desc>最高出价</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>客户昵称</desc>
</prop>
<prop>
<name>order</name>
<type>Number</type>
<level>Basic</level>
<desc>排名</desc>
</prop>
<prop>
<name>rank_score</name>
<type>Number</type>
<level>Basic</level>
<desc>原始质量评分</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>创意标题</desc>
</prop>
</props>
</struct>
<struct>
<name>WaybillApplyUpdateInfo</name>
<desc>更新面单数据</desc>
<props>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>--</desc>
</prop>
<prop>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>--</desc>
</prop>
<prop>
<name>trade_order_info</name>
<type>TradeOrderInfo</type>
<level>Object</level>
<desc>--</desc>
</prop>
<prop>
<name>waybill_code</name>
<type>String</type>
<level>Basic</level>
<desc>--</desc>
</prop>
</props>
</struct>
<struct>
<name>PaimaiInfo</name>
<desc>拍卖商品相关信息</desc>
<props>
<prop>
<name>deposit</name>
<type>Number</type>
<level>Basic</level>
<desc>用户自定义的固定保证金。如果用户未传则说明用户选择使用淘宝默认的保证金模式10%，此时deposit等于0.</desc>
</prop>
<prop>
<name>interval</name>
<type>Number</type>
<level>Basic</level>
<desc>降价拍中的降价间隔</desc>
</prop>
<prop>
<name>mode</name>
<type>Number</type>
<level>Basic</level>
<desc>拍卖类型，目前包括增加拍，荷兰拍和降价拍。</desc>
</prop>
<prop>
<name>reserve</name>
<type>Price</type>
<level>Basic</level>
<desc>降价拍的保留价</desc>
</prop>
<prop>
<name>valid_hour</name>
<type>Number</type>
<level>Basic</level>
<desc>对于拍卖来说可以设定有效期，这里是有效期的小时数。</desc>
</prop>
<prop>
<name>valid_minute</name>
<type>Number</type>
<level>Basic</level>
<desc>对于拍卖来说可以设定有效期，这里是有效期的分钟数。</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroup</name>
<desc>推广组</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划Id</desc>
</prop>
<prop>
<name>category_ids</name>
<type>String</type>
<level>Basic</level>
<desc>商品类目id，从根类目到子类目，用空格分割</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>default_price</name>
<type>Number</type>
<level>Basic</level>
<desc>默认出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>is_nonsearch_default_price</name>
<type>Boolean</type>
<level>Basic</level>
<desc>非搜索是否使用默认出价，false-不用；true-使用；默认为true;</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>推广组主人昵称</desc>
</prop>
<prop>
<name>nonsearch_max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>非搜索出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>nonsearch_status</name>
<type>Number</type>
<level>Basic</level>
<desc>通投状态,1：开启；0：暂停；默认为1</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字id</desc>
</prop>
<prop>
<name>offline_type</name>
<type>String</type>
<level>Basic</level>
<desc>online-上线；audit_offline-审核下线；crm_offline-CRM下线；默认为online</desc>
</prop>
<prop>
<name>online_status</name>
<type>String</type>
<level>Basic</level>
<desc>用户设置的上下线状态，offline-下线(暂停竞价)；online-上线；默认为online</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>审核下线原因</desc>
</prop>
</props>
</struct>
<struct>
<name>DeliveryTime</name>
<desc>发货时间数据结构</desc>
<props>
<prop>
<name>delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>商品级别设置的发货时间。设置了商品级别的发货时间，相对发货时间，则填写相对发货时间的天数（大于3）；绝对发货时间，则填写yyyy-mm-dd格式，如2013-11-11</desc>
</prop>
<prop>
<name>delivery_time_type</name>
<type>String</type>
<level>Basic</level>
<desc>发货时间类型：绝对发货时间或者相对发货时间</desc>
</prop>
<prop>
<name>need_delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>设置是否使用发货时间，商品级别，sku级别</desc>
</prop>
</props>
</struct>
<struct>
<name>SubscInfoWrapper</name>
<desc>SubscInfoWrapper</desc>
<props>
<prop>
<name>subsc_info_list</name>
<type>SubscInfo</type>
<level>Object Array</level>
<desc>需求订购信息</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总量</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbInventory</name>
<desc>库存详情对象。其中包括货主ID，仓库编码，库存，库存类型等属性</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>lock_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>冻结(锁定)数量，用来跟踪库存的中间状态，比如前台销售了1件商品，这时lock加1，当商品出库的时候lock再减回去</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>库存数量(有效数量)</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码，关联到仓库类型服务的编码非托管库存(卖家自己管理的库存，物流宝不可见又称自有库存)的所在仓库编码: STORE_SYS_PRIVATE</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>VENDIBLE--可销售库存 
FREEZE--冻结库存 
ONWAY--在途库存 
DEFECT--残次品库存</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货主ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Qscore</name>
<desc>质量得分类</desc>
<props>
<prop>
<name>catmatch_qscore</name>
<type>String</type>
<level>Basic</level>
<desc>类目出价质量得分</desc>
</prop>
<prop>
<name>keyword_qscore_list</name>
<type>KeywordQscore</type>
<level>Object Array</level>
<desc>词质量得分列表</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItem</name>
<desc>物流宝商品</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌ID</desc>
</prop>
<prop>
<name>color</name>
<type>String</type>
<level>Basic</level>
<desc>颜色</desc>
</prop>
<prop>
<name>creator</name>
<type>String</type>
<level>Basic</level>
<desc>创建人</desc>
</prop>
<prop>
<name>flag</name>
<type>String</type>
<level>Basic</level>
<desc>标记，用逗号隔开的字符串。 
BIT_HAS_AUTHORIZE 第1位 是否有授权规则; 
BATCH  第2位 是否有批次规则； 
SYNCHRONIZATION 第3位 是否有同步规则。</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建日期</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改日期</desc>
</prop>
<prop>
<name>goods_cat</name>
<type>String</type>
<level>Basic</level>
<desc>货类</desc>
</prop>
<prop>
<name>height</name>
<type>Number</type>
<level>Basic</level>
<desc>高</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>is_dangerous</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否危险品</desc>
</prop>
<prop>
<name>is_friable</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否易碎</desc>
</prop>
<prop>
<name>is_sku</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是不是sku商品 
值为true或false</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>last_modifier</name>
<type>String</type>
<level>Basic</level>
<desc>最后修改人</desc>
</prop>
<prop>
<name>length</name>
<type>Number</type>
<level>Basic</level>
<desc>mm</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>商品的名称</desc>
</prop>
<prop>
<name>package_material</name>
<type>String</type>
<level>Basic</level>
<desc>包装材料</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父item的id，当item为物流宝子商品时，parent_id必填,否则不必填 
可通过父ID来得知商品的关系。</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>价格</desc>
</prop>
<prop>
<name>pricing_cat</name>
<type>String</type>
<level>Basic</level>
<desc>计价货类</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>属性key:value; key:value</desc>
</prop>
<prop>
<name>publish_version</name>
<type>Number</type>
<level>Basic</level>
<desc>发布版本号，用来同步商</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>商品备注</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态，item_status_valid -- 1 表示 有效 item_status_lock -- 2 表示锁住</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>前台商品名称</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>商品类型： 
NORMAL--普通类型; 
COMBINE--组合商品; 
DISTRIBUTION--分销商品; 
默认为NORMAL</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所有人淘宝ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品所有人淘宝nick</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>立方mm</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>重量</desc>
</prop>
<prop>
<name>width</name>
<type>Number</type>
<level>Basic</level>
<desc>宽</desc>
</prop>
</props>
</struct>
<struct>
<name>ExtraAttributes</name>
<desc>直通车商品对象属性（Map）</desc>
<props>
<prop>
<name>publish_time</name>
<type>Date</type>
<level>Basic</level>
<desc>商品在淘宝的发布时间</desc>
</prop>
<prop>
<name>quantity</name>
<type>Price</type>
<level>Basic</level>
<desc>库存数量</desc>
</prop>
<prop>
<name>sales_count</name>
<type>Price</type>
<level>Basic</level>
<desc>商品的累积销量</desc>
</prop>
</props>
</struct>
<struct>
<name>Activity</name>
<desc>活动数据结构</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>activity_url</name>
<type>String</type>
<level>Basic</level>
<desc>领用优惠券的链接</desc>
</prop>
<prop>
<name>applied_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已经领取的优惠券的数量</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动对应的优惠券ID</desc>
</prop>
<prop>
<name>create_user</name>
<type>String</type>
<level>Basic</level>
<desc>self代表自己创建，other他人创建</desc>
</prop>
<prop>
<name>person_limit_count</name>
<type>Number</type>
<level>Basic</level>
<desc>每个买家限领取优惠券的数量，1～5张</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>enabled代表有效，invalid代表失效。other代表空值</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家设置优惠券领取的总领用量</desc>
</prop>
</props>
</struct>
<struct>
<name>DataPushTask</name>
<desc>数据推送任务</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<desc>任务所属的appkey</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>任务编号</desc>
</prop>
<prop>
<name>next_execute_time</name>
<type>Date</type>
<level>Basic</level>
<desc>下次执行时间</desc>
</prop>
<prop>
<name>now_sync_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上一次同步到的时间点</desc>
</prop>
<prop>
<name>params</name>
<type>String</type>
<level>Basic</level>
<desc>任务的业务参数，用json格式表示</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>任务类型代码</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>任务所属的用户编号</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户的nick</desc>
</prop>
<prop>
<name>version</name>
<type>Number</type>
<level>Basic</level>
<desc>任务的版本号，在更新任务时，需要用到此数据</desc>
</prop>
</props>
</struct>
<struct>
<name>Coupon</name>
<desc>优惠券数据结构</desc>
<props>
<prop>
<name>condition</name>
<type>Number</type>
<level>Basic</level>
<desc>订单满多少分才能用这个优惠券，501就是满501分能使用。注意：返回的是“分”，不是“元”</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券ID</desc>
</prop>
<prop>
<name>creat_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券创建时间</desc>
</prop>
<prop>
<name>create_channel</name>
<type>String</type>
<level>Basic</level>
<desc>优惠券的创建渠道，自己创建/他人创建</desc>
</prop>
<prop>
<name>denominations</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券的面值，返回的是“分”，不是“元”，500代表500分相当于5元</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券的截止日期</desc>
</prop>
</props>
</struct>
<struct>
<name>BookBill</name>
<desc>虚拟账户账单结构</desc>
<props>
<prop>
<name>account_id</name>
<type>Number</type>
<level>Basic</level>
<desc>虚拟账户科目编号</desc>
</prop>
<prop>
<name>amount</name>
<type>Number</type>
<level>Basic</level>
<desc>操作金额</desc>
</prop>
<prop>
<name>bid</name>
<type>Number</type>
<level>Basic</level>
<desc>虚拟账户流水编号</desc>
</prop>
<prop>
<name>book_time</name>
<type>Date</type>
<level>Basic</level>
<desc>记账时间</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>journal_type</name>
<type>Number</type>
<level>Basic</level>
<desc>流水类型:101-可用金充值;102-可用金扣除;103-冻结;104-解冻;105-冻结金充值;106-冻结金扣除</desc>
</prop>
<prop>
<name>other_alipay_id</name>
<type>String</type>
<level>Basic</level>
<desc>流水的商家支付宝id</desc>
</prop>
<prop>
<name>taobao_alipay_id</name>
<type>String</type>
<level>Basic</level>
<desc>流水的淘宝支付宝id</desc>
</prop>
</props>
</struct>
<struct>
<name>MpicVideo</name>
<desc>宝贝主图视频数据结构</desc>
<props>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频记录所关联的商品的数字id</desc>
</prop>
<prop>
<name>video_duaration</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频的时长，单位：秒</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频的在淘视频中的ID</desc>
</prop>
<prop>
<name>video_pic</name>
<type>String</type>
<level>Basic</level>
<desc>主图视频的缩略图URL</desc>
</prop>
<prop>
<name>video_status</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频的状态</desc>
</prop>
</props>
</struct>
<struct>
<name>Bill</name>
<desc>账单结构</desc>
<props>
<prop>
<name>account_id</name>
<type>Number</type>
<level>Basic</level>
<desc>科目编号</desc>
</prop>
<prop>
<name>alipay_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝账户编号</desc>
</prop>
<prop>
<name>alipay_mail</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝账户名称</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号,暂不提供</desc>
</prop>
<prop>
<name>alipay_notice</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝备注</desc>
</prop>
<prop>
<name>alipay_outno</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝商户订单号</desc>
</prop>
<prop>
<name>amount</name>
<type>Number</type>
<level>Basic</level>
<desc>账单金额,退款时返回的是负数</desc>
</prop>
<prop>
<name>bid</name>
<type>Number</type>
<level>Basic</level>
<desc>账单编号</desc>
</prop>
<prop>
<name>biz_time</name>
<type>Date</type>
<level>Basic</level>
<desc>业务时间,订单交易完成的时间</desc>
</prop>
<prop>
<name>book_time</name>
<type>Date</type>
<level>Basic</level>
<desc>记账时间</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>String</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>num_iid</name>
<type>String</type>
<level>Basic</level>
<desc>所属商品编号</desc>
</prop>
<prop>
<name>obj_alipay_id</name>
<type>String</type>
<level>Basic</level>
<desc>目标支付宝账户编号</desc>
</prop>
<prop>
<name>obj_alipay_mail</name>
<type>String</type>
<level>Basic</level>
<desc>目标支付宝账户名称</desc>
</prop>
<prop>
<name>order_id</name>
<type>String</type>
<level>Basic</level>
<desc>交易子订单编号</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>支付时间,收取佣金时支付宝的扣款时间</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>0-未支付,1-支付成功,2-支付失败</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>交易金额</desc>
</prop>
<prop>
<name>trade_id</name>
<type>String</type>
<level>Basic</level>
<desc>交易订单编号</desc>
</prop>
</props>
</struct>
<struct>
<name>ErrorMessage</name>
<desc>未发放成功买家昵称，发放失败原因</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>发送失败的原因</desc>
</prop>
</props>
</struct>
<struct>
<name>SubwayItem</name>
<desc>主站商品对象</desc>
<props>
<prop>
<name>extra_attributes</name>
<type>ExtraAttributes</type>
<level>Object</level>
<desc>扩展属性对象</desc>
</prop>
<prop>
<name>num_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品信息在外部系统(淘宝主站)的数字id</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品信息在外部系统（淘宝主站）的价格</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品信息在外部系统（淘宝主站）的标题</desc>
</prop>
</props>
</struct>
<struct>
<name>SubwayItemPartition</name>
<desc>直通车商品分页对象</desc>
<props>
<prop>
<name>item_list</name>
<type>SubwayItem</type>
<level>Object Array</level>
<desc>商品列表</desc>
</prop>
<prop>
<name>order_by</name>
<type>Boolean</type>
<level>Basic</level>
<desc>排序， 
True:升级False:降序</desc>
</prop>
<prop>
<name>order_field</name>
<type>String</type>
<level>Basic</level>
<desc>排序字段</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>PartnerDetail</name>
<desc>物流公司详细信息</desc>
<props>
<prop>
<name>account_no</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司支付宝账号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>company_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司id</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司全名</desc>
</prop>
<prop>
<name>reg_mail_no</name>
<type>String</type>
<level>Basic</level>
<desc>运单号验证正则表达式</desc>
</prop>
<prop>
<name>wangwang_id</name>
<type>String</type>
<level>Basic</level>
<desc>旺旺id</desc>
</prop>
</props>
</struct>
<struct>
<name>Account</name>
<desc>费用科目</desc>
<props>
<prop>
<name>account_code</name>
<type>String</type>
<level>Basic</level>
<desc>费用科目编码</desc>
</prop>
<prop>
<name>account_id</name>
<type>Number</type>
<level>Basic</level>
<desc>费用科目编号</desc>
</prop>
<prop>
<name>account_name</name>
<type>String</type>
<level>Basic</level>
<desc>费用科目名称</desc>
</prop>
<prop>
<name>account_type</name>
<type>Number</type>
<level>Basic</level>
<desc>费用科目类型:1-虚拟账户 2-交易 3-交易佣金 4-服务费 5-天猫积分 6-其他</desc>
</prop>
</props>
</struct>
<struct>
<name>Discount</name>
<desc>折扣信息</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>details</name>
<type>DiscountDetail</type>
<level>Object Array</level>
<desc>折扣详情</desc>
</prop>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>折扣名称</desc>
</prop>
</props>
</struct>
<struct>
<name>DiscountDetail</name>
<desc>折扣详情信息</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>detail_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣详情ID</desc>
</prop>
<prop>
<name>discount_type</name>
<type>String</type>
<level>Basic</level>
<desc>优惠方式:PERCENT（按折扣优惠）、PRICE（按减价优惠）</desc>
</prop>
<prop>
<name>discount_value</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠比率或者优惠价格 10%或10</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>target_id</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级的id或者分销商id</desc>
</prop>
<prop>
<name>target_name</name>
<type>String</type>
<level>Basic</level>
<desc>等级名称或者分销商名称</desc>
</prop>
<prop>
<name>target_type</name>
<type>String</type>
<level>Basic</level>
<desc>折扣类型:GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠）</desc>
</prop>
</props>
</struct>
<struct>
<name>SubAccountInfo</name>
<desc>子账号基本信息</desc>
<props>
<prop>
<name>sub_dispatch_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否参与分流 true:参与分流 false:未参与分流</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
<prop>
<name>sub_nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>sub_owed_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否已欠费 true:已欠费 false:未欠费</desc>
</prop>
<prop>
<name>sub_status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态：1正常，2卖家停用，3处罚冻结</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主账号Id</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号用户名</desc>
</prop>
</props>
</struct>
<struct>
<name>Evaluation</name>
<desc>客服评价</desc>
<props>
<prop>
<name>evaluation_name</name>
<type>String</type>
<level>Basic</level>
<desc>客服评价内容</desc>
</prop>
<prop>
<name>evaluation_num</name>
<type>String</type>
<level>Basic</level>
<desc>评价数量</desc>
</prop>
</props>
</struct>
<struct>
<name>OnlineTimeById</name>
<desc>在线时长</desc>
<props>
<prop>
<name>online_times</name>
<type>Number</type>
<level>Basic</level>
<desc>客服在线时间长度（秒）</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticServiceTag</name>
<desc>物流服务标签</desc>
<props>
<prop>
<name>service_tag</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务下的标签属性,多个标签之间有";"分隔</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>服务类型=编码 
平邮=POST 
快递=FAST 
EMS=EMS 
消费者选快递时为FAST</desc>
</prop>
</props>
</struct>
<struct>
<name>WaitingTimeById</name>
<desc>平均等待时长</desc>
<props>
<prop>
<name>avg_waiting_times</name>
<type>Number</type>
<level>Basic</level>
<desc>平均等待时间长度（秒）</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>ReplyStatById</name>
<desc>客服回复统计</desc>
<props>
<prop>
<name>reply_num</name>
<type>Number</type>
<level>Basic</level>
<desc>客服回复数</desc>
</prop>
<prop>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服ID</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupPage</name>
<desc>一页ADGroup列表</desc>
<props>
<prop>
<name>adgroup_list</name>
<type>ADGroup</type>
<level>Object Array</level>
<desc>商品对象列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>Department</name>
<desc>部门信息</desc>
<props>
<prop>
<name>department_id</name>
<type>Number</type>
<level>Basic</level>
<desc>部门ID</desc>
</prop>
<prop>
<name>department_name</name>
<type>String</type>
<level>Basic</level>
<desc>部门名称</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>当前部门的父部门ID</desc>
</prop>
</props>
</struct>
<struct>
<name>RecommendWordPage</name>
<desc>一页推荐词列表</desc>
<props>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始。 
如果输入的值大于可取得的最大页码值时，将返回 
最大的页码值并且recommend_word_list值将 
为空</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>recommend_word_list</name>
<type>RecommendWord</type>
<level>Object Array</level>
<desc>推荐词分页对象列表</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数</desc>
</prop>
</props>
</struct>
<struct>
<name>Duty</name>
<desc>子账号职务信息</desc>
<props>
<prop>
<name>duty_id</name>
<type>Number</type>
<level>Basic</level>
<desc>职务ID</desc>
</prop>
<prop>
<name>duty_level</name>
<type>Number</type>
<level>Basic</level>
<desc>职务级别</desc>
</prop>
<prop>
<name>duty_name</name>
<type>String</type>
<level>Basic</level>
<desc>职务名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Chatpeer</name>
<desc>聊天对象ID列表</desc>
<props>
<prop>
<name>date</name>
<type>String</type>
<level>Basic</level>
<desc>聊天日期</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>聊天对象用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserFullInfo</name>
<desc>子账号详细信息，其中包括账号基本信息、员工信息和部门职务信息</desc>
<props>
<prop>
<name>department_id</name>
<type>Number</type>
<level>Basic</level>
<desc>部门Id</desc>
</prop>
<prop>
<name>department_name</name>
<type>String</type>
<level>Basic</level>
<desc>部门名称</desc>
</prop>
<prop>
<name>duty_id</name>
<type>Number</type>
<level>Basic</level>
<desc>职务Id</desc>
</prop>
<prop>
<name>duty_level</name>
<type>Number</type>
<level>Basic</level>
<desc>职务等级</desc>
</prop>
<prop>
<name>duty_name</name>
<type>String</type>
<level>Basic</level>
<desc>职务名称</desc>
</prop>
<prop>
<name>employee_id</name>
<type>Number</type>
<level>Basic</level>
<desc>员工ID</desc>
</prop>
<prop>
<name>employee_name</name>
<type>String</type>
<level>Basic</level>
<desc>员工姓名</desc>
</prop>
<prop>
<name>employee_nickname</name>
<type>String</type>
<level>Basic</level>
<desc>员工花名</desc>
</prop>
<prop>
<name>employee_num</name>
<type>String</type>
<level>Basic</level>
<desc>入职员工工号</desc>
</prop>
<prop>
<name>entry_date</name>
<type>Date</type>
<level>Basic</level>
<desc>员工入职时间</desc>
</prop>
<prop>
<name>leader_id</name>
<type>Number</type>
<level>Basic</level>
<desc>直接上级的员工ID</desc>
</prop>
<prop>
<name>office_phone</name>
<type>String</type>
<level>Basic</level>
<desc>办公电话</desc>
</prop>
<prop>
<name>parent_department</name>
<type>Number</type>
<level>Basic</level>
<desc>父部门Id</desc>
</prop>
<prop>
<name>sex</name>
<type>Number</type>
<level>Basic</level>
<desc>员工性别  1:男;  2:女</desc>
</prop>
<prop>
<name>sub_dispatch_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否参与分流 true:参与分流 false:未参与分流</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
<prop>
<name>sub_nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>sub_owed_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否已欠费 true:已欠费 false:未欠费</desc>
</prop>
<prop>
<name>sub_status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态：1正常，2卖家停用，3处罚冻结</desc>
</prop>
<prop>
<name>subuser_email</name>
<type>String</type>
<level>Basic</level>
<desc>子账号企业邮箱</desc>
</prop>
<prop>
<name>user_email</name>
<type>String</type>
<level>Basic</level>
<desc>主账号企业邮箱</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主账号Id</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号用户名</desc>
</prop>
<prop>
<name>work_location</name>
<type>String</type>
<level>Basic</level>
<desc>工作地点</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignPlatform</name>
<desc>推广计划的投放平台</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>nonsearch_channels</name>
<type>Number</type>
<level>Basic Array</level>
<desc>非搜索投放频道代码数组，频道代码必须是直通车非搜索类频道列表中的值。？</desc>
</prop>
<prop>
<name>outside_discount</name>
<type>Number</type>
<level>Basic</level>
<desc>溢价的百分比，必须是大于等于 1小于等于200的整数</desc>
</prop>
<prop>
<name>search_channels</name>
<type>Number</type>
<level>Basic Array</level>
<desc>搜索投放频道代码数组，频道代码必须是直通车搜索类频道列表中的值。</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsTag</name>
<desc>物流的服务标签</desc>
<props>
<prop>
<name>logistic_service_tag_list</name>
<type>LogisticServiceTag</type>
<level>Object Array</level>
<desc>服务标签</desc>
</prop>
<prop>
<name>order_id</name>
<type>String</type>
<level>Basic</level>
<desc>主订单或子订单的订单号</desc>
</prop>
</props>
</struct>
<struct>
<name>Category</name>
<desc>类目列表，多级结构</desc>
<props>
<prop>
<name>cateid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>catename</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
</props>
</struct>
<struct>
<name>RootCategory</name>
<desc>外卖类目列表</desc>
<props>
<prop>
<name>category</name>
<type>Category</type>
<level>Object</level>
<desc>一级类目对象</desc>
</prop>
<prop>
<name>childslist</name>
<type>Category</type>
<level>Object Array</level>
<desc>categroy的list</desc>
</prop>
</props>
</struct>
<struct>
<name>CategoryResult</name>
<desc>内含外卖后台类目的list</desc>
<props>
<prop>
<name>categorylist</name>
<type>RootCategory</type>
<level>Object Array</level>
<desc>类目列表集合</desc>
</prop>
</props>
</struct>
<struct>
<name>CreateResult</name>
<desc>resultdata返回结果usefulmsg提示信息code返回错误码</desc>
<props>
<prop>
<name>result_data</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝id</desc>
</prop>
<prop>
<name>useful_msg</name>
<type>String</type>
<level>Basic</level>
<desc>业务提示信息</desc>
</prop>
</props>
</struct>
<struct>
<name>BatchOperateResult</name>
<desc>商品批量操作返回结果</desc>
<props>
<prop>
<name>error_code</name>
<type>String</type>
<level>Basic</level>
<desc>商品操作错误代码</desc>
</prop>
<prop>
<name>error_msg</name>
<type>String</type>
<level>Basic</level>
<desc>操作提示</desc>
</prop>
<prop>
<name>failed_item_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>批量操作失败的宝贝列表</desc>
</prop>
<prop>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功，只要有一家宝贝发布成功则返回true</desc>
</prop>
<prop>
<name>success_item_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>操作成功的宝贝id列表</desc>
</prop>
</props>
</struct>
<struct>
<name>AuctionPVPairDO</name>
<desc>sku中所包含的属性对</desc>
<props>
<prop>
<name>property_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目销售属性id</desc>
</prop>
<prop>
<name>property_text</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性名称</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>sku属性对状态值</desc>
</prop>
<prop>
<name>value_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目属性值id</desc>
</prop>
<prop>
<name>value_text</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性值名称</desc>
</prop>
</props>
</struct>
<struct>
<name>AuctionSkuDO</name>
<desc>商品sku对象</desc>
<props>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>sku描述信息</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品宝贝id</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>sku对应外部编码</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>sku价格，以分为单位</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>sku的属性及属性值id</desc>
</prop>
<prop>
<name>pv_list</name>
<type>AuctionPVPairDO</type>
<level>Object Array</level>
<desc>sku包含的属性对列表</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>sku的库存</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>sku_id</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态  1：正常 -1：删除</desc>
</prop>
</props>
</struct>
<struct>
<name>TopAuction</name>
<desc>外卖商品对象</desc>
<props>
<prop>
<name>auction_desc</name>
<type>String</type>
<level>Basic</level>
<desc>外卖商品描述</desc>
</prop>
<prop>
<name>auction_skudos</name>
<type>AuctionSkuDO</type>
<level>Object Array</level>
<desc>商品sku列表</desc>
</prop>
<prop>
<name>auction_status</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝状态(0,1出售状态,-2在仓库中)</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖宝贝所属后台类目</desc>
</prop>
<prop>
<name>create_time</name>
<type>String</type>
<level>Basic</level>
<desc>商品发布时间(毫秒)</desc>
</prop>
<prop>
<name>goods_no</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝外部编码</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖商品id</desc>
</prop>
<prop>
<name>limit_buy</name>
<type>Number</type>
<level>Basic</level>
<desc>单个宝贝限购数量</desc>
</prop>
<prop>
<name>modify_time</name>
<type>String</type>
<level>Basic</level>
<desc>最后修改时间(毫秒)</desc>
</prop>
<prop>
<name>old_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品最初发布的数量</desc>
</prop>
<prop>
<name>ori_price</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝原价</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝完整图片路径</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝价格，最多两位小数</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝库存</desc>
</prop>
<prop>
<name>recommend</name>
<type>Number</type>
<level>Basic</level>
<desc>1推荐，0不推荐</desc>
</prop>
<prop>
<name>rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝规则ID</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>外卖商品标题</desc>
</prop>
<prop>
<name>vice_image</name>
<type>String</type>
<level>Basic</level>
<desc>商品多图信息，多个图片url以英文逗号分隔</desc>
</prop>
</props>
</struct>
<struct>
<name>TopShop</name>
<desc>店铺基础信息</desc>
<props>
<prop>
<name>shopid</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖店铺id</desc>
</prop>
<prop>
<name>shopname</name>
<type>String</type>
<level>Basic</level>
<desc>外卖店铺名称</desc>
</prop>
</props>
</struct>
<struct>
<name>TopShopGroupByCity</name>
<desc>当前用户城市为单位的店铺列表</desc>
<props>
<prop>
<name>cityid</name>
<type>Number</type>
<level>Basic</level>
<desc>城市id</desc>
</prop>
<prop>
<name>cityname</name>
<type>String</type>
<level>Basic</level>
<desc>城市名称</desc>
</prop>
<prop>
<name>shoplist</name>
<type>TopShop</type>
<level>Object Array</level>
<desc>店铺list</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopCityResult</name>
<desc>以城市维度分的店铺列表</desc>
<props>
<prop>
<name>cityshoplist</name>
<type>TopShopGroupByCity</type>
<level>Object Array</level>
<desc>以城市维度分的店铺列表</desc>
</prop>
</props>
</struct>
<struct>
<name>AddressReachableResult</name>
<desc>判定服务是否可达的返回结果</desc>
<props>
<prop>
<name>error_code</name>
<type>String</type>
<level>Basic</level>
<desc>错误码</desc>
</prop>
<prop>
<name>partner_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司编码ID</desc>
</prop>
<prop>
<name>reachable</name>
<type>Number</type>
<level>Basic</level>
<desc>服务是否可达， 
    0 - 不可达 
    1 - 可达 
    2 - 不确定 
    3 - 未配置</desc>
</prop>
<prop>
<name>service_type</name>
<type>Number</type>
<level>Basic</level>
<desc>服务对应的数字编码，如揽派范围对应88</desc>
</prop>
</props>
</struct>
<struct>
<name>EbookMediaChapter</name>
<desc>电子书章节信息</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>章节创建时间</desc>
</prop>
<prop>
<name>tbid</name>
<type>Number</type>
<level>Basic</level>
<desc>章节淘宝ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Ticket</name>
<desc>产品规格审核信息</desc>
<props>
<prop>
<name>audit_seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>如果产品规格，需要商家审核，为商家审核用户ID</desc>
</prop>
<prop>
<name>create_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>创建人ID</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>产品规格申请时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>产品规格审核单最后修改时间</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>关于审核原因，更详细的说明</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>审核原因</desc>
</prop>
<prop>
<name>spec_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品规格ID</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>1, "商家确认" 
2, "商家拒绝" 
3, "小二确认" 
4, "小二拒绝" 
5, "待商家处理" 
6, "商家审核超时" 
7, "待小二审核"</desc>
</prop>
</props>
</struct>
<struct>
<name>EbookMediaVolume</name>
<desc>电子书卷信息</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>卷的添加时间</desc>
</prop>
<prop>
<name>volume_id</name>
<type>Number</type>
<level>Basic</level>
<desc>电子书卷ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Place</name>
<desc>定向推广位置</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>last_update_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>位置名称</desc>
</prop>
<prop>
<name>place_id</name>
<type>Number</type>
<level>Basic</level>
<desc>位置标识</desc>
</prop>
</props>
</struct>
<struct>
<name>TakeoutOption</name>
<desc>外卖店铺信息</desc>
<props>
<prop>
<name>area_range</name>
<type>String</type>
<level>Basic</level>
<desc>配送范围地图坐标</desc>
</prop>
<prop>
<name>cash_on_delivery</name>
<type>Number</type>
<level>Basic</level>
<desc>支持货到付款:1，不支持货到付款：0</desc>
</prop>
<prop>
<name>cateid</name>
<type>Number</type>
<level>Basic</level>
<desc>主营类目id</desc>
</prop>
<prop>
<name>delivery_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>配送费</desc>
</prop>
<prop>
<name>delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>配送时间</desc>
</prop>
<prop>
<name>early_minutes</name>
<type>Number</type>
<level>Basic</level>
<desc>配送预留时间</desc>
</prop>
<prop>
<name>full_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>满多少免运费</desc>
</prop>
<prop>
<name>minimum_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>起送金额</desc>
</prop>
<prop>
<name>mobile</name>
<type>String</type>
<level>Basic</level>
<desc>外卖店手机号码</desc>
</prop>
<prop>
<name>shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>外卖店铺名称</desc>
</prop>
<prop>
<name>shopid</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖店铺id</desc>
</prop>
<prop>
<name>support_days</name>
<type>Number</type>
<level>Basic</level>
<desc>预定，当天：1，三天内：3，七天内：7</desc>
</prop>
</props>
</struct>
<struct>
<name>TakeoutShop</name>
<desc>外卖店信息</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>店铺地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市</desc>
</prop>
<prop>
<name>merchant_type</name>
<type>Number</type>
<level>Basic</level>
<desc>商户类型 （1：品牌连锁  2:代理商  3：单店经营）</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名称</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>电话号码</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺标志图片</desc>
</prop>
<prop>
<name>posx</name>
<type>Number</type>
<level>Basic</level>
<desc>地图坐标x，注意此坐标是乘以100000后的值</desc>
</prop>
<prop>
<name>posy</name>
<type>Number</type>
<level>Basic</level>
<desc>地图坐标y，注意此坐标是乘以100000后的值</desc>
</prop>
<prop>
<name>shopid</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖店铺id</desc>
</prop>
<prop>
<name>shopoutid</name>
<type>String</type>
<level>Basic</level>
<desc>店铺与ISV的关联关系</desc>
</prop>
</props>
</struct>
<struct>
<name>TakeoutShopSummaryInfo</name>
<desc>外卖店信息</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>店铺地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市</desc>
</prop>
<prop>
<name>digital_wait_confirm</name>
<type>Number</type>
<level>Basic</level>
<desc>等待确认的兑换券的订单笔数</desc>
</prop>
<prop>
<name>is_open</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺营业状态，歇业：0，营业：1</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>外卖店铺名称</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>电话号码</desc>
</prop>
<prop>
<name>shopid</name>
<type>Number</type>
<level>Basic</level>
<desc>外卖店铺id</desc>
</prop>
<prop>
<name>shopoutid</name>
<type>String</type>
<level>Basic</level>
<desc>店铺与ISV的关联ID</desc>
</prop>
<prop>
<name>wait_confirm</name>
<type>Number</type>
<level>Basic</level>
<desc>等待确认配送的订单笔数</desc>
</prop>
<prop>
<name>wait_refund</name>
<type>Number</type>
<level>Basic</level>
<desc>等待退款的订单笔数</desc>
</prop>
</props>
</struct>
<struct>
<name>TakeoutShopPage</name>
<desc>外卖分页</desc>
<props>
<prop>
<name>next_page</name>
<type>Number</type>
<level>Basic</level>
<desc>下一页页码</desc>
</prop>
<prop>
<name>page</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页码</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页条数</desc>
</prop>
<prop>
<name>prev_page</name>
<type>Number</type>
<level>Basic</level>
<desc>上一页页码</desc>
</prop>
<prop>
<name>takeout_summary_infos</name>
<type>TakeoutShopSummaryInfo</type>
<level>Object Array</level>
<desc>店铺信息列表</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</prop>
<prop>
<name>total_page</name>
<type>Number</type>
<level>Basic</level>
<desc>总页数</desc>
</prop>
</props>
</struct>
<struct>
<name>SimpleFeed</name>
<desc>查询feed列表里，返回简单的feed数据：标题和id</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>feedId</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>feed的标题</desc>
</prop>
</props>
</struct>
<struct>
<name>FeedDetail</name>
<desc>feed的详细内容</desc>
<props>
<prop>
<name>comment_count</name>
<type>Number</type>
<level>Basic</level>
<desc>评论的数量</desc>
</prop>
<prop>
<name>component_id</name>
<type>Number</type>
<level>Basic</level>
<desc>如果是插件feed，指插件id</desc>
</prop>
<prop>
<name>component_name</name>
<type>String</type>
<level>Basic</level>
<desc>如果是插件feed，指插件名</desc>
</prop>
<prop>
<name>cover_tile</name>
<type>FeedTile</type>
<level>Object</level>
<desc>feed的封面区域 feedTile里的type=cover</desc>
</prop>
<prop>
<name>deleted</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否已删除</desc>
</prop>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>如果是插件Feed,对应的详情地址</desc>
</prop>
<prop>
<name>feedfavour_count</name>
<type>Number</type>
<level>Basic</level>
<desc>赞的数量</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>feed的Id</desc>
</prop>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>如果是插件Feed,对应插件的信息</desc>
</prop>
<prop>
<name>tiles</name>
<type>FeedTile</type>
<level>Object Array</level>
<desc>feed的内容区域，type=text 或者type=pic ,type=picItem的目前不提供</desc>
</prop>
<prop>
<name>time</name>
<type>Number</type>
<level>Basic</level>
<desc>feed的发布时间</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>feed的标题</desc>
</prop>
</props>
</struct>
<struct>
<name>AnalyzeDO</name>
<desc>透视结果</desc>
<props>
<prop>
<name>data_list</name>
<type>AnalyzeData</type>
<level>Object Array</level>
<desc>返回透视结果的二维数组</desc>
</prop>
<prop>
<name>field_names_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>列的名字</desc>
</prop>
<prop>
<name>field_types_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>返回类型</desc>
</prop>
</props>
</struct>
<struct>
<name>AnalyzeData</name>
<desc>分析数据</desc>
<props>
<prop>
<name>result_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>返回结果</desc>
</prop>
</props>
</struct>
<struct>
<name>CreativePage</name>
<desc>广告创意分页对象</desc>
<props>
<prop>
<name>creative_list</name>
<type>Creative</type>
<level>Object Array</level>
<desc>广告创意列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>FeedTile</name>
<desc>feed的内容区域，可以是封面，也可以是内容</desc>
<props>
<prop>
<name>path</name>
<type>String</type>
<level>Basic</level>
<desc>type=pic或cover时，返回的图片地址</desc>
</prop>
<prop>
<name>pic_height</name>
<type>Number</type>
<level>Basic</level>
<desc>type=cover或type=pic时有效，指图片高度</desc>
</prop>
<prop>
<name>pic_width</name>
<type>Number</type>
<level>Basic</level>
<desc>type=cover或type=pic时有效，指图片宽度</desc>
</prop>
<prop>
<name>template</name>
<type>Number</type>
<level>Basic</level>
<desc>type=cover时有效，0时，feed的title不压封面 1时feed的title压封面</desc>
</prop>
<prop>
<name>text</name>
<type>String</type>
<level>Basic</level>
<desc>type=text时，此内容有值</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>feed tile的类型，可以为：cover, pic, text, picItem</desc>
</prop>
</props>
</struct>
<struct>
<name>Demographic</name>
<desc>投放人群</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>投放人群所属的组ID</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>投放人群所属组的组名</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>投放人群ID</desc>
</prop>
<prop>
<name>last_update_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>投放人群名称</desc>
</prop>
</props>
</struct>
<struct>
<name>FeedComment</name>
<desc>feed评论</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>评论内容</desc>
</prop>
<prop>
<name>ext_symbol</name>
<type>String</type>
<level>Basic</level>
<desc>评论的扩展数据，json格式，目前支持图片与宝贝,type=1时格式：["http://gw3.alicdn.com/tfscom/tuitui/i2/11659032089367711/T1mhfOFiJiXXb1upjX.jpg"]，type=2时格式见示例。</desc>
</prop>
<prop>
<name>feed_id</name>
<type>Number</type>
<level>Basic</level>
<desc>评论所属的feed的Id</desc>
</prop>
<prop>
<name>floor</name>
<type>Number</type>
<level>Basic</level>
<desc>评论楼层</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>评论ID</desc>
</prop>
<prop>
<name>time</name>
<type>Number</type>
<level>Basic</level>
<desc>评论发布的时间</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>评论类型,0纯文本，1含有图片，2含有宝贝</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupPlace</name>
<desc>推广组与定向推广位置关系</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组ID</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_default_price</name>
<type>Number</type>
<level>Basic</level>
<desc>是否使用默认出价，0-不用；1-使用；</desc>
</prop>
<prop>
<name>max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>出价</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>place_id</name>
<type>Number</type>
<level>Basic</level>
<desc>位置标识</desc>
</prop>
<prop>
<name>place_name</name>
<type>String</type>
<level>Basic</level>
<desc>位置名称</desc>
</prop>
</props>
</struct>
<struct>
<name>CloudsTag</name>
<desc>微淘粉丝分组云标签</desc>
<props>
<prop>
<name>data_type</name>
<type>String</type>
<level>Basic</level>
<desc>1:bool,2:short,3:int,4:long,5:float,6:double,7:string</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<desc>标签id</desc>
</prop>
<prop>
<name>input_type</name>
<type>String</type>
<level>Basic</level>
<desc>1：数值；2：radio；3：checkbox；4：精确文本匹配 ; 5 模糊文本匹配</desc>
</prop>
<prop>
<name>name_ch</name>
<type>String</type>
<level>Basic</level>
<desc>标签中文名字</desc>
</prop>
<prop>
<name>validator</name>
<type>String</type>
<level>Basic</level>
<desc>入参校验</desc>
</prop>
<prop>
<name>values</name>
<type>String</type>
<level>Basic</level>
<desc>validator中的valueSet</desc>
</prop>
</props>
</struct>
<struct>
<name>KeywordPage</name>
<desc>关键词分页对象</desc>
<props>
<prop>
<name>keyword_list</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>关键词列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>CloudGroup</name>
<desc>微淘粉丝分组信息</desc>
<props>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>分组描述</desc>
</prop>
<prop>
<name>expression</name>
<type>String</type>
<level>Basic</level>
<desc>分组表达式</desc>
</prop>
<prop>
<name>group_id</name>
<type>String</type>
<level>Basic</level>
<desc>分组id</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>分组名字</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>分组状态</desc>
</prop>
</props>
</struct>
<struct>
<name>DemographicSetting</name>
<desc>投放人群设置</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>demographic_id</name>
<type>Number</type>
<level>Basic</level>
<desc>投放人群ID</desc>
</prop>
<prop>
<name>incremental_price</name>
<type>Number</type>
<level>Basic</level>
<desc>加价</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>TripOrder</name>
<desc>机票订单的详情</desc>
<props>
<prop>
<name>base_info</name>
<type>TripBaseInfo</type>
<level>Object</level>
<desc>订单基础信息</desc>
</prop>
<prop>
<name>corp_info</name>
<type>CorpInfo</type>
<level>Object</level>
<desc>订单行政购票信息</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展字段</desc>
</prop>
<prop>
<name>flight_infos</name>
<type>TripFlightInfo</type>
<level>Object Array</level>
<desc>订单航班信息（包含航班乘机人）</desc>
</prop>
<prop>
<name>itinerary</name>
<type>Itinerary</type>
<level>Object</level>
<desc>订单行程单信息</desc>
</prop>
</props>
</struct>
<struct>
<name>LocalityLife</name>
<desc>本地生活垂直市场数据结构，修改宝贝时在参数empty_fields里设置locality_life可删除所有电子凭证信息</desc>
<props>
<prop>
<name>choose_logis</name>
<type>String</type>
<level>Basic</level>
<desc>表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄</desc>
</prop>
<prop>
<name>eticket</name>
<type>String</type>
<level>Basic</level>
<desc>电子凭证业务属性</desc>
</prop>
<prop>
<name>expirydate</name>
<type>String</type>
<level>Basic</level>
<desc>电子交易凭证有效期，有三种格式： 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16  
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</prop>
<prop>
<name>merchant</name>
<type>String</type>
<level>Basic</level>
<desc>格式为  
码商id:nick</desc>
</prop>
<prop>
<name>network_id</name>
<type>String</type>
<level>Basic</level>
<desc>网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID</desc>
</prop>
<prop>
<name>onsale_auto_refund_ratio</name>
<type>Number</type>
<level>Basic</level>
<desc>电子凭证售中自动退款比例</desc>
</prop>
<prop>
<name>refund_ratio</name>
<type>Number</type>
<level>Basic</level>
<desc>退款比例，百分比%前的数字，1-100的正整数值；在参数empty_fields里设置locality_life.refund_ratio可删除退款比例</desc>
</prop>
<prop>
<name>refundmafee</name>
<type>String</type>
<level>Basic</level>
<desc>退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)</desc>
</prop>
<prop>
<name>verification</name>
<type>String</type>
<level>Basic</level>
<desc>核销打款:1代表核销打款,0代表非核销打款; 
在参数empty_fields里设置locality_life.verification可删除核销打款</desc>
</prop>
</props>
</struct>
<struct>
<name>DescModuleInfo</name>
<desc>该数据结构保存宝贝描述对应的规范化信息</desc>
<props>
<prop>
<name>anchor_module_ids</name>
<type>String</type>
<level>Basic</level>
<desc>代表宝贝描述中规范化打标使用到的模块id列表，以逗号分隔。</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>类型代表规范化打标的类型：人工或自动化</desc>
</prop>
</props>
</struct>
<struct>
<name>TripBaseInfo</name>
<desc>订单基础信息</desc>
<props>
<prop>
<name>alipay_trade_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>commission</name>
<type>String</type>
<level>Basic</level>
<desc>佣金，单位：分</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展信息</desc>
</prop>
<prop>
<name>force_insure</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否强制保险订单，有一张票为强制保险即为true</desc>
</prop>
<prop>
<name>insure_promotion</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保险分润订单，有一个乘机人支持分润即为 True</desc>
</prop>
<prop>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单表最近一次修改时间</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝机票订单id</desc>
</prop>
<prop>
<name>pay_latest_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单最晚支付时间</desc>
</prop>
<prop>
<name>pay_status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单支付状态==&gt; 0:未付款;1:已付款，冻结买家定金;2:付款给卖家;3:解冻定金给买家;4:已扣佣;5:交易关闭;6:确认可支付;7:确认不可支付</desc>
</prop>
<prop>
<name>relation_email</name>
<type>String</type>
<level>Basic</level>
<desc>联系人邮箱</desc>
</prop>
<prop>
<name>relation_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>联系人手机号</desc>
</prop>
<prop>
<name>relation_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>relation_phone_bak</name>
<type>String</type>
<level>Basic</level>
<desc>联系人备用电话</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单状态定义==&gt; 0:未付款;(注：支持保险分润时，订单已付款，保险未付款也为0)1:处理中;2:确定出票;3:预定成功;4:预定失败;5:处理中超时失效;6:支付超时失效;7:买家取消</desc>
</prop>
<prop>
<name>total_price</name>
<type>Number</type>
<level>Basic</level>
<desc>总金额，所有乘机人加机建燃油，单位：分</desc>
</prop>
<prop>
<name>trip_type</name>
<type>Number</type>
<level>Basic</level>
<desc>航程类型：0，单程；1，往返；</desc>
</prop>
</props>
</struct>
<struct>
<name>TripFlightPassenger</name>
<desc>乘机人信息</desc>
<props>
<prop>
<name>birthday</name>
<type>String</type>
<level>Basic</level>
<desc>乘机人生日：yyyy-mm-dd</desc>
</prop>
<prop>
<name>cabin_class</name>
<type>Number</type>
<level>Basic</level>
<desc>舱位等级：0，头等舱(F)；1，商务舱(C)；2，经济舱(Y)</desc>
</prop>
<prop>
<name>cabin_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班舱位代码</desc>
</prop>
<prop>
<name>cert_no</name>
<type>String</type>
<level>Basic</level>
<desc>乘机人证件号码</desc>
</prop>
<prop>
<name>cert_type</name>
<type>Number</type>
<level>Basic</level>
<desc>乘机人证件类型：0，身份证；1，护照；3，军人证；4，回乡证；5，台胞证；6，港澳台胞；10，警官证；11，士兵证件</desc>
</prop>
<prop>
<name>ei</name>
<type>String</type>
<level>Basic</level>
<desc>ei项</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展字段</desc>
</prop>
<prop>
<name>fee</name>
<type>Number</type>
<level>Basic</level>
<desc>航班机建费，单位：分</desc>
</prop>
<prop>
<name>force_insure_price</name>
<type>Number</type>
<level>Basic</level>
<desc>强制保险金额，单位：分</desc>
</prop>
<prop>
<name>insure_promotion_price</name>
<type>Number</type>
<level>Basic</level>
<desc>当前乘机人的保险分润金额，单位：分</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注信息，政策中的备注信息</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>乘机人姓名</desc>
</prop>
<prop>
<name>passenger_type</name>
<type>Number</type>
<level>Basic</level>
<desc>乘机人类型：0，成人；1，儿童；</desc>
</prop>
<prop>
<name>pnr</name>
<type>String</type>
<level>Basic</level>
<desc>PNR信息</desc>
</prop>
<prop>
<name>policy_id</name>
<type>Number</type>
<level>Basic</level>
<desc>政策id，淘宝系统政策唯一键</desc>
</prop>
<prop>
<name>policy_type</name>
<type>Number</type>
<level>Basic</level>
<desc>机票政策类型：0，默认；1，自定义</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>销售价格，单位：分</desc>
</prop>
<prop>
<name>tax</name>
<type>Number</type>
<level>Basic</level>
<desc>航班燃油税，单位：分</desc>
</prop>
<prop>
<name>ticket_no</name>
<type>String</type>
<level>Basic</level>
<desc>票号</desc>
</prop>
<prop>
<name>trip_card_no</name>
<type>String</type>
<level>Basic</level>
<desc>常旅客卡号</desc>
</prop>
<prop>
<name>tuigaiqian</name>
<type>String</type>
<level>Basic</level>
<desc>退改签</desc>
</prop>
</props>
</struct>
<struct>
<name>TripFlightInfo</name>
<desc>订单航班信息（包含航班乘机人）</desc>
<props>
<prop>
<name>airline_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班航空公司二字码</desc>
</prop>
<prop>
<name>arr_airport_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班到达机场三字码</desc>
</prop>
<prop>
<name>arr_city_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班到达城市三字码</desc>
</prop>
<prop>
<name>arr_time</name>
<type>String</type>
<level>Basic</level>
<desc>航班到达时间，格式yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>carrier</name>
<type>String</type>
<level>Basic</level>
<desc>航班实际承运航班号</desc>
</prop>
<prop>
<name>dep_airport_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班出发机场三字码</desc>
</prop>
<prop>
<name>dep_city_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班出发城市三字码</desc>
</prop>
<prop>
<name>dep_time</name>
<type>String</type>
<level>Basic</level>
<desc>航班起飞时间，格式yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展信息</desc>
</prop>
<prop>
<name>flight_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝机票平台航班id</desc>
</prop>
<prop>
<name>flight_no</name>
<type>String</type>
<level>Basic</level>
<desc>航班号</desc>
</prop>
<prop>
<name>flight_type</name>
<type>String</type>
<level>Basic</level>
<desc>航班机型</desc>
</prop>
<prop>
<name>passengers</name>
<type>TripFlightPassenger</type>
<level>Object Array</level>
<desc>乘机人信息列表</desc>
</prop>
<prop>
<name>segment_number</name>
<type>Number</type>
<level>Basic</level>
<desc>去程或回程第几段航班，0，第1段；1，第2段航班</desc>
</prop>
<prop>
<name>segment_type</name>
<type>Number</type>
<level>Basic</level>
<desc>航段类型：0，去程；1，回程</desc>
</prop>
<prop>
<name>special_rule</name>
<type>String</type>
<level>Basic</level>
<desc>特殊说明</desc>
</prop>
<prop>
<name>ticket_price</name>
<type>Number</type>
<level>Basic</level>
<desc>当前航段票面价格，单位：分</desc>
</prop>
</props>
</struct>
<struct>
<name>LaiwangPPMenu</name>
<desc>来往公众账号菜单</desc>
<props>
<prop>
<name>button</name>
<type>LaiwangPPButton</type>
<level>Object Array</level>
<desc>来往公众账号菜单按钮</desc>
</prop>
</props>
</struct>
<struct>
<name>LaiwangPPButton</name>
<desc>来往公众账号菜单按钮</desc>
<props>
<prop>
<name>key</name>
<type>String</type>
<level>Basic</level>
<desc>按钮的key.</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>公众账号的菜单名称</desc>
</prop>
<prop>
<name>sub_button</name>
<type>LaiwangPPSubButton</type>
<level>Object Array</level>
<desc>二级按钮列表</desc>
</prop>
<prop>
<name>target</name>
<type>String</type>
<level>Basic</level>
<desc>按钮点击后跳转的目的地址.</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>按钮的类型</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>按钮跳转的url</desc>
</prop>
</props>
</struct>
<struct>
<name>UserLoginlog</name>
<desc>登陆日志</desc>
<props>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>用户登录日志的条数</desc>
</prop>
<prop>
<name>loginlogs</name>
<type>LoginLog</type>
<level>Object Array</level>
<desc>用户登录日志信息</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>LaiwangPPSubButton</name>
<desc>来往公众账号菜单子按钮</desc>
<props>
<prop>
<name>key</name>
<type>String</type>
<level>Basic</level>
<desc>按钮的key.</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>公众账号的菜单名称</desc>
</prop>
<prop>
<name>target</name>
<type>String</type>
<level>Basic</level>
<desc>按钮点击后跳转的目的地址.</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>按钮的类型</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>按钮跳转的url</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductSpec</name>
<desc>ProductSpec(产品规格)结构。</desc>
<props>
<prop>
<name>barcode</name>
<type>String</type>
<level>Basic</level>
<desc>产品规格条形码，支持EAN-13格式。</desc>
</prop>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品品牌id</desc>
</prop>
<prop>
<name>certified_pics</name>
<type>CertPicInfo</type>
<level>Object Array</level>
<desc>认证图片列表</desc>
</prop>
<prop>
<name>certified_txts</name>
<type>CertTxtInfo</type>
<level>Object Array</level>
<desc>认证文本列表</desc>
</prop>
<prop>
<name>change_prop</name>
<type>String</type>
<level>Basic</level>
<desc>基础色数据</desc>
</prop>
<prop>
<name>custome_props_name</name>
<type>String</type>
<level>Basic</level>
<desc>用户输入的属性值存放位置，例如可输入的销售属性，当用户获取pid vid后，应该先从spec_props_alias中获取，然后通过类目属性获取，获取不到，可以通过这个字段获取。</desc>
</prop>
<prop>
<name>label_price</name>
<type>Number</type>
<level>Basic</level>
<desc>产品规格吊牌价，以分为单位的整数，非负,无默认值，上限999999999</desc>
</prop>
<prop>
<name>market_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上市时间</desc>
</prop>
<prop>
<name>number</name>
<type>Number</type>
<level>Basic</level>
<desc>规格的数量，仅当通过组合产品获取时有值</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>产品的主图片地址。绝对地址，格式：http://host/image_path。</desc>
</prop>
<prop>
<name>product_code</name>
<type>String</type>
<level>Basic</level>
<desc>产品货号</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID。</desc>
</prop>
<prop>
<name>spec_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品规格ID。</desc>
</prop>
<prop>
<name>spec_props</name>
<type>String</type>
<level>Basic</level>
<desc>产品规格的销售属性组合。格式为：pid:vid;pid:vid。其中：pid是销售属性id，vid是销售属性值id。如果该类目品牌下面没有销售属性，可以不用填写。销售属性通过tmall.brandcat.salespro.get接口获取。</desc>
</prop>
<prop>
<name>spec_props_alias</name>
<type>String</type>
<level>Basic</level>
<desc>销售属性值别名。格式为：pid1:vid1:别名1;pid2:vid2:别名2。其中：pid是销售属性id，vid是销售属性值id。别名长度不可以超过30个字符。目前只有颜色销售属性支持别名。</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>1:表示可以使用的数据，也就是审核通过的。 
3：表示等待小二审核的产品规格，这个数据暂时还不能使用，要等待审核通过后，才能使用。</desc>
</prop>
</props>
</struct>
<struct>
<name>CertPicInfo</name>
<desc>产品资质认证图片信息，包括认证类型以及图片url</desc>
<props>
<prop>
<name>cert_type</name>
<type>Number</type>
<level>Basic</level>
<desc>认证类型的数值id</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>认证图片的url地址</desc>
</prop>
</props>
</struct>
<struct>
<name>IdsModule</name>
<desc>用于保存宝贝描述规范化模块信息</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝描述规范化模块id</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝描述规范化模块名</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>0为自动打标； 
1为人工打标；</desc>
</prop>
</props>
</struct>
<struct>
<name>CatBrandSaleProp</name>
<desc>被管控的品牌和类目的所对应的销售属性</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的品牌的Id</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的类目ID</desc>
</prop>
<prop>
<name>def_market_prop_value</name>
<type>Number</type>
<level>Basic</level>
<desc>如果该属性为营销属性，则获取默认值</desc>
</prop>
<prop>
<name>is_not_spec</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true表示：不是产品的规格属性 
false表示：是产品的规格属性。</desc>
</prop>
<prop>
<name>property_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的销售属性ID</desc>
</prop>
</props>
</struct>
<struct>
<name>BrandCatControlInfo</name>
<desc>管控的类目以及品牌信息</desc>
<props>
<prop>
<name>brand_cat_controls</name>
<type>BrandCatControl</type>
<level>Object Array</level>
<desc>管控的品牌类目信息，一组列表</desc>
</prop>
</props>
</struct>
<struct>
<name>BrandCatControl</name>
<desc>管控的品牌类目信息</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的品牌的ID号码</desc>
</prop>
<prop>
<name>brand_name</name>
<type>String</type>
<level>Basic</level>
<desc>被管控的品牌名称</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的类目的ID号</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>被管控的类目的ID号</desc>
</prop>
<prop>
<name>certified_data</name>
<type>String</type>
<level>Basic</level>
<desc>以;隔开多个认证资料。:隔开资料ID与内容。如？1:产品包装图片;2:完整产品资质</desc>
</prop>
</props>
</struct>
<struct>
<name>AlipayUserDetail</name>
<desc>支付宝会员信息详情</desc>
<props>
<prop>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝用户userId</desc>
</prop>
<prop>
<name>certified</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否通过实名认证</desc>
</prop>
<prop>
<name>logon_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝登录号</desc>
</prop>
<prop>
<name>real_name</name>
<type>String</type>
<level>Basic</level>
<desc>真实姓名</desc>
</prop>
<prop>
<name>sex</name>
<type>String</type>
<level>Basic</level>
<desc>性别。可选值:m(男),f(女)</desc>
</prop>
<prop>
<name>user_status</name>
<type>String</type>
<level>Basic</level>
<desc>用户状态。可选:normal(正常), supervise (监管),delete(注销)</desc>
</prop>
<prop>
<name>user_type</name>
<type>String</type>
<level>Basic</level>
<desc>用户类型。可选：personal（个人），company（公司）</desc>
</prop>
</props>
</struct>
<struct>
<name>SpContentDOForDetail</name>
<desc>建站内容详情DO</desc>
<props>
<prop>
<name>articleabstract</name>
<type>String</type>
<level>Basic</level>
<desc>类型为文章的内容摘要</desc>
</prop>
<prop>
<name>classname</name>
<type>String</type>
<level>Basic</level>
<desc>分类名称</desc>
</prop>
<prop>
<name>commentnum</name>
<type>Number</type>
<level>Basic</level>
<desc>评论数</desc>
</prop>
<prop>
<name>comments</name>
<type>String</type>
<level>Basic</level>
<desc>推荐理</desc>
</prop>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>文章内容</desc>
</prop>
<prop>
<name>detailurl</name>
<type>String</type>
<level>Basic</level>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</prop>
<prop>
<name>gmtcreate</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmtmodified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>内容主键ID</desc>
</prop>
<prop>
<name>items</name>
<type>String</type>
<level>Basic</level>
<desc>内容关联的商品详细信息列表，Json格式的字符串，每个对象包含的信息如下: 
1:auctionId 宝贝ID; 
2:title 宝贝标题 
3:categoryId 宝贝的类目ID 
4:price 宝贝价格 
5:commission 宝贝淘客价格 
6:picUrl 宝贝主图地址 
7:picUrls 宝贝所有的普通商品图片 
8:detailUrl 宝贝的detail地址</desc>
</prop>
<prop>
<name>likenum</name>
<type>Number</type>
<level>Basic</level>
<desc>喜欢数</desc>
</prop>
<prop>
<name>mainpic</name>
<type>String</type>
<level>Basic</level>
<desc>主图</desc>
</prop>
<prop>
<name>picurl</name>
<type>String</type>
<level>Basic</level>
<desc>图片URL,多个图片中间以,分割</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>价格</desc>
</prop>
<prop>
<name>referid</name>
<type>Number</type>
<level>Basic</level>
<desc>内容平台的内容id</desc>
</prop>
<prop>
<name>referitems</name>
<type>String</type>
<level>Basic</level>
<desc>内容关联到的商品。如果有多个商品，用,分割</desc>
</prop>
<prop>
<name>schemaname</name>
<type>String</type>
<level>Basic</level>
<desc>内容类型:  
uz.item:宝贝 
uz.image:图片 
uz.article:自定义 
uz.graphic:图文</desc>
</prop>
<prop>
<name>sharenum</name>
<type>Number</type>
<level>Basic</level>
<desc>分享数</desc>
</prop>
<prop>
<name>sitecategoryid</name>
<type>Number</type>
<level>Basic</level>
<desc>物种ID</desc>
</prop>
<prop>
<name>taesiteid</name>
<type>Number</type>
<level>Basic</level>
<desc>站点ID</desc>
</prop>
<prop>
<name>tags</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称。多个标签以,分割</desc>
</prop>
<prop>
<name>targetid</name>
<type>Number</type>
<level>Basic</level>
<desc>附着目标的目标id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>内容标题</desc>
</prop>
<prop>
<name>topenable</name>
<type>Number</type>
<level>Basic</level>
<desc>是否置顶</desc>
</prop>
<prop>
<name>userid</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
<prop>
<name>viewnum</name>
<type>Number</type>
<level>Basic</level>
<desc>浏览数</desc>
</prop>
</props>
</struct>
<struct>
<name>SpContentDOForList</name>
<desc>内容DO</desc>
<props>
<prop>
<name>articleabstract</name>
<type>String</type>
<level>Basic</level>
<desc>类型为文章的内容摘要</desc>
</prop>
<prop>
<name>classname</name>
<type>String</type>
<level>Basic</level>
<desc>分类名称</desc>
</prop>
<prop>
<name>commentnum</name>
<type>Number</type>
<level>Basic</level>
<desc>评论数</desc>
</prop>
<prop>
<name>comments</name>
<type>String</type>
<level>Basic</level>
<desc>推荐理</desc>
</prop>
<prop>
<name>detailurl</name>
<type>String</type>
<level>Basic</level>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</prop>
<prop>
<name>gmtcreate</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmtmodified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>内容主键ID</desc>
</prop>
<prop>
<name>likenum</name>
<type>Number</type>
<level>Basic</level>
<desc>喜欢数</desc>
</prop>
<prop>
<name>mainpic</name>
<type>String</type>
<level>Basic</level>
<desc>主图</desc>
</prop>
<prop>
<name>picurl</name>
<type>String</type>
<level>Basic</level>
<desc>图片URL,多个图片中间以,分割</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>价格</desc>
</prop>
<prop>
<name>referid</name>
<type>Number</type>
<level>Basic</level>
<desc>内容平台的内容id</desc>
</prop>
<prop>
<name>referitems</name>
<type>String</type>
<level>Basic</level>
<desc>内容关联到的商品。如果有多个商品，用,分割</desc>
</prop>
<prop>
<name>schemaname</name>
<type>String</type>
<level>Basic</level>
<desc>内容类型:  
uz.item:宝贝 
uz.image:图片 
uz.article:自定义 
uz.graphic:图文</desc>
</prop>
<prop>
<name>sharenum</name>
<type>Number</type>
<level>Basic</level>
<desc>分享数</desc>
</prop>
<prop>
<name>sitecategoryid</name>
<type>Number</type>
<level>Basic</level>
<desc>物种ID</desc>
</prop>
<prop>
<name>taesiteid</name>
<type>Number</type>
<level>Basic</level>
<desc>站点ID</desc>
</prop>
<prop>
<name>tags</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称。多个标签以,分割</desc>
</prop>
<prop>
<name>targetid</name>
<type>Number</type>
<level>Basic</level>
<desc>附着目标的目标id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>内容标题</desc>
</prop>
<prop>
<name>topenable</name>
<type>Number</type>
<level>Basic</level>
<desc>是否置顶</desc>
</prop>
<prop>
<name>userid</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
<prop>
<name>viewnum</name>
<type>Number</type>
<level>Basic</level>
<desc>浏览数</desc>
</prop>
</props>
</struct>
<struct>
<name>EbookYunpanToken</name>
<desc>云盘token信息</desc>
<props>
<prop>
<name>access_token</name>
<type>String</type>
<level>Basic</level>
<desc>云盘访问的token信息</desc>
</prop>
<prop>
<name>expires_in</name>
<type>Number</type>
<level>Basic</level>
<desc>access_token的失效时间</desc>
</prop>
<prop>
<name>refresh_token</name>
<type>String</type>
<level>Basic</level>
<desc>刷新云盘access_token信息</desc>
</prop>
</props>
</struct>
<struct>
<name>EbookMediaResource</name>
<desc>电子书资源信息</desc>
<props>
<prop>
<name>file_status</name>
<type>Number</type>
<level>Basic</level>
<desc>文件资源状态（0:审核中 1：审核通过 2：审核不通过）</desc>
</prop>
<prop>
<name>file_suffix</name>
<type>String</type>
<level>Basic</level>
<desc>文件资源后缀名</desc>
</prop>
<prop>
<name>file_type</name>
<type>Number</type>
<level>Basic</level>
<desc>资源文件的类型（1：正文，0：试读）</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>文件审核不通过原因</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeTrace</name>
<desc>交易回流信息</desc>
<props>
<prop>
<name>action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>动作发生的时间</desc>
</prop>
<prop>
<name>app_title</name>
<type>String</type>
<level>Basic</level>
<desc>应用标题</desc>
</prop>
<prop>
<name>order_ids</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的id列表,以逗号分割</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注字段</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家的淘宝nick</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>回流的订单状态</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易tid</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeStat</name>
<desc>订单全链路中的订单状态统计</desc>
<props>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>数量</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态名称</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeMonitor</name>
<desc>经销订单监控记录信息</desc>
<props>
<prop>
<name>area</name>
<type>String</type>
<level>Basic</level>
<desc>地区</desc>
</prop>
<prop>
<name>buy_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的商品购买数量</desc>
</prop>
<prop>
<name>buyer_full_name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人姓名</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家的淘宝账号昵称</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市</desc>
</prop>
<prop>
<name>distributor_nick</name>
<type>String</type>
<level>Basic</level>
<desc>经销商的淘宝账号昵称</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的商品id</desc>
</prop>
<prop>
<name>item_number</name>
<type>String</type>
<level>Basic</level>
<desc>交易订单的商品的商家编码</desc>
</prop>
<prop>
<name>item_price</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的商品价格</desc>
</prop>
<prop>
<name>item_sku_name</name>
<type>String</type>
<level>Basic</level>
<desc>交易订单的商品的sku名称</desc>
</prop>
<prop>
<name>item_sku_number</name>
<type>String</type>
<level>Basic</level>
<desc>交易订单的商品的sku商家编码</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>交易订单的商品标题</desc>
</prop>
<prop>
<name>item_total_price</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的商品总价格（单价×数量+改价+优惠）</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易订单的付款时间</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商的产品id</desc>
</prop>
<prop>
<name>product_number</name>
<type>String</type>
<level>Basic</level>
<desc>供应商的产品的商家编码</desc>
</prop>
<prop>
<name>product_sku_number</name>
<type>String</type>
<level>Basic</level>
<desc>供应商的产品的sku商家编码</desc>
</prop>
<prop>
<name>product_title</name>
<type>String</type>
<level>Basic</level>
<desc>供应商的产品标题</desc>
</prop>
<prop>
<name>provence</name>
<type>String</type>
<level>Basic</level>
<desc>省份</desc>
</prop>
<prop>
<name>retail_price_high</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的商品最高零售价</desc>
</prop>
<prop>
<name>retail_price_low</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的商品最低零售价</desc>
</prop>
<prop>
<name>shipping_address</name>
<type>String</type>
<level>Basic</level>
<desc>收货人地址</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易订单的状态： 
WAIT_SELLER_SEND_GOODS(已付款，待发货）&lt;br&gt;WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)&lt;br&gt;TRADE_FINISHED(交易成功) 
TRADE_CLOSED(交易关闭)&lt;br&gt;TRADE_REFUNDING（退款中）</desc>
</prop>
<prop>
<name>sub_tc_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单的子订单号</desc>
</prop>
<prop>
<name>supplier_nick</name>
<type>String</type>
<level>Basic</level>
<desc>供应商的淘宝账号昵称</desc>
</prop>
<prop>
<name>tc_adjust_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的卖出金额调整，金额增加时为正数，金额减少时为负数，单位是分，不带小数</desc>
</prop>
<prop>
<name>tc_discount_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠金额，始终为正数，单位是分，不带小数</desc>
</prop>
<prop>
<name>tc_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易订单号</desc>
</prop>
<prop>
<name>tc_preferential_type</name>
<type>String</type>
<level>Basic</level>
<desc>商品优惠类型：聚划算、秒杀或其他</desc>
</prop>
<prop>
<name>trade_monitor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主键id</desc>
</prop>
</props>
</struct>
<struct>
<name>WaitingTimesOnDay</name>
<desc>客户等待（客服）平均时长列表</desc>
<props>
<prop>
<name>waiting_date</name>
<type>Date</type>
<level>Basic</level>
<desc>等待时长（统计）日期</desc>
</prop>
<prop>
<name>waiting_time_by_ids</name>
<type>WaitingTimeById</type>
<level>Object Array</level>
<desc>等待时长列表</desc>
</prop>
</props>
</struct>
<struct>
<name>ImprFeedIdDO</name>
<desc>单条交易子订单语义标签对象</desc>
<props>
<prop>
<name>feed_info_list</name>
<type>ImprFeedInfoDO</type>
<level>Object Array</level>
<desc>存放主评和追评的评价标签信息 
biz_type(1:主评 2:追评)</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>被评价者昵称</desc>
</prop>
<prop>
<name>rate</name>
<type>Number</type>
<level>Basic</level>
<desc>评价结果（1好评 0中评 -1差评）</desc>
</prop>
</props>
</struct>
<struct>
<name>NonReplyStatOnDay</name>
<desc>未回复统计列表(按天)</desc>
<props>
<prop>
<name>nonreply_date</name>
<type>Date</type>
<level>Basic</level>
<desc>（某天的）未回复统计</desc>
</prop>
<prop>
<name>nonreply_stat_by_ids</name>
<type>NonreplyStatById</type>
<level>Object Array</level>
<desc>未回复统计列表</desc>
</prop>
</props>
</struct>
<struct>
<name>StaffEvalStatOnDay</name>
<desc>客服评价统计列表(按天)</desc>
<props>
<prop>
<name>eval_date</name>
<type>Date</type>
<level>Basic</level>
<desc>评价产生的日期</desc>
</prop>
<prop>
<name>staff_eval_stat_by_ids</name>
<type>StaffEvalStatById</type>
<level>Object Array</level>
<desc>客服评价统计列表</desc>
</prop>
</props>
</struct>
<struct>
<name>OnlineTimesOnDay</name>
<desc>某天的客服在线时长列表</desc>
<props>
<prop>
<name>online_date</name>
<type>Date</type>
<level>Basic</level>
<desc>在线日期</desc>
</prop>
<prop>
<name>online_time_by_ids</name>
<type>OnlineTimeById</type>
<level>Object Array</level>
<desc>在线时长列表</desc>
</prop>
</props>
</struct>
<struct>
<name>Task</name>
<desc>批量异步任务结果</desc>
<props>
<prop>
<name>check_code</name>
<type>String</type>
<level>Basic</level>
<desc>下载文件的MD5校验码，通过此校验码可以检查下载的文件是否是完整的。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>任务创建时间</desc>
</prop>
<prop>
<name>download_url</name>
<type>String</type>
<level>Basic</level>
<desc>大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。
通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。
每次获取到的地址只能下载一次。下载的文件加上后缀名.zip打开。</desc>
</prop>
<prop>
<name>method</name>
<type>String</type>
<level>Basic</level>
<desc>此任务是由哪个api产生的</desc>
</prop>
<prop>
<name>schedule</name>
<type>Date</type>
<level>Basic</level>
<desc>定时类型任务的执行时间点</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。</desc>
</prop>
<prop>
<name>subtasks</name>
<type>Subtask</type>
<level>Object Array</level>
<desc>子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表</desc>
</prop>
<prop>
<name>task_id</name>
<type>Number</type>
<level>Basic</level>
<desc>异步任务id。创建异步任务时返回的任务id号</desc>
</prop>
</props>
</struct>
<struct>
<name>CollectItem</name>
<desc>商品或店铺的信息</desc>
<props>
<prop>
<name>item_numid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品或店铺的id号</desc>
</prop>
<prop>
<name>item_owner_nick</name>
<type>String</type>
<level>Basic</level>
<desc>被收藏宝贝或店铺所有者的昵称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>收藏目标的标题名字</desc>
</prop>
</props>
</struct>
<struct>
<name>PicUrl</name>
<desc>图片链接</desc>
<props>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>Subtask</name>
<desc>批量异步任务的子任务结果</desc>
<props>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）</desc>
</prop>
<prop>
<name>sub_task_request</name>
<type>String</type>
<level>Basic</level>
<desc>子任务的有效请求参数，以json格式进行key:value的组合</desc>
</prop>
<prop>
<name>sub_task_result</name>
<type>String</type>
<level>Basic</level>
<desc>子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}</desc>
</prop>
</props>
</struct>
<struct>
<name>ReplyStatOnDay</name>
<desc>(某天)回复统计列表</desc>
<props>
<prop>
<name>reply_date</name>
<type>Date</type>
<level>Basic</level>
<desc>某天（的回复统计）</desc>
</prop>
<prop>
<name>reply_stat_by_ids</name>
<type>ReplyStatById</type>
<level>Object Array</level>
<desc>客服回复统计</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionDetail</name>
<desc>交易的优惠信息详情</desc>
<props>
<prop>
<name>discount_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠金额（免运费、限时打折时为空）,单位：元</desc>
</prop>
<prop>
<name>gift_item_id</name>
<type>String</type>
<level>Basic</level>
<desc>赠品的宝贝id</desc>
</prop>
<prop>
<name>gift_item_name</name>
<type>String</type>
<level>Basic</level>
<desc>满就送商品时，所送商品的名称</desc>
</prop>
<prop>
<name>gift_item_num</name>
<type>String</type>
<level>Basic</level>
<desc>满就送礼物的礼物数量</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易的主订单或子订单号</desc>
</prop>
<prop>
<name>promotion_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动的描述</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>优惠id，(由营销工具id、优惠活动id和优惠详情id组成，结构为：营销工具id-优惠活动id_优惠详情id，如mjs-123024_211143）</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠信息的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>KfcSearchResult</name>
<desc>KFC 关键词过滤匹配结果</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>过滤后的文本： 
当匹配到B等级的词时，文本中的关键词被替换为*号，content即为关键词替换后的文本； 
其他情况，content始终为null</desc>
</prop>
<prop>
<name>level</name>
<type>String</type>
<level>Basic</level>
<desc>匹配到的关键词的等级，值为null，或为A、B、C、D。 
当匹配不到关键词时，值为null，否则值为A、B、C、D中的一个。 
A、B、C、D等级按严重程度从高至低排列。</desc>
</prop>
<prop>
<name>matched</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否匹配到关键词,匹配到则为true.</desc>
</prop>
</props>
</struct>
<struct>
<name>GroupMember</name>
<desc>组及其成员列表</desc>
<props>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>组编号</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>组名称</desc>
</prop>
<prop>
<name>member_list</name>
<type>String</type>
<level>Basic</level>
<desc>组成员列表，逗号分隔</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionRange</name>
<desc>满就送参与范围</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id。</desc>
</prop>
<prop>
<name>activity_name</name>
<type>String</type>
<level>Basic</level>
<desc>活动名称。</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>参与活动的商品id。</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemPromotion</name>
<desc>无条件单品优惠数据对象</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>decrease_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>活动的有效条件、人群和行为描述。</desc>
</prop>
<prop>
<name>discount_rate</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动结束时间。</desc>
</prop>
<prop>
<name>is_decrease_money</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有减钱行为。</desc>
</prop>
<prop>
<name>is_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有打折行为。</desc>
</prop>
<prop>
<name>is_user_tag</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否指定用户标签。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>活动名称。</desc>
</prop>
<prop>
<name>participate_range</name>
<type>Number</type>
<level>Basic</level>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动开始时间。</desc>
</prop>
<prop>
<name>user_tag</name>
<type>String</type>
<level>Basic</level>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</prop>
</props>
</struct>
<struct>
<name>PropertyInputDO</name>
<desc>属性输入特征DO</desc>
<props>
<prop>
<name>is_allow_input</name>
<type>Boolean</type>
<level>Basic</level>
<desc>property_id对应的属性是否可输入</desc>
</prop>
<prop>
<name>is_root_allow_input</name>
<type>Boolean</type>
<level>Basic</level>
<desc>如果property_id对应的属性是子属性，is_root_allow_input标识该子属性的顶级父属性是否可输入。否则is_root_allow_input和is_allow_input 
值是一样的。目前只有品牌会出现父属性不可输入，子属性可输入的情况</desc>
</prop>
<prop>
<name>is_sub_property</name>
<type>Boolean</type>
<level>Basic</level>
<desc>property_id对应的属性是不是子属性</desc>
</prop>
<prop>
<name>property_id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性ID</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrderDetail</name>
<desc>物流宝订单，并且包含订单详情</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>如果是交易单，则显示交易中买家昵称</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>is_completed</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否已全部完成</desc>
</prop>
<prop>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单最后一次修改时间</desc>
</prop>
<prop>
<name>operate_type</name>
<type>String</type>
<level>Basic</level>
<desc>出库或者入库，IN表示入库，OUT表示出库</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单编码</desc>
</prop>
<prop>
<name>order_item_list</name>
<type>WlbOrderItem</type>
<level>Object Array</level>
<desc>物流宝订单对应的商品详情</desc>
</prop>
<prop>
<name>order_source</name>
<type>String</type>
<level>Basic</level>
<desc>订单来源: 
产生物流订单的原因，比如: 
 
订单来源:1:TAOBAO;2:EXT;3:ERP;4:WMS</desc>
</prop>
<prop>
<name>order_source_code</name>
<type>String</type>
<level>Basic</level>
<desc>对应创建物流宝订单top接口中的的out_biz_code字段，主要是用来去重用</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流状态， 
订单已创建：0 
订单已取消: -1 
订单关闭:-3 
下发中: 10 
已下发: 11 
接收方拒签 :-100 
已发货:100 
签收成功:200</desc>
</prop>
<prop>
<name>order_sub_type</name>
<type>String</type>
<level>Basic</level>
<desc>(1)其它:    OTHER 
(2)淘宝交易: TAOBAO 
(3)301:调拨: ALLOCATION 
(4)401:盘点:CHECK 
(5)501:销售采购:PRUCHASE</desc>
</prop>
<prop>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>1:正常订单: NARMAL 
2:退货订单: RETURN 
3:换货订单: CHANGE</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>订单备注</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家NICK</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundAgreeResponse</name>
<desc>同意退款返回结果</desc>
<props>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>退款结果消息</desc>
</prop>
<prop>
<name>msg_code</name>
<type>String</type>
<level>Basic</level>
<desc>消息编码</desc>
</prop>
<prop>
<name>results</name>
<type>RefundMappingResult</type>
<level>Object Array</level>
<desc>退款中每个退款操作的结果信息</desc>
</prop>
<prop>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>退款整体是否成功</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundMappingResult</name>
<desc>同意退款返回值中一部分，退款编号与结果信息映射类</desc>
<props>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>结果信息</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款ID</desc>
</prop>
<prop>
<name>succ</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundBaseResponse</name>
<desc>退款平台基础返回对象</desc>
<props>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>返回的信息，包括成功和失败的具体信息</desc>
</prop>
<prop>
<name>msg_code</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的信息编号</desc>
</prop>
<prop>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>指示操作是否成功</desc>
</prop>
</props>
</struct>
<struct>
<name>MjsPromotion</name>
<desc>满就送对象数据结构</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>decrease_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>活动的有效条件、人群和行为描述。</desc>
</prop>
<prop>
<name>discount_rate</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动结束时间。</desc>
</prop>
<prop>
<name>exclude_area</name>
<type>String</type>
<level>Basic</level>
<desc>免邮的排除地区，即，除指定地区外，其他地区包邮。当is_free_post为true时，该值才有意义。代码使用*链接，代码为行政区划代码。</desc>
</prop>
<prop>
<name>gift_id</name>
<type>Number</type>
<level>Basic</level>
<desc>礼品id，当is_send_gift为true时，该值才有意义。 
1）只有填写真实的淘宝商品id时，才能生成物流单，并且在确定订单的页面上可以点击该商品名称跳转到商品详情页面。2）当礼物为实物商品时(有宝贝id),礼物必须为上架商品,不能为虚拟商品,不能为拍卖商品,不能有sku,不符合条件的,不做为礼物。</desc>
</prop>
<prop>
<name>gift_name</name>
<type>String</type>
<level>Basic</level>
<desc>礼品名称。当is_send_gift为true时，该值才有意义。</desc>
</prop>
<prop>
<name>gift_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品详情的url，当is_send_gift为true时，该值才有效。</desc>
</prop>
<prop>
<name>is_amount_multiple</name>
<type>Boolean</type>
<level>Basic</level>
<desc>满元是否上不封顶。当is_amount_over为true时，该值才有意义。当该值为true时，表示满元上不封顶，例如满100元减10元，当满200时，则减20元。。。</desc>
</prop>
<prop>
<name>is_amount_over</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有满元条件。</desc>
</prop>
<prop>
<name>is_decrease_money</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有减钱行为。</desc>
</prop>
<prop>
<name>is_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有打折行为。</desc>
</prop>
<prop>
<name>is_free_post</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有免邮行为。</desc>
</prop>
<prop>
<name>is_item_count_over</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有满件条件。</desc>
</prop>
<prop>
<name>is_item_multiple</name>
<type>Boolean</type>
<level>Basic</level>
<desc>满件是否上不封顶。当is_amount_multiple为true时，该值才有意义。当该值为true时，表示满件上不封顶，例如满10件减2元，当满20件时，则减4元。。。</desc>
</prop>
<prop>
<name>is_send_gift</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有送礼品行为。</desc>
</prop>
<prop>
<name>is_shop_member</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有店铺会员等级条件。</desc>
</prop>
<prop>
<name>is_user_tag</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否指定用户标签。</desc>
</prop>
<prop>
<name>item_count</name>
<type>Number</type>
<level>Basic</level>
<desc>满多少件。当is_item_count_over为true时，该值才有意义。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>活动名称。</desc>
</prop>
<prop>
<name>participate_range</name>
<type>Number</type>
<level>Basic</level>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。</desc>
</prop>
<prop>
<name>shop_member_level</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺会员等级，当is_shop_member为true时，该值才有意义。0：店铺客户；1：普通客户；2：高级会员；3：VIP会员； 4：至尊VIP会员。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动开始时间。</desc>
</prop>
<prop>
<name>total_price</name>
<type>Number</type>
<level>Basic</level>
<desc>满多少元。当is_amount_over为true时，该才字段有意义。注意：单位是分，即10000表示100元。</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>活动类型： 1表示商品级别的活动；2表示店铺级别的活动。</desc>
</prop>
<prop>
<name>user_tag</name>
<type>String</type>
<level>Basic</level>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</prop>
</props>
</struct>
<struct>
<name>Campaign</name>
<desc>推广计划</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>online_status</name>
<type>String</type>
<level>Basic</level>
<desc>用户设置的上下限状态；offline-下线；online-上线；</desc>
</prop>
<prop>
<name>settle_reason</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划结算下线原因，1-余额不足；2-超过日限额，以分号分隔多个下线原因</desc>
</prop>
<prop>
<name>settle_status</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划结算状态，offline-下线；online-上线，</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划名称，不能多余20个汉字</desc>
</prop>
</props>
</struct>
<struct>
<name>ScoreResult</name>
<desc>服务平台评价流水对象</desc>
<props>
<prop>
<name>attitude_score</name>
<type>String</type>
<level>Basic</level>
<desc>服务态度评分</desc>
</prop>
<prop>
<name>avg_score</name>
<type>String</type>
<level>Basic</level>
<desc>平均分</desc>
</prop>
<prop>
<name>easyuse_score</name>
<type>String</type>
<level>Basic</level>
<desc>易用性评分</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>评价时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>评价id</desc>
</prop>
<prop>
<name>is_pay</name>
<type>Number</type>
<level>Basic</level>
<desc>是否实际付费 1-实际付费 2-实际未付费</desc>
</prop>
<prop>
<name>is_valid</name>
<type>Number</type>
<level>Basic</level>
<desc>是否为有效评分 1-有效评分 2-无效评分</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务规格code</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务规格名称</desc>
</prop>
<prop>
<name>matched_score</name>
<type>String</type>
<level>Basic</level>
<desc>描述相符</desc>
</prop>
<prop>
<name>prof_score</name>
<type>String</type>
<level>Basic</level>
<desc>专业性评分</desc>
</prop>
<prop>
<name>rapid_score</name>
<type>String</type>
<level>Basic</level>
<desc>交片速度</desc>
</prop>
<prop>
<name>service_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务code</desc>
</prop>
<prop>
<name>stability_score</name>
<type>String</type>
<level>Basic</level>
<desc>稳定性评分</desc>
</prop>
<prop>
<name>suggestion</name>
<type>String</type>
<level>Basic</level>
<desc>评论内容</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>评价人用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>File</name>
<desc>多媒体平台文件，包括文件的一些基本信息</desc>
<props>
<prop>
<name>cdn_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>申请cdn资源的分配的userId</desc>
</prop>
<prop>
<name>deleted</name>
<type>String</type>
<level>Basic</level>
<desc>文件是否删除</desc>
</prop>
<prop>
<name>dir_id</name>
<type>Number</type>
<level>Basic</level>
<desc>该文件所属目录的目录编号</desc>
</prop>
<prop>
<name>file_id</name>
<type>Number</type>
<level>Basic</level>
<desc>文件在多媒体平台的编号</desc>
</prop>
<prop>
<name>file_path</name>
<type>String</type>
<level>Basic</level>
<desc>返回的是绝对路径如：http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>文件内容修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>文件在多媒体平台的文件名称</desc>
</prop>
<prop>
<name>picture_pix</name>
<type>String</type>
<level>Basic</level>
<desc>图片像素，如果非图片，该值为空</desc>
</prop>
<prop>
<name>size</name>
<type>Number</type>
<level>Basic</level>
<desc>文件的大小</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>图片状态,unfroze代表没有被冻结，froze代表被冻结,pass代表排查通过</desc>
</prop>
</props>
</struct>
<struct>
<name>Role</name>
<desc>子账号角色</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>角色描述</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>所拥有权限</desc>
</prop>
<prop>
<name>role_id</name>
<type>Number</type>
<level>Basic</level>
<desc>角色id</desc>
</prop>
<prop>
<name>role_name</name>
<type>String</type>
<level>Basic</level>
<desc>角色名</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家Id</desc>
</prop>
</props>
</struct>
<struct>
<name>TransitStepInfo</name>
<desc>物流跟踪信息的一条</desc>
<props>
<prop>
<name>action</name>
<type>String</type>
<level>Basic</level>
<desc>节点说明 ，指明当前节点揽收、派送，签收。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>描述</desc>
</prop>
<prop>
<name>node_description</name>
<type>String</type>
<level>Basic</level>
<desc>地址地一</desc>
</prop>
<prop>
<name>status_desc</name>
<type>String</type>
<level>Basic</level>
<desc>状态描述</desc>
</prop>
<prop>
<name>status_time</name>
<type>String</type>
<level>Basic</level>
<desc>状态发生的时间</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>时间。。</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserPermission</name>
<desc>子账号所拥有的权限对象(直接赋予的权限和通过角色赋予的权限的总和对象)</desc>
<props>
<prop>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>子账号被直接赋予的权限点列表</desc>
</prop>
<prop>
<name>roles</name>
<type>Role</type>
<level>Object Array</level>
<desc>子账号被赋予的角色信息(Role)列表。列表中的角色对象只有role_id，role_name，permissions信息</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionInShop</name>
<desc>店铺级优惠信息</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动名称</desc>
</prop>
<prop>
<name>promotion_detail_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠详情描述。</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>idValue值</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderAmount</name>
<desc>子订单的帐务数据结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手工调整的子订单的优惠金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的系统优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>divide_order_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分摊之后的实付金额</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>子交易订单中购买商品的数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单对应的商品数字id</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子交易订单编号</desc>
</prop>
<prop>
<name>part_mjz_discount</name>
<type>String</type>
<level>Basic</level>
<desc>优惠分摊</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。计算公式如下：payment = price * num + adjust_fee - discount_fee + post_fee(邮费，单笔子订单时子订单实付金额包含邮费，多笔子订单时不包含邮费)；对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的系统优惠的名称，对应于discount_fee的名称</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单对应的商品的sku_id</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionDisplayTop</name>
<desc>优惠信息对象</desc>
<props>
<prop>
<name>promotion_in_item</name>
<type>PromotionInItem</type>
<level>Object Array</level>
<desc>单品级优惠信息</desc>
</prop>
<prop>
<name>promotion_in_shop</name>
<type>PromotionInShop</type>
<level>Object Array</level>
<desc>店铺级优惠信息</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionInItem</name>
<desc>单品级优惠信息</desc>
<props>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠描述</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠结束时间</desc>
</prop>
<prop>
<name>item_promo_price</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠折后价格</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠展示名称</desc>
</prop>
<prop>
<name>other_need</name>
<type>String</type>
<level>Basic</level>
<desc>需要支付附加物，显示为+xxx。如：+20淘金币</desc>
</prop>
<prop>
<name>other_send</name>
<type>String</type>
<level>Basic</level>
<desc>赠送东西。如：送10商城积分</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>idValue的值</desc>
</prop>
<prop>
<name>sku_id_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>sku价格对应的id（保证二者顺序相同）</desc>
</prop>
<prop>
<name>sku_price_list</name>
<type>Price</type>
<level>Basic Array</level>
<desc>sku价格列表</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠开始时间</desc>
</prop>
</props>
</struct>
<struct>
<name>FavoriteItem</name>
<desc>推荐的关联商品</desc>
<props>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>item_pictrue</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片地址</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的详情页面地址</desc>
</prop>
<prop>
<name>promotion_price</name>
<type>Price</type>
<level>Basic</level>
<desc>促销价格</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<desc>商品销售次数</desc>
</prop>
<prop>
<name>track_iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品id（具有跟踪效果）代替原来的item_id  &lt;a href="http://dev.open.taobao.com/bbs/read.php?tid=24323"&gt;详细说明&lt;/a&gt;</desc>
</prop>
</props>
</struct>
<struct>
<name>FavoriteShop</name>
<desc>推荐关联店铺信息</desc>
<props>
<prop>
<name>rate</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺卖家信用</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shop_id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺ID</desc>
</prop>
<prop>
<name>shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺ID</desc>
</prop>
<prop>
<name>shop_pic</name>
<type>String</type>
<level>Basic</level>
<desc>店铺LOGO图片</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺首页链接</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeAmount</name>
<desc>交易订单的帐务信息详情</desc>
<props>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家获得积分,返点的积分。格式:100;单位:个</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>交易创建时间</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易成功时间(更新交易状态为成功的同时更新)/确认收货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>order_amounts</name>
<type>OrderAmount</type>
<level>Object Array</level>
<desc>子订单的帐务金额详情列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>主订单实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分，计算公式如下： 
如果主订单只有一笔子订单 payment = 子订单的实付金额 + 货到付款服务费(如果是货到付款订单) - 主订单的系统级优惠；如果主订单有多笔子订单 payment = 各子订单的实付金额之和 + 货到付款服务费(如果是货到付款订单) + 邮费 - 主订单的系统级优惠</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分。目前只提供整笔交易的邮费，暂不提供各子订单的邮费</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<desc>主交易订单的系统级优惠详情</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易主订单编号</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>主订单的商品金额（各子订单中商品price * num的和，不包括任何优惠信息）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>Passerger</name>
<desc>国内机票乘机人信息数据结构【top订单优化】</desc>
<props>
<prop>
<name>birthday</name>
<type>String</type>
<level>Basic</level>
<desc>乘机人生日：yyyy-mm-dd</desc>
</prop>
<prop>
<name>cert_no</name>
<type>String</type>
<level>Basic</level>
<desc>乘机人证件号码</desc>
</prop>
<prop>
<name>cert_type</name>
<type>Number</type>
<level>Basic</level>
<desc>乘机人证件类型：0，身份证；1，护照；2，学生证；3，军人证；4，回乡证；5，台胞证；6，港澳台胞；7，国际海员；8，外国人永久居留证；9，其它证件</desc>
</prop>
<prop>
<name>ei</name>
<type>String</type>
<level>Basic</level>
<desc>ei项</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展字段</desc>
</prop>
<prop>
<name>force_insure_price</name>
<type>Number</type>
<level>Basic</level>
<desc>强制保险金额，单位：分</desc>
</prop>
<prop>
<name>insure_promotion_price</name>
<type>Number</type>
<level>Basic</level>
<desc>当前乘机人的保险分润金额，单位：分</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>乘机人姓名</desc>
</prop>
<prop>
<name>passenger_type</name>
<type>Number</type>
<level>Basic</level>
<desc>乘机人类型：0，成人；1，儿童；2，婴儿</desc>
</prop>
<prop>
<name>pnr</name>
<type>String</type>
<level>Basic</level>
<desc>pnr</desc>
</prop>
<prop>
<name>ticket_no</name>
<type>String</type>
<level>Basic</level>
<desc>票号</desc>
</prop>
<prop>
<name>trip_card_no</name>
<type>String</type>
<level>Basic</level>
<desc>常旅客卡号</desc>
</prop>
<prop>
<name>tuigaiqian</name>
<type>String</type>
<level>Basic</level>
<desc>退改签</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignBudget</name>
<desc>推广计划的日限额</desc>
<props>
<prop>
<name>budget</name>
<type>Number</type>
<level>Basic</level>
<desc>日限额，单位是元，不得小于30</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_smooth</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否平滑消耗，true-是；false-否；在设置了推广计划日限额后，此属性才生效</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>BaseInfo</name>
<desc>国内机票，订单基本信息数据结构【top订单优化】</desc>
<props>
<prop>
<name>account_no</name>
<type>String</type>
<level>Basic</level>
<desc>买家支付宝帐号</desc>
</prop>
<prop>
<name>alipay_trade_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>book_way</name>
<type>Number</type>
<level>Basic</level>
<desc>订单出票方式==&gt; 1:手工hk;2:自动出票;3:自动hk手工出票</desc>
</prop>
<prop>
<name>commission</name>
<type>String</type>
<level>Basic</level>
<desc>佣金，单位：分</desc>
</prop>
<prop>
<name>commission_discount</name>
<type>String</type>
<level>Basic</level>
<desc>佣金比率</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展信息</desc>
</prop>
<prop>
<name>force_insure</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否强制保险订单，有一张票为强制保险即为true</desc>
</prop>
<prop>
<name>insure_promotion</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保险分润订单，有一个乘机人支持分润即为 True</desc>
</prop>
<prop>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单表最近一次修改时间</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单淘宝唯一主键</desc>
</prop>
<prop>
<name>pay_latest_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单最晚支付时间</desc>
</prop>
<prop>
<name>pay_status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单支付状态==&gt; 0:未付款;1:已付款，冻结买家定金;2:付款给卖家;3:解冻定金给买家;4:已扣佣;5:交易关闭;6:确认可支付;7:确认不可支付</desc>
</prop>
<prop>
<name>relation_email</name>
<type>String</type>
<level>Basic</level>
<desc>联系人邮箱</desc>
</prop>
<prop>
<name>relation_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>联系人手机号</desc>
</prop>
<prop>
<name>relation_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>relation_phone_bak</name>
<type>String</type>
<level>Basic</level>
<desc>联系人备用电话</desc>
</prop>
<prop>
<name>relative_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关联订单号，普通往返另一程订单号，仅两程订单为同一个代理商时提供</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单状态定义==&gt; 0:未付款;(注：支持保险分润时，订单已付款，保险未付款也为0)1:处理中;2:确定出票;3:预定成功;4:预定失败;5:处理中超时失效;6:支付超时失效;7:买家取消</desc>
</prop>
<prop>
<name>total_price</name>
<type>Number</type>
<level>Basic</level>
<desc>总金额，所有乘机人加机建燃油，单位：分</desc>
</prop>
<prop>
<name>trip_type</name>
<type>Number</type>
<level>Basic</level>
<desc>航程类型：0，单程；1，普通往返；2，多程（暂时没有使用）；3，特价往返</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignArea</name>
<desc>推广计划的投放地域</desc>
<props>
<prop>
<name>area</name>
<type>String</type>
<level>Basic</level>
<desc>值为：“all”；或者用“,”分割的数字，数字必须是直通车全国省市列表的AreaID，如果已经包含省、自治区id，请不要再包括省内市的id；</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>SearchOrderResult</name>
<desc>代理商订单搜索接口返回数据对象【订单优化】</desc>
<props>
<prop>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否还有下一页，即满足搜索条件的订单数是否还有下一个分页</desc>
</prop>
<prop>
<name>order_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>淘宝机票订单列表</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>当前淘宝系统设定的搜索结果页大小，即支持一次最多返回订单条数</desc>
</prop>
</props>
</struct>
<struct>
<name>RecommendWord</name>
<desc>推荐词</desc>
<props>
<prop>
<name>average_price</name>
<type>String</type>
<level>Basic</level>
<desc>平均价格</desc>
</prop>
<prop>
<name>pertinence</name>
<type>String</type>
<level>Basic</level>
<desc>相关度</desc>
</prop>
<prop>
<name>pv</name>
<type>String</type>
<level>Basic</level>
<desc>搜索量</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>推荐的关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignSchedule</name>
<desc>推广计划的分时折扣设置</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>schedule</name>
<type>String</type>
<level>Basic</level>
<desc>值为：“all”；或者用“;”分割的每天的设置字符串，该字符串为用“,”分割的时段折扣字符串，格式为：起始时间-结束时间:折扣，其中时间是24小时格式记录18:30，，折扣是1-150整数，表示折扣百分比；</desc>
</prop>
</props>
</struct>
<struct>
<name>CorpInfo</name>
<desc>国内机票订单行程购票数据结构录入【top订单优化】</desc>
<props>
<prop>
<name>apply_name</name>
<type>String</type>
<level>Basic</level>
<desc>申请人姓名</desc>
</prop>
<prop>
<name>apply_no</name>
<type>String</type>
<level>Basic</level>
<desc>申请人工号</desc>
</prop>
<prop>
<name>apply_time</name>
<type>Date</type>
<level>Basic</level>
<desc>申请时间</desc>
</prop>
<prop>
<name>corpration_id</name>
<type>String</type>
<level>Basic</level>
<desc>集团id</desc>
</prop>
<prop>
<name>cost_center</name>
<type>String</type>
<level>Basic</level>
<desc>成本中心</desc>
</prop>
<prop>
<name>cost_center_code</name>
<type>String</type>
<level>Basic</level>
<desc>成本中心代码</desc>
</prop>
<prop>
<name>cost_ou</name>
<type>String</type>
<level>Basic</level>
<desc>费用归属OU的CODE</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展字段</desc>
</prop>
<prop>
<name>form_no</name>
<type>String</type>
<level>Basic</level>
<desc>BPM的fromNO</desc>
</prop>
<prop>
<name>form_status</name>
<type>String</type>
<level>Basic</level>
<desc>单据状态代码</desc>
</prop>
<prop>
<name>receipts_status</name>
<type>String</type>
<level>Basic</level>
<desc>单据状态描述</desc>
</prop>
<prop>
<name>trip_person_name</name>
<type>String</type>
<level>Basic</level>
<desc>出差人姓名</desc>
</prop>
<prop>
<name>trip_person_no</name>
<type>String</type>
<level>Basic</level>
<desc>出差人工号</desc>
</prop>
<prop>
<name>work_space</name>
<type>String</type>
<level>Basic</level>
<desc>工作地点</desc>
</prop>
</props>
</struct>
<struct>
<name>AtOrder</name>
<desc>国内机票订单数据结构【top订单优化】</desc>
<props>
<prop>
<name>base_info</name>
<type>BaseInfo</type>
<level>Object</level>
<desc>订单基础信息</desc>
</prop>
<prop>
<name>corp_info</name>
<type>CorpInfo</type>
<level>Object</level>
<desc>订单行政购票信息</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展字段</desc>
</prop>
<prop>
<name>itinerary</name>
<type>Itinerary</type>
<level>Object</level>
<desc>订单行程单信息</desc>
</prop>
<prop>
<name>segment_infos</name>
<type>SegmentInfo</type>
<level>Object Array</level>
<desc>订单航段信息</desc>
</prop>
</props>
</struct>
<struct>
<name>SegmentInfo</name>
<desc>国内机票航段信息数据结构，【订单优化】</desc>
<props>
<prop>
<name>airline_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班航空公司二字码</desc>
</prop>
<prop>
<name>arr_airport_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班到达机场三字码</desc>
</prop>
<prop>
<name>arr_city_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班到达城市三字码</desc>
</prop>
<prop>
<name>arr_time</name>
<type>String</type>
<level>Basic</level>
<desc>航班到达时间，格式yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>book_status</name>
<type>Number</type>
<level>Basic</level>
<desc>出票状态: 0，初始状态；1，hk成功；2，hk失败；3，出票（RR）成功；4，出票（RR）失败；5，取消hk成功 6:取消hk失败</desc>
</prop>
<prop>
<name>cabin_class</name>
<type>Number</type>
<level>Basic</level>
<desc>舱位等级：0，头等舱(F)；1，商务舱(C)；2，经济舱(Y)</desc>
</prop>
<prop>
<name>cabin_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班舱位代码</desc>
</prop>
<prop>
<name>cabin_id</name>
<type>Number</type>
<level>Basic</level>
<desc>航班舱位id，淘宝系统唯一键</desc>
</prop>
<prop>
<name>carrier</name>
<type>String</type>
<level>Basic</level>
<desc>航班实际承运航班号</desc>
</prop>
<prop>
<name>child_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>航班儿童机建费用，单位：分</desc>
</prop>
<prop>
<name>child_insure_promotion_price</name>
<type>Number</type>
<level>Basic</level>
<desc>儿童保险分润金额，单位元</desc>
</prop>
<prop>
<name>child_price</name>
<type>Number</type>
<level>Basic</level>
<desc>儿童销售价格，单位：分</desc>
</prop>
<prop>
<name>child_tax</name>
<type>Number</type>
<level>Basic</level>
<desc>航班儿童燃油税，单位：分</desc>
</prop>
<prop>
<name>dep_airport_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班出发机场三字码</desc>
</prop>
<prop>
<name>dep_city_code</name>
<type>String</type>
<level>Basic</level>
<desc>航班出发城市三字码</desc>
</prop>
<prop>
<name>dep_time</name>
<type>String</type>
<level>Basic</level>
<desc>航班起飞时间，格式yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展信息</desc>
</prop>
<prop>
<name>fee</name>
<type>Number</type>
<level>Basic</level>
<desc>航班成人机建费，单位：分</desc>
</prop>
<prop>
<name>flight_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝系统航班id唯一键</desc>
</prop>
<prop>
<name>flight_no</name>
<type>String</type>
<level>Basic</level>
<desc>航班号</desc>
</prop>
<prop>
<name>flight_type</name>
<type>String</type>
<level>Basic</level>
<desc>航班机型</desc>
</prop>
<prop>
<name>insure_promotion_price</name>
<type>Number</type>
<level>Basic</level>
<desc>成人保险分润金额，单位元</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注信息，政策中的备注信息</desc>
</prop>
<prop>
<name>passengers</name>
<type>Passerger</type>
<level>Object Array</level>
<desc>乘机人信息列表</desc>
</prop>
<prop>
<name>policy_id</name>
<type>Number</type>
<level>Basic</level>
<desc>政策id，淘宝系统政策唯一键</desc>
</prop>
<prop>
<name>policy_type</name>
<type>Number</type>
<level>Basic</level>
<desc>机票政策类型：6，特价；8，让利；10，特殊</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>销售价格，单位：分</desc>
</prop>
<prop>
<name>segment_type</name>
<type>Number</type>
<level>Basic</level>
<desc>航段类型：1，去程；2，回程</desc>
</prop>
<prop>
<name>special_rule</name>
<type>String</type>
<level>Basic</level>
<desc>特殊说明</desc>
</prop>
<prop>
<name>tax</name>
<type>Number</type>
<level>Basic</level>
<desc>航班成人燃油税，单位：分</desc>
</prop>
<prop>
<name>ticket_price</name>
<type>Number</type>
<level>Basic</level>
<desc>当前航段票面价格，单位：分</desc>
</prop>
</props>
</struct>
<struct>
<name>Itinerary</name>
<desc>国内机票行程单数据结构定义【top订单优化】</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>收件人地址</desc>
</prop>
<prop>
<name>alipay_trade_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>express_code</name>
<type>String</type>
<level>Basic</level>
<desc>邮寄单号</desc>
</prop>
<prop>
<name>extra</name>
<type>String</type>
<level>Basic</level>
<desc>扩展字段</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝主键id</desc>
</prop>
<prop>
<name>itinerary_no</name>
<type>String</type>
<level>Basic</level>
<desc>行程单号</desc>
</prop>
<prop>
<name>mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收件人手机号</desc>
</prop>
<prop>
<name>mobile_bak</name>
<type>String</type>
<level>Basic</level>
<desc>收件人备用手机号</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>收件人姓名</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>行程单价格，单位：分</desc>
</prop>
<prop>
<name>send_date</name>
<type>String</type>
<level>Basic</level>
<desc>邮寄时间</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>行程单订单的状态 0：未付款 1：已付款 2：转交易成功 3：已邮寄 4：已取消</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>行程单类型：6，快递</desc>
</prop>
</props>
</struct>
<struct>
<name>LotteryWangcaiPresent</name>
<desc>旺彩赠送DO</desc>
<props>
<prop>
<name>app_name</name>
<type>String</type>
<level>Basic</level>
<desc>isv应用的名称</desc>
</prop>
<prop>
<name>lottery_name</name>
<type>String</type>
<level>Basic</level>
<desc>彩种名称</desc>
</prop>
<prop>
<name>present_date</name>
<type>Date</type>
<level>Basic</level>
<desc>赠送时间</desc>
</prop>
<prop>
<name>present_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主键id</desc>
</prop>
<prop>
<name>stake_count</name>
<type>Number</type>
<level>Basic</level>
<desc>彩票注数</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单状态</desc>
</prop>
<prop>
<name>status_desc</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态描述</desc>
</prop>
<prop>
<name>sweety_words</name>
<type>String</type>
<level>Basic</level>
<desc>赠言</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
<prop>
<name>user_num_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户数字id</desc>
</prop>
<prop>
<name>win_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>中奖金额，以分为单位</desc>
</prop>
</props>
</struct>
<struct>
<name>LotteryWangcaiPresentStat</name>
<desc>彩票赠送的统计数据DO</desc>
<props>
<prop>
<name>date_id</name>
<type>Number</type>
<level>Basic</level>
<desc>日期</desc>
</prop>
<prop>
<name>present_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>当日赠送彩票的金额</desc>
</prop>
<prop>
<name>present_stake</name>
<type>Number</type>
<level>Basic</level>
<desc>当日赠送彩票的注数</desc>
</prop>
<prop>
<name>present_user</name>
<type>Number</type>
<level>Basic</level>
<desc>当日赠送用户数</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>送彩方的淘宝数字ID</desc>
</prop>
</props>
</struct>
<struct>
<name>FoodSecurity</name>
<desc>食品安全信息，包括： 
生产许可证号、产品标准号、厂名、厂址等</desc>
<props>
<prop>
<name>contact</name>
<type>String</type>
<level>Basic</level>
<desc>厂家联系方式</desc>
</prop>
<prop>
<name>design_code</name>
<type>String</type>
<level>Basic</level>
<desc>产品标准号</desc>
</prop>
<prop>
<name>factory</name>
<type>String</type>
<level>Basic</level>
<desc>厂名</desc>
</prop>
<prop>
<name>factory_site</name>
<type>String</type>
<level>Basic</level>
<desc>厂址</desc>
</prop>
<prop>
<name>food_additive</name>
<type>String</type>
<level>Basic</level>
<desc>食品添加剂</desc>
</prop>
<prop>
<name>health_product_no</name>
<type>String</type>
<level>Basic</level>
<desc>健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；</desc>
</prop>
<prop>
<name>mix</name>
<type>String</type>
<level>Basic</level>
<desc>配料表</desc>
</prop>
<prop>
<name>period</name>
<type>String</type>
<level>Basic</level>
<desc>保质期</desc>
</prop>
<prop>
<name>plan_storage</name>
<type>String</type>
<level>Basic</level>
<desc>储藏方法</desc>
</prop>
<prop>
<name>prd_license_no</name>
<type>String</type>
<level>Basic</level>
<desc>生产许可证号</desc>
</prop>
<prop>
<name>product_date_end</name>
<type>String</type>
<level>Basic</level>
<desc>生产结束日期</desc>
</prop>
<prop>
<name>product_date_start</name>
<type>String</type>
<level>Basic</level>
<desc>生产开始日期</desc>
</prop>
<prop>
<name>stock_date_end</name>
<type>String</type>
<level>Basic</level>
<desc>进货结束日期，要在生产日期之后</desc>
</prop>
<prop>
<name>stock_date_start</name>
<type>String</type>
<level>Basic</level>
<desc>进货开始日期，要在生产日期之后</desc>
</prop>
<prop>
<name>supplier</name>
<type>String</type>
<level>Basic</level>
<desc>供货商</desc>
</prop>
</props>
</struct>
<struct>
<name>LotteryType</name>
<desc>淘宝彩票彩种信息描述</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>彩种ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>彩种名称</desc>
</prop>
</props>
</struct>
<struct>
<name>HotelImage</name>
<desc>酒店图片</desc>
<props>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>pic</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址链接</desc>
</prop>
</props>
</struct>
<struct>
<name>KeywordForecast</name>
<desc>词预估信息</desc>
<props>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>词ID</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>price_click</name>
<type>String</type>
<level>Basic</level>
<desc>点击预估；根据出价预估点击量 
40:784,50:1007表示出价40分点击量为783；出价50分点击量为1007</desc>
</prop>
<prop>
<name>price_cust</name>
<type>String</type>
<level>Basic</level>
<desc>消耗预估；根据出价预估消耗。40:20,50:21表示出价40元分，消耗20分；出价50分消耗21分</desc>
</prop>
<prop>
<name>price_rank</name>
<type>String</type>
<level>Basic</level>
<desc>排名预估;根据出价预估排名。 
40:101,41:101表示出价40分排名101位；出价41分排名101位</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupCatMatchForecast</name>
<desc>类目出价预估信息</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组ID</desc>
</prop>
<prop>
<name>catmatch_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目出价ID</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>昵称</desc>
</prop>
<prop>
<name>price_click</name>
<type>String</type>
<level>Basic</level>
<desc>点击预估；根据出价预估点击量 40:784,50:1007表示出价40分点击量为783；出价50分点击量为1007</desc>
</prop>
<prop>
<name>price_cust</name>
<type>String</type>
<level>Basic</level>
<desc>消耗预估；根据出价预估消耗。40:20,50:21表示出价40元分，消耗20分；出价50分消耗21分</desc>
</prop>
<prop>
<name>price_rank</name>
<type>String</type>
<level>Basic</level>
<desc>排名预估;根据出价预估排名。 40:101,41:101表示出价40分排名101位；出价41分排名101位</desc>
</prop>
</props>
</struct>
<struct>
<name>KeywordQscore</name>
<desc>关键词质量得分</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划id</desc>
</prop>
<prop>
<name>creative_score</name>
<type>String</type>
<level>Basic</level>
<desc>创意得分</desc>
</prop>
<prop>
<name>cust_score</name>
<type>String</type>
<level>Basic</level>
<desc>基础分</desc>
</prop>
<prop>
<name>cvr_score</name>
<type>String</type>
<level>Basic</level>
<desc>买家体验分</desc>
</prop>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词id</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>qscore</name>
<type>String</type>
<level>Basic</level>
<desc>质量总分</desc>
</prop>
<prop>
<name>rele_score</name>
<type>String</type>
<level>Basic</level>
<desc>相关性</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>AlipayAccount</name>
<desc>支付宝用户账户信息</desc>
<props>
<prop>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝用户ID</desc>
</prop>
<prop>
<name>available_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>可用余额</desc>
</prop>
<prop>
<name>freeze_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>不可用余额</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>余额总额</desc>
</prop>
</props>
</struct>
<struct>
<name>AlipayContract</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝用户ID</desc>
</prop>
<prop>
<name>contract_content</name>
<type>String</type>
<level>Basic</level>
<desc>订购的应用名称，有效时间。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订购的失效时间</desc>
</prop>
<prop>
<name>page_url</name>
<type>String</type>
<level>Basic</level>
<desc>订购URL。在sign返回false时返回应用的订购地址，可以引导用户订购。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订购的生效时间</desc>
</prop>
<prop>
<name>subscribe</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否订购的标识。true：代表已订购。</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallRateInfo</name>
<desc>评价信息包括标签信息</desc>
<props>
<prop>
<name>append_content</name>
<type>String</type>
<level>Basic</level>
<desc>追加评价内容</desc>
</prop>
<prop>
<name>append_has_negtv</name>
<type>Boolean</type>
<level>Basic</level>
<desc>追评中是否含有负向标签</desc>
</prop>
<prop>
<name>append_tags</name>
<type>TmallRateTag</type>
<level>Object Array</level>
<desc>追加评价中带有的语义标签列表</desc>
</prop>
<prop>
<name>append_time</name>
<type>Date</type>
<level>Basic</level>
<desc>追加评价时间</desc>
</prop>
<prop>
<name>comment_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价时间</desc>
</prop>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>评价内容</desc>
</prop>
<prop>
<name>has_negtv</name>
<type>Boolean</type>
<level>Basic</level>
<desc>原始评价是否含有负向标签</desc>
</prop>
<prop>
<name>tags</name>
<type>TmallRateTag</type>
<level>Object Array</level>
<desc>原始评价对应的标签列表</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>表示评价者的昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallRateTag</name>
<desc>天猫评价标签对象</desc>
<props>
<prop>
<name>posi</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示标签的极性，正极true，负极false</desc>
</prop>
<prop>
<name>tag_name</name>
<type>String</type>
<level>Basic</level>
<desc>表示标签的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupCatMatchPage</name>
<desc>一页ADGroupCatMatch列表</desc>
<props>
<prop>
<name>adgroup_catmatch_list</name>
<type>ADGroupCatmatch</type>
<level>Object Array</level>
<desc>类目出价列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>AccountFreeze</name>
<desc>支付宝用户冻结明细信息</desc>
<props>
<prop>
<name>freeze_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>冻结金额</desc>
</prop>
<prop>
<name>freeze_name</name>
<type>String</type>
<level>Basic</level>
<desc>冻结类型名称</desc>
</prop>
<prop>
<name>freeze_type</name>
<type>String</type>
<level>Basic</level>
<desc>冻结类型值</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallRateTagDetail</name>
<desc>天猫评价标签详细信息</desc>
<props>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>反应该标签的评价数量</desc>
</prop>
<prop>
<name>posi</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标签的极性：1正极 -1负极</desc>
</prop>
<prop>
<name>tag_name</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeRecord</name>
<desc>支付宝交易明细</desc>
<props>
<prop>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝订单号</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>in_out_type</name>
<type>String</type>
<level>Basic</level>
<desc>资金流入流程类型,in表示收入,out表示支出</desc>
</prop>
<prop>
<name>merchant_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>商户订单号</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单最后修改时间</desc>
</prop>
<prop>
<name>opposite_logon_id</name>
<type>String</type>
<level>Basic</level>
<desc>对方支付宝登录号，需要隐藏</desc>
</prop>
<prop>
<name>opposite_name</name>
<type>String</type>
<level>Basic</level>
<desc>对方姓名，需要隐藏</desc>
</prop>
<prop>
<name>opposite_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>对方支付宝账号</desc>
</prop>
<prop>
<name>order_from</name>
<type>String</type>
<level>Basic</level>
<desc>订单来源，为空查询所有来源。淘宝(taobao)，支付宝(alipay)，其它(other)</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态</desc>
</prop>
<prop>
<name>order_title</name>
<type>String</type>
<level>Basic</level>
<desc>订单的名称，描述订单的摘要信息，如交易的商品名称</desc>
</prop>
<prop>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>订单类型</desc>
</prop>
<prop>
<name>owner_logon_id</name>
<type>String</type>
<level>Basic</level>
<desc>本方支付宝登录号，需要隐藏</desc>
</prop>
<prop>
<name>owner_name</name>
<type>String</type>
<level>Basic</level>
<desc>本方姓名，需要隐藏</desc>
</prop>
<prop>
<name>owner_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>本方支付宝账号</desc>
</prop>
<prop>
<name>service_charge</name>
<type>Price</type>
<level>Basic</level>
<desc>订单服务费</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>订单总金额</desc>
</prop>
</props>
</struct>
<struct>
<name>AfterSale</name>
<desc>卖家设置售后服务对象</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<desc>id</desc>
</prop>
<prop>
<name>after_sale_name</name>
<type>String</type>
<level>Basic</level>
<desc>名称</desc>
</prop>
<prop>
<name>after_sale_path</name>
<type>String</type>
<level>Basic</level>
<desc>tfs地址</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundAgreeResult</name>
<desc>批量同意退款结果对象</desc>
<props>
<prop>
<name>code</name>
<type>Number</type>
<level>Basic</level>
<desc>消息码</desc>
</prop>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>退款结果</desc>
</prop>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>退款</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款id号</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallCat</name>
<desc>天猫搜索类目信息</desc>
<props>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索前台类目id</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>搜索前台类目名字</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallSearchItem</name>
<desc>天猫搜索结果数据结构</desc>
<props>
<prop>
<name>fast_post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>邮费</desc>
</prop>
<prop>
<name>is_cod</name>
<type>Number</type>
<level>Basic</level>
<desc>是否货到付款</desc>
</prop>
<prop>
<name>is_promotion</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否折扣</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索宝贝的数字id</desc>
</prop>
<prop>
<name>location</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的宝贝所在地</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的卖家昵称</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>搜索宝贝的一口价</desc>
</prop>
<prop>
<name>price_with_rate</name>
<type>Price</type>
<level>Basic</level>
<desc>搜索宝贝的一口价折扣价</desc>
</prop>
<prop>
<name>seller_loc</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的卖家所在地</desc>
</prop>
<prop>
<name>shipping</name>
<type>Number</type>
<level>Basic</level>
<desc>是否免邮</desc>
</prop>
<prop>
<name>sold</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的已售数量</desc>
</prop>
<prop>
<name>spu_id</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索宝贝的spuid</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的标题</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝url</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索宝贝的卖家数字id</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoPdu</name>
<desc>产品分销商属性</desc>
<props>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
<prop>
<name>distributor_name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商用户名</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>quantity_agent</name>
<type>Number</type>
<level>Basic</level>
<desc>产品代销配额库存</desc>
</prop>
<prop>
<name>sku_properties</name>
<type>String</type>
<level>Basic</level>
<desc>产品销售属性值</desc>
</prop>
</props>
</struct>
<struct>
<name>TbkItem</name>
<desc>淘宝客商品</desc>
<props>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<desc>推广点击url</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品url</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝客商品数字id</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家id</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺url</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品title 宝贝名称</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>30天内交易量</desc>
</prop>
</props>
</struct>
<struct>
<name>RdsDbInfo</name>
<desc>rds创建、查询、删除返回结果数据结构</desc>
<props>
<prop>
<name>charset</name>
<type>String</type>
<level>Basic</level>
<desc>数据库编码</desc>
</prop>
<prop>
<name>comment</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>db_id</name>
<type>String</type>
<level>Basic</level>
<desc>数据库id</desc>
</prop>
<prop>
<name>db_name</name>
<type>String</type>
<level>Basic</level>
<desc>数据库名称</desc>
</prop>
<prop>
<name>db_status</name>
<type>String</type>
<level>Basic</level>
<desc>数据库状态 0：创建中 ；1：激活；3：正在删除</desc>
</prop>
<prop>
<name>db_type</name>
<type>String</type>
<level>Basic</level>
<desc>数据库类型，mysql或者mssql</desc>
</prop>
<prop>
<name>instance_id</name>
<type>String</type>
<level>Basic</level>
<desc>rds实例id</desc>
</prop>
<prop>
<name>instance_name</name>
<type>String</type>
<level>Basic</level>
<desc>rds实例名</desc>
</prop>
<prop>
<name>instance_type</name>
<type>String</type>
<level>Basic</level>
<desc>rds实例类型,s:共享型，x:专享型</desc>
</prop>
<prop>
<name>max_account</name>
<type>String</type>
<level>Basic</level>
<desc>最大帐号数，1个数据库最多可以创建的账户数目</desc>
</prop>
<prop>
<name>password</name>
<type>String</type>
<level>Basic</level>
<desc>数据库登录密码</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
<prop>
<name>user_name</name>
<type>String</type>
<level>Basic</level>
<desc>登录数据库的帐号</desc>
</prop>
</props>
</struct>
<struct>
<name>TbkShop</name>
<desc>淘宝客店铺</desc>
<props>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺推广URL</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺logo</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名称</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺地址</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallMinisite</name>
<desc>天猫搜索Minisite信息</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺id</desc>
</prop>
<prop>
<name>promotions</name>
<type>String</type>
<level>Basic</level>
<desc>店铺优惠信息</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名字</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺类型</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallBrand</name>
<desc>天猫搜索品牌信息</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索品牌id</desc>
</prop>
<prop>
<name>brand_name</name>
<type>String</type>
<level>Basic</level>
<desc>搜索品牌名字</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallTmCat</name>
<desc>天猫搜索特卖类目信息（查询二级类目用）</desc>
<props>
<prop>
<name>sub_cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>特卖二级类目ID</desc>
</prop>
<prop>
<name>sub_cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>特卖二级类目名称</desc>
</prop>
</props>
</struct>
<struct>
<name>TmallSearchTmItem</name>
<desc>天猫品牌特卖搜索结果数据结构</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属品牌ID</desc>
</prop>
<prop>
<name>brand_name</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝所属品牌名称</desc>
</prop>
<prop>
<name>comment_num</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝评论数</desc>
</prop>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝佣金比（%）</desc>
</prop>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝url</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>搜索宝贝原价</desc>
</prop>
<prop>
<name>promotion_price</name>
<type>Price</type>
<level>Basic</level>
<desc>搜索宝贝特卖价</desc>
</prop>
<prop>
<name>tag_hot</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝热门标签名称</desc>
</prop>
<prop>
<name>tag_lq</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝限量标签名称</desc>
</prop>
<prop>
<name>tag_new</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝新品标签名称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>搜索宝贝的标题</desc>
</prop>
<prop>
<name>track_iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品id（具有跟踪效果）代替原来的num_iid  &lt;a href="http://dev.open.taobao.com/bbs/read.php?tid=24323"&gt;详细说明&lt;/a&gt;</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索宝贝的已售数量 （月销量）</desc>
</prop>
</props>
</struct>
<struct>
<name>SpmResult</name>
<desc>Appkey的站点导购数据</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<desc>appkey</desc>
</prop>
<prop>
<name>date</name>
<type>Date</type>
<level>Basic</level>
<desc>日期</desc>
</prop>
<prop>
<name>spm_modules</name>
<type>TopSpm</type>
<level>Object Array</level>
<desc>该APP所使用的SPM第四位的报表数据</desc>
</prop>
<prop>
<name>spm_pages</name>
<type>TopSpm</type>
<level>Object Array</level>
<desc>该APP所使用的SPM第三位的报表数据</desc>
</prop>
<prop>
<name>spm_site</name>
<type>TopSpm</type>
<level>Object</level>
<desc>该APP的整体报表数据</desc>
</prop>
</props>
</struct>
<struct>
<name>TopSpm</name>
<desc>提供查询APPKey为淘宝带来成交以及流量</desc>
<props>
<prop>
<name>alipay_deal_amount</name>
<type>String</type>
<level>Basic</level>
<desc>为淘宝带来的支付宝成交金额</desc>
</prop>
<prop>
<name>alipay_deal_count</name>
<type>Number</type>
<level>Basic</level>
<desc>为淘宝带来的支付宝成交笔数</desc>
</prop>
<prop>
<name>alipay_uv</name>
<type>Number</type>
<level>Basic</level>
<desc>为淘宝带来的支付宝成交人数</desc>
</prop>
<prop>
<name>module</name>
<type>String</type>
<level>Basic</level>
<desc>SPM第四位编码（默认为TOP系统自动生成的0-9数字，ISV可以自行更改编码，但建议使用数字）</desc>
</prop>
<prop>
<name>page</name>
<type>String</type>
<level>Basic</level>
<desc>SPM第三位编码（默认为TOP系统自动生成的0-9数字，ISV可以自行更改编码，但建议使用数字）</desc>
</prop>
<prop>
<name>pv</name>
<type>Number</type>
<level>Basic</level>
<desc>为淘宝带来的PV</desc>
</prop>
<prop>
<name>uv</name>
<type>Number</type>
<level>Basic</level>
<desc>为淘宝带来的UV</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsPartner</name>
<desc>查询揽送范围之内的物流公司信息</desc>
<props>
<prop>
<name>carriage</name>
<type>CarriageDetail</type>
<level>Object</level>
<desc>物流公司揽收和资费详细信息</desc>
</prop>
<prop>
<name>cover_remark</name>
<type>String</type>
<level>Basic</level>
<desc>揽收说明信息</desc>
</prop>
<prop>
<name>partner</name>
<type>PartnerDetail</type>
<level>Object</level>
<desc>物流公司详细信息</desc>
</prop>
<prop>
<name>uncover_remark</name>
<type>String</type>
<level>Basic</level>
<desc>不可送达的说明信息</desc>
</prop>
</props>
</struct>
<struct>
<name>TicketItemProcessResult</name>
<desc>门票商品操作结果</desc>
<props>
<prop>
<name>broken</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品操作流程是否被迫终止。 
如果broken==false则表示成功发布商品，则通过item_id字段获取新生成商品id； 
如果broken==true则表示发布商品遇到问题，则通过broken_reasons字段获取到失败原因。</desc>
</prop>
<prop>
<name>broken_reasons</name>
<type>String</type>
<level>Basic Array</level>
<desc>操作商品遇到的错误原因</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>成功操作的商品标识</desc>
</prop>
</props>
</struct>
<struct>
<name>Promotion</name>
<desc>商品优惠策略详情</desc>
<props>
<prop>
<name>decrease_num</name>
<type>Number</type>
<level>Basic</level>
<desc>减价件数，1只减一件，0表示多件</desc>
</prop>
<prop>
<name>discount_type</name>
<type>String</type>
<level>Basic</level>
<desc>优惠类型，PRICE表示按价格优惠，DISCOUNT表示按折扣优惠</desc>
</prop>
<prop>
<name>discount_value</name>
<type>String</type>
<level>Basic</level>
<desc>优惠额度</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠结束日期</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>promotion_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠描述</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠ID</desc>
</prop>
<prop>
<name>promotion_title</name>
<type>String</type>
<level>Basic</level>
<desc>优惠标题，显示在宝贝详情页面的优惠图标的tip。</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠开始日期</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>优惠策略状态，ACTIVE表示有效，UNACTIVE表示无效</desc>
</prop>
<prop>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>对应的人群标签ID</desc>
</prop>
</props>
</struct>
<struct>
<name>TicketEtc</name>
<desc>门票商品电子凭证信息</desc>
<props>
<prop>
<name>association_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>auto_refund</name>
<type>Number</type>
<level>Basic</level>
<desc>商品电子凭证的自动退款比例-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>merchant_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>merchant_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品电子凭证的码商名-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>network_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>overdue_pay</name>
<type>Number</type>
<level>Basic</level>
<desc>商品电子凭证的过期退款比例-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>verification_pay</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品电子凭证是否核销打款-在门票商品为电子凭证时必选</desc>
</prop>
</props>
</struct>
<struct>
<name>TicketItem</name>
<desc>新门票类目商品信息</desc>
<props>
<prop>
<name>auction_point</name>
<type>Price</type>
<level>Basic</level>
<desc>商品返点比例（只对B卖家开放，单位为%）</desc>
</prop>
<prop>
<name>auction_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品状态（onsale：上架，instock：仓库）</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目标识</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在地-城市</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述</desc>
</prop>
<prop>
<name>err_msg</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的错误信息。针对get接口使用。</desc>
</prop>
<prop>
<name>etc</name>
<type>TicketEtc</type>
<level>Object</level>
<desc>商品电子凭证信息-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>have_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否有发票（有发票为true，没有发票为false）</desc>
</prop>
<prop>
<name>image_1</name>
<type>String</type>
<level>Basic</level>
<desc>商品主图</desc>
</prop>
<prop>
<name>image_2</name>
<type>String</type>
<level>Basic</level>
<desc>商品第一张多图</desc>
</prop>
<prop>
<name>image_3</name>
<type>String</type>
<level>Basic</level>
<desc>商品第二张多图</desc>
</prop>
<prop>
<name>image_4</name>
<type>String</type>
<level>Basic</level>
<desc>商品第三张多图</desc>
</prop>
<prop>
<name>image_5</name>
<type>String</type>
<level>Basic</level>
<desc>商品第四张多图</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的标识</desc>
</prop>
<prop>
<name>list_time</name>
<type>String</type>
<level>Basic</level>
<desc>商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的物流运费模板-在产品规格使用到物流时必选</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品（具有产品规格的）标识</desc>
</prop>
<prop>
<name>promoted_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否橱窗推荐（橱窗推荐；true，不推荐：false）</desc>
</prop>
<prop>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在地-省份</desc>
</prop>
<prop>
<name>shop_cats</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识</desc>
</prop>
<prop>
<name>skus</name>
<type>String</type>
<level>Basic</level>
<desc>参见taobao.ticket.item.add文档描述</desc>
</prop>
<prop>
<name>sub_stock_at_buy</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为拍下减库存（拍下减库存为true，付款减库存为false）</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品视频-视频标识由多媒体中相关接口获取</desc>
</prop>
<prop>
<name>vip_promoted</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否参与店铺会员打折</desc>
</prop>
</props>
</struct>
</structs>
<apis>
<api>
<name>taobao.uic.weiboprofile.update</name>
<desc>获取weiboprofile更新通知</desc>
<request>
<param>
<name>map</name>
<type>String</type>
<required>optional</required>
<desc>以map结构批量返回微博用户变更的属性。key:为新浪微博用户id,value:为该用户发生Profile变更的属性名，多个属性之间用逗号分隔，该接口一次最大接收条数不能超过100条。</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>1表示正常，2表示参数错误，3表示系统异常</desc>
</param>
</response>
</api>
<api>
<name>taobao.user.buyer.get</name>
<desc>查询买家信息API，只能买家类应用调用。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>只返回nick, avatar参数</desc>
</param>
</request>
<response>
<param>
<name>user</name>
<type>User</type>
<level>Object</level>
<desc>只返回nick,avatar参数</desc>
</param>
</response>
</api>
<api>
<name>taobao.user.get</name>
<desc>得到单个用户</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：User结构体中的所有字段；以半角逗号(,)分隔。需要用户授权才能获取用户对应的uid和user_id。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>用户昵称，如果昵称为中文，请使用UTF-8字符集对昵称进行URL编码。
&lt;br&gt;&lt;font color="red"&gt;注：在传入session的情况下,可以不传nick，表示取当前用户信息；否则nick必须传.&lt;br&gt;
自用型应用不需要传入nick
&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>user</name>
<type>User</type>
<level>Object</level>
<desc>用户信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.user.seller.get</name>
<desc>查询卖家用户信息（只能查询有店铺的用户） 只能卖家类应用调用。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>只返回user_id,nick,sex,seller_credit,type,has_more_pic,item_img_num,item_img_size,prop_img_num,prop_img_size,auto_repost,promoted_type,status,alipay_bind,consumer_protection,avatar,liangpin,sign_food_seller_promise,has_shop,is_lightning_consignment,has_sub_stock,is_golden_seller,vip_info,magazine_subscribe,vertical_market,online_gaming参数</desc>
</param>
</request>
<response>
<param>
<name>user</name>
<type>User</type>
<level>Object</level>
<desc>只返回user_id,nick,sex,seller_credit,type,has_more_pic,item_img_num,item_img_size,prop_img_num,prop_img_size,auto_repost,promoted_type,status,alipay_bind,consumer_protection,avatar,liangpin,sign_food_seller_promise,has_shop,is_lightning_consignment,has_sub_stock,is_golden_seller,vip_info,magazine_subscribe,vertical_market,online_gaming</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemcats.authorize.get</name>
<desc>查询B商家被授权品牌列表、类目列表和 c 商家新品类目列表</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有： 
brand.vid, brand.name,  
item_cat.cid, item_cat.name, item_cat.status,item_cat.sort_order,item_cat.parent_cid,item_cat.is_parent, 
xinpin_item_cat.cid,  
xinpin_item_cat.name,  
xinpin_item_cat.status, 
xinpin_item_cat.sort_order, 
xinpin_item_cat.parent_cid, 
xinpin_item_cat.is_parent</desc>
</param>
</request>
<response>
<param>
<name>seller_authorize</name>
<type>SellerAuthorize</type>
<level>Object</level>
<desc>里面有3个数组： 
Brand[]品牌列表, 
ItemCat[] 类目列表 
XinpinItemCat[] 针对于C卖家新品类目列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemcats.get</name>
<desc>获取后台供卖家发布商品的标准商品类目。</desc>
<request>
<param>
<name>cids</name>
<type>Number</type>
<required>special</required>
<max_list_size>1000</max_list_size>
<max_value>9223372036854775807</max_value>
<min_value>0</min_value>
<desc>商品所属类目ID列表，用半角逗号(,)分隔 例如:(18957,19562,) (cids、parent_cid至少传一个)&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表，见ItemCat，默认返回：cid,parent_cid,name,is_parent</desc>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<required>special</required>
<max_value>9223372036854775807</max_value>
<min_value>0</min_value>
<desc>父商品类目 id，0表示根节点, 传输该参数返回所有子类目。 (cids、parent_cid至少传一个)&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>增量类目信息,根据fields传入的参数返回相应的结果</desc>
</param>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间(如果取增量，会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemprops.get</name>
<desc>通过设置必要的参数，来获取商品后台标准类目属性，以及这些属性里面详细的属性值prop_values。</desc>
<request>
<param>
<name>attr_keys</name>
<type>String</type>
<required>optional</required>
<desc>属性的Key，支持多条，以“,”分隔</desc>
</param>
<param>
<name>child_path</name>
<type>String</type>
<required>optional</required>
<desc>类目子属性路径,由该子属性上层的类目属性和类目属性值组成,格式pid:vid;pid:vid.取类目子属性需要传child_path,cid</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目ID，如果只传cid，则只返回一级属性,通过taobao.itemcats.get获得叶子类目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表，见：ItemProp，默认返回：pid, name, must, multi, prop_values</desc>
</param>
<param>
<name>is_color_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否颜色属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
</param>
<param>
<name>is_enum_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否枚举属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)。如果返回true，属性值是下拉框选择输入，如果返回false，属性值是用户自行手工输入。</desc>
</param>
<param>
<name>is_input_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
</param>
<param>
<name>is_item_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否商品属性，这个属性只能放于发布商品时使用。可选值:true(是),false(否)</desc>
</param>
<param>
<name>is_key_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</param>
<param>
<name>is_sale_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</param>
<param>
<name>parent_pid</name>
<type>Number</type>
<required>optional</required>
<desc>父属性ID</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>optional</required>
<desc>属性id (取类目属性时，传pid，不用同时传PID和parent_pid)</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>获取类目的类型：1代表集市、2代表天猫&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>item_props</name>
<type>ItemProp</type>
<level>Object Array</level>
<desc>类目属性信息(如果是取全量或者增量，不包括属性值),根据fields传入的参数返回相应的结果</desc>
</param>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间(只有取全量或增量的时候会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.itempropvalues.get</name>
<desc>传入类目ID,必需是叶子类目，通过taobao.itemcats.get获取类目ID 
返回字段目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order 
作用:获取标准类目属性值</desc>
<request>
<param>
<name>attr_keys</name>
<type>String</type>
<required>optional</required>
<desc>属性的Key，支持多条，以“,”分隔</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目ID ,通过taobao.itemcats.get获得叶子类目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order</desc>
</param>
<param>
<name>pvs</name>
<type>String</type>
<required>special</required>
<desc>属性和属性值 id串，格式例如(pid1;pid2)或(pid1:vid1;pid2:vid2)或(pid1;pid2:vid2)</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>获取类目的类型：1代表集市、2代表天猫&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<desc>属性值,根据fields传入的参数返回相应的结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.aftersale.get</name>
<desc>查询用户设置的售后服务模板，仅返回标题和id</desc>
<response>
<param>
<name>after_sales</name>
<type>AfterSale</type>
<level>Object Array</level>
<desc>售后服务返回对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.add</name>
<desc>此接口用于新增一个商品  
商品所属的卖家是当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则新增商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
商品的运费承担方式和邮费设置有相关性，卖家承担运费不用设置邮费，买家承担运费需要设置邮费  
当关键属性值选择了“其他”的时候，需要输入input_pids和input_str商品才能添加成功。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： 
no_mark(不做类型标记) 
time_card(点卡软件代充) 
fee_card(话费软件代充)</desc>
</param>
<param>
<name>barcode</name>
<type>String</type>
<required>optional</required>
<desc>商品条形码</desc>
</param>
<param>
<name>change_prop</name>
<type>String</type>
<required>optional</required>
<desc>商品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1;
基础色只支持以下14种颜色：28335//绿色
28338//蓝色
90554//桔色
28324//黄色
28341//黑色
28320//白色
28326//红色
28329//紫色
3232480//粉红色
107121//透明
132069//褐色
28332//浅灰色
3232478//深灰色
130164//花色</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>此为货到付款运费模板的ID，对应的JAVA类型是long,如果COD卖家应用了货到付款运费模板，此值要进行设置。 
该字段已经废弃</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>desc_modules</name>
<type>String</type>
<required>optional</required>
<desc>商品描述模块化，模块列表，具体数据结构参见Item_Desc_Module。详细的使用方法可参考下面FAQ中说明。</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>food_security.contact</name>
<type>String</type>
<required>optional</required>
<desc>厂家联系方式</desc>
</param>
<param>
<name>food_security.design_code</name>
<type>String</type>
<required>optional</required>
<desc>产品标准号</desc>
</param>
<param>
<name>food_security.factory</name>
<type>String</type>
<required>optional</required>
<desc>厂名</desc>
</param>
<param>
<name>food_security.factory_site</name>
<type>String</type>
<required>optional</required>
<desc>厂址</desc>
</param>
<param>
<name>food_security.food_additive</name>
<type>String</type>
<required>optional</required>
<desc>食品添加剂</desc>
</param>
<param>
<name>food_security.health_product_no</name>
<type>String</type>
<required>optional</required>
<desc>健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；</desc>
</param>
<param>
<name>food_security.mix</name>
<type>String</type>
<required>optional</required>
<desc>配料表</desc>
</param>
<param>
<name>food_security.period</name>
<type>String</type>
<required>optional</required>
<desc>保质期</desc>
</param>
<param>
<name>food_security.plan_storage</name>
<type>String</type>
<required>optional</required>
<desc>储藏方法</desc>
</param>
<param>
<name>food_security.prd_license_no</name>
<type>String</type>
<required>optional</required>
<desc>生产许可证号</desc>
</param>
<param>
<name>food_security.product_date_end</name>
<type>String</type>
<required>optional</required>
<desc>生产结束日期,格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.product_date_start</name>
<type>String</type>
<required>optional</required>
<desc>生产开始日期，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_end</name>
<type>String</type>
<required>optional</required>
<desc>进货结束日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_start</name>
<type>String</type>
<required>optional</required>
<desc>进货开始日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.supplier</name>
<type>String</type>
<required>optional</required>
<desc>供货商</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id  
如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee）</desc>
</param>
<param>
<name>global_stock_country</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>全球购商品采购地（地区/国家）,默认值只在全球购商品采购地（库存类型选择情况生效），地区国家值为（美国, 香港, 日本, 英国, 新西兰, 德国, 韩国, 荷兰, 澳洲, 法国, 意大利, 台湾, 澳门, 加拿大, 瑞士, 西班牙, 泰国, 新加坡, 马来西亚, 菲律宾, 其他）&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>global_stock_type</name>
<type>String</type>
<required>optional</required>
<desc>全球购商品采购地（库存类型）， 
有两种库存类型：现货和代购 
参数值为1时代表现货，值为2时代表代购。注意：使用时请与 全球购商品采购地（地区/国家）配合使用</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;默认值:false(不保修)</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品主图片。类型:JPG,GIF;最大长度:500K&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价(降价)幅度。如果为0，代表系统代理幅度。对于增价拍和荷兰拍来说是加价幅度，对于降价拍来说是降价幅度。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货</desc>
</param>
<param>
<name>is_offline</name>
<type>String</type>
<required>optional</required>
<desc>是否是线下商品。 1：线上商品（默认值）； 2：线上或线下商品； 3：线下商品。</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:add-xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置该参数值或设置为false效果一致。</desc>
</param>
<param>
<name>item_size</name>
<type>String</type>
<required>optional</required>
<desc>表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。 
在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m) 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）</desc>
</param>
<param>
<name>item_weight</name>
<type>String</type>
<required>optional</required>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg。 
只能传入数值类型（包含小数），不能带单位，单位默认为kg。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
</param>
<param>
<name>locality_life.choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄</desc>
</param>
<param>
<name>locality_life.expirydate</name>
<type>String</type>
<required>optional</required>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期; 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</param>
<param>
<name>locality_life.merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick</desc>
</param>
<param>
<name>locality_life.network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID</desc>
</param>
<param>
<name>locality_life.onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数</desc>
</param>
<param>
<name>locality_life.refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例， 
百分比%前的数字,1-100的正整数值</desc>
</param>
<param>
<name>locality_life.refundmafee</name>
<type>String</type>
<required>optional</required>
<desc>退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)</desc>
</param>
<param>
<name>locality_life.verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款  
1代表核销打款 0代表非核销打款</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>required</required>
<desc>所在地城市。如杭州 。</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>required</required>
<desc>所在地省份。如浙江</desc>
</param>
<param>
<name>newprepay</name>
<type>String</type>
<required>optional</required>
<desc>该宝贝是否支持【7天无理由退货】，卖家选择的值只是一个因素，最终以类目和选择的属性条件来确定是否支持7天。填入字符0，表示不支持；未填写或填人字符1，表示支持7天无理由退货；</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<max_value>900000000</max_value>
<min_value>0</min_value>
<desc>商品数量。取值范围:0-900000000的整数。且需要等于Sku所有数量的和。
拍卖商品中增加拍只能为1，荷兰拍要在[2,500)范围内。&lt;br /&gt; 支持最大值为：900000000&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是64个字节</desc>
</param>
<param>
<name>paimai_info.deposit</name>
<type>Number</type>
<required>optional</required>
<desc>拍卖宝贝的保证金。对于增价拍和荷兰拍来说保证金有两种模式：淘宝默认模式（首次出价金额的10%），自定义固定保证金（固定冻结金额只能输入不超过30万的正整数），并且保证金只冻结1次。对于降价拍来说保证金只有淘宝默认的（竞拍价格的10% * 竞拍数量），并且每次出价都需要冻结保证金。 
对于拍卖宝贝来说，保证金是必须的，但是默认使用淘宝默认保证金模式，只有用户需要使用自定义固定保证金的时候才需要使用到这个参数，如果该参数不传或传入0则代表使用默认。</desc>
</param>
<param>
<name>paimai_info.interval</name>
<type>Number</type>
<required>optional</required>
<max_value>60</max_value>
<min_value>1</min_value>
<desc>降价拍宝贝的降价周期(分钟)。降价拍宝贝的价格每隔paimai_info.interval时间会下降一次increment。&lt;br /&gt; 支持最大值为：60&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.mode</name>
<type>Number</type>
<required>optional</required>
<max_value>3</max_value>
<min_value>1</min_value>
<desc>拍卖商品选择的拍卖类型，拍卖类型包括三种：增价拍(1)，荷兰拍(2)和降价拍(3)。&lt;br /&gt; 支持最大值为：3&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.reserve</name>
<type>Price</type>
<required>optional</required>
<desc>降价拍宝贝的保留价。对于降价拍来说，paimai_info.reserve必须大于0，且小于price-increment，而且（price-paimai_info.reserve）/increment的计算结果必须为整数</desc>
</param>
<param>
<name>paimai_info.valid_hour</name>
<type>Number</type>
<required>optional</required>
<max_value>48</max_value>
<min_value>1</min_value>
<desc>自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：48&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.valid_minute</name>
<type>Number</type>
<required>optional</required>
<max_value>59</max_value>
<min_value>0</min_value>
<desc>自定义销售周期的分钟数。拍卖宝贝可以自定义销售周期，这里是指定销售周期的分钟数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：59&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.template.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。 
拍卖商品对应的起拍价。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>800</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过800字节&lt;br /&gt; 支持最大长度为：800&lt;br /&gt; 支持的最大列表长度为：800</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值</desc>
</param>
<param>
<name>scenic_ticket_book_cost</name>
<type>String</type>
<required>optional</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>景区门票在选择订金支付时候，需要交的预订费。传入的值是1到20之间的数值，小数点后最多可以保留两位（多余的部分将做四舍五入的处理）。这个数值表示的是预订费的比例，最终的预订费为 scenic_ticket_book_cost乘一口价除以100</desc>
</param>
<param>
<name>scenic_ticket_pay_way</name>
<type>Number</type>
<required>optional</required>
<desc>景区门票类宝贝发布时候，当卖家签订了支付宝代扣协议时候，需要选择支付方式：全额支付和订金支付。当scenic_ticket_pay_way为1时表示全额支付，为2时表示订金支付</desc>
</param>
<param>
<name>sell_point</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>商品卖点信息，最长150个字符。天猫商家和集市卖家都可用。&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_barcode</name>
<type>String</type>
<required>optional</required>
<desc>sku层面的条形码，多个SKU情况，与SKU价格库存格式类似，用逗号分隔</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… 
sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:一个SKU的pid1:vid;pid2:vid,多个sku之间属性用逗号分隔。该字段内的销售属性（自定义的除外）也需要在props字段填写。sku的销售属性需要一同选取，如:颜色，尺寸。如果新增商品包含了sku，则此字段一定要传入。这个字段的长度要控制在512个字节以内。
如果有自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>Sku的数量串，结构如：num1,num2,num3 如：2,3</desc>
</param>
<param>
<name>sku_spec_ids</name>
<type>String</type>
<required>optional</required>
<desc>此参数暂时不起作用</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>required</required>
<desc>新旧程度。可选值：new(新)，second(二手)，unused(闲置)。B商家不能发布二手商品。 
如果是二手商品，特定类目下属性里面必填新旧成色属性</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改
集市卖家默认拍下减库存;
商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>120</max_length>
<desc>宝贝标题。不能超过30字符，受违禁词控制。天猫图书管控类目最大允许120字符；&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的。 
拍卖商品发布时需要附加拍卖商品信息：拍卖类型(paimai_info.mode，拍卖类型包括三种：增价拍[1]，荷兰拍[2]以及降价拍[3])，商品数量(num)，起拍价(price)，价格幅度(increament)，保证金(paimai_info.deposit)。另外拍卖商品支持自定义销售周期，通过paimai_info.valid_hour和paimai_info.valid_minute来指定。对于降价拍来说需要设置降价周期(paimai_info.interval)和拍卖保留价(paimai_info.reserve)。 
注意：通过taobao.item.get接口获取拍卖信息时，会返回除了valid_hour和valid_minute之外的所有拍卖信息。</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;默认值:14</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构,仅有numIid和created返回</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.anchor.get</name>
<desc>根据类目id和宝贝描述规范化打标类型获取该类目可用的宝贝描述模块中的锚点</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>对应类目编号</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<max_value>1</max_value>
<min_value>-1</min_value>
<desc>宝贝模板类型是人工打标还是自动打标：人工打标为1，自动打标为0.人工和自动打标为-1.&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：-1</desc>
</param>
</request>
<response>
<param>
<name>anchor_modules</name>
<type>IdsModule</type>
<level>Object Array</level>
<desc>宝贝描述规范化可使用打标模块的锚点信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的宝贝描述模板结果数目</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.barcode.update</name>
<desc>通过该接口，将商品以及SKU上得条形码信息补全</desc>
<request>
<param>
<name>item_barcode</name>
<type>String</type>
<required>optional</required>
<desc>商品条形码，如果不用更新，可选择不填</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>被更新商品的ID</desc>
</param>
<param>
<name>sku_barcodes</name>
<type>String</type>
<required>optional</required>
<desc>SKU维度的条形码，和sku_ids字段一一对应，中间以英文逗号分隔</desc>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<required>optional</required>
<desc>被更新SKU的ID列表，中间以英文逗号进行分隔。如果没有SKU或者不需要更新SKU的条形码，不需要设置</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.bseller.add</name>
<desc>淘宝助理提供的发布商城商品接口，在发布时 先查询是否有这个产品，有则将商品绑定到该产品上发布；如果没有这个产品，自动帮用户新建产品，再将商品绑定到该产品上发布。错误码参考taobao.product.add、taobao.product.img.upload、taobao.product.propimg.upload、taobao.item.add</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>required</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
*no_mark(不做类型标记)  
*time_card(点卡软件代充)  
*fee_card(话费软件代充)</desc>
</param>
<param>
<name>auto_repost</name>
<type>Boolean</type>
<required>optional</required>
<desc>自动重发。可选值:true,false;默认值:false(不重发)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID</desc>
</param>
<param>
<name>color_prop_and_pic_urls</name>
<type>String</type>
<required>optional</required>
<desc>颜色销售属性和对应销售属性图片url列表，格式为"颜色属性pid,颜色属性值vid,颜色图片url"，多个颜色用分号分隔，例如：125,567,http://img05.daily.taobao.net/bao/uploaded/i5/T16.lbXl02XXXmYQgY_030226.jpg;566,578,http://img05.daily.taobao.net/bao/uploaded/i5/T1zphcXcVuXXbDdSva_122254.jpg;</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0-100000000;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-10000.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>features</name>
<type>String</type>
<required>optional</required>
<max_length>4000</max_length>
<desc>宝贝特征值，格式为： 
【key1:value1;key2:value2;key3:value3;】，key和value用【:】分隔，key&amp;value之间用【;】分隔，只有在Top支持的特征值才能保存到宝贝上，目前支持的Key列表为：mysize_tp&lt;br /&gt; 支持最大长度为：4000&lt;br /&gt; 支持的最大列表长度为：4000</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id  
如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee</desc>
</param>
<param>
<name>global_stock_type</name>
<type>String</type>
<required>optional</required>
<desc>针对全球购卖家的库存类型业务， 
有两种库存类型：现货和代购 
参数值为1时代表现货，值为2时代表代购 
如果传值为这两个值之外的值，会报错; 
如果不是全球购卖家，这两个值即使设置也不会处理</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;默认值:false(不保修)</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度。如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>inner_shop_auction_template_id</name>
<type>Number</type>
<required>optional</required>
<desc>用户的内店装修模板id。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D商品</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外部网店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝显示</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置该参数值或设置为false效果一致。</desc>
</param>
<param>
<name>item_size</name>
<type>String</type>
<required>optional</required>
<desc>表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。 该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。 在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m)</desc>
</param>
<param>
<name>item_spec_prop</name>
<type>String</type>
<required>optional</required>
<desc>特定种类的商品约束，以key：value的形式传入，以分号间隔。如食品安全需要输入：food_security.prd_license_no：12345;food_security.design_code：444;...。这些key：value可参考taobao.item.add的对应输入参数。</desc>
</param>
<param>
<name>item_weight</name>
<type>String</type>
<required>optional</required>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg。 只能传入数值类型（包含小数），不能带单位，单位默认为kg。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
</param>
<param>
<name>locality_life.choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄</desc>
</param>
<param>
<name>locality_life.expirydate</name>
<type>String</type>
<required>optional</required>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期; 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</param>
<param>
<name>locality_life.merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick</desc>
</param>
<param>
<name>locality_life.network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID</desc>
</param>
<param>
<name>locality_life.onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数</desc>
</param>
<param>
<name>locality_life.refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例， 
百分比%前的数字,1-100的正整数值</desc>
</param>
<param>
<name>locality_life.verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款  
1代表核销打款 0代表非核销打款</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>required</required>
<desc>所在地城市。如杭州 。具体可以用taobao.areas.get取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>required</required>
<desc>所在地省份。如浙江，具体可以用taobao.areas.get取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>outer_shop_auction_template_id</name>
<type>Number</type>
<required>optional</required>
<desc>用户的外店装修模板id</desc>
</param>
<param>
<name>pic_url</name>
<type>String</type>
<required>optional</required>
<desc>商品主图在图片空间的完整url。该图片必须属于当前用户。</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-10000.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>511</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过511字节&lt;br /&gt; 支持最大长度为：511&lt;br /&gt; 支持的最大列表长度为：511</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值</desc>
</param>
<param>
<name>second_kill</name>
<type>String</type>
<required>optional</required>
<desc>秒杀商品类型。暂时不能使用。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型 
web_only(只能通过web网络秒杀) 
wap_only(只能通过wap网络秒杀) 
web_and_wap(既能通过web秒杀也能通过wap秒杀)</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids可写成：“, ,”</desc>
</param>
<param>
<name>sku_prices</name>
<type>Price</type>
<required>optional</required>
<max_list_size>1000</max_list_size>
<desc>Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid,多个sku之间用逗号分隔。该字段内的销售属性(自定义的除外)也需要在props字段填写 . 规则：如果该SKU存在旧商品，则修改；否则新增Sku。如果更新时有对Sku进行操作，则Sku的properties一定要传入。如果存在自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText，其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>Sku的数量串，结构如：num1,num2,num3 如：2,3</desc>
</param>
<param>
<name>sku_spec_ids</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格信息。</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>required</required>
<desc>新旧程度。可选值：new(新)，second(二手)，unused(闲置)。B商家不能发布二手商品。 
如果是二手商品，特定类目下属性里面必填新旧成色属性</desc>
</param>
<param>
<name>sub_pic_urls</name>
<type>String</type>
<required>optional</required>
<desc>1~4个淘宝图片空间的图片url列表，“,”分隔，做为商品的副图</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持;0(默认)不更改</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;默认值:14</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>新发布的商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.cseller.add</name>
<desc>提供的发布集市商品接口，接口参数除了包括taobao.item.vip.add的参数外，新增一个sub_pic_paths参数，为图片空间的url，本方法会在发布商品同时，将这些图片作为副图关联到新商品。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
*no_mark(不做类型标记)  
*time_card(点卡软件代充)  
*fee_card(话费软件代充)</desc>
</param>
<param>
<name>auto_repost</name>
<type>Boolean</type>
<required>optional</required>
<desc>自动重发。可选值:true,false;默认值:false(不重发)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0-100000000;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-10000.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>features</name>
<type>String</type>
<required>optional</required>
<max_length>4000</max_length>
<desc>宝贝特征值，格式为： 
【key1:value1;key2:value2;key3:value3;】，key和value用【:】分隔，key&amp;value之间用【;】分隔，只有在Top支持的特征值才能保存到宝贝上，目前支持的Key列表为：mysize_tp&lt;br /&gt; 支持最大长度为：4000&lt;br /&gt; 支持的最大列表长度为：4000</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id  
如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee</desc>
</param>
<param>
<name>global_stock_type</name>
<type>String</type>
<required>optional</required>
<desc>针对全球购卖家的库存类型业务， 
有两种库存类型：现货和代购 
参数值为1时代表现货，值为2时代表代购 
如果传值为这两个值之外的值，会报错; 
如果不是全球购卖家，这两个值即使设置也不会处理</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;默认值:false(不保修)</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度。如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>inner_shop_auction_template_id</name>
<type>Number</type>
<required>optional</required>
<desc>用户的内店装修模板id。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D商品</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外部网店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝显示</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置该参数值或设置为false效果一致。</desc>
</param>
<param>
<name>item_size</name>
<type>String</type>
<required>optional</required>
<desc>表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。 该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。 在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m) 该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）</desc>
</param>
<param>
<name>item_spec_prop</name>
<type>String</type>
<required>optional</required>
<desc>特定种类的商品约束，以key：value的形式传入，以分号间隔。如食品安全需要输入：food_security.prd_license_no：12345;food_security.design_code：444;...。这些key：value可参考taobao.item.add的对应输入参数。</desc>
</param>
<param>
<name>item_weight</name>
<type>String</type>
<required>optional</required>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg。 只能传入数值类型（包含小数），不能带单位，单位默认为kg。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
</param>
<param>
<name>locality_life.choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄</desc>
</param>
<param>
<name>locality_life.expirydate</name>
<type>String</type>
<required>optional</required>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期; 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</param>
<param>
<name>locality_life.merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick</desc>
</param>
<param>
<name>locality_life.network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID</desc>
</param>
<param>
<name>locality_life.onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数</desc>
</param>
<param>
<name>locality_life.refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例， 
百分比%前的数字,1-100的正整数值</desc>
</param>
<param>
<name>locality_life.verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款  
1代表核销打款 0代表非核销打款</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>required</required>
<desc>所在地城市。如杭州 。具体可以用taobao.areas.get取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>required</required>
<desc>所在地省份。如浙江，具体可以用taobao.areas.get取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>outer_shop_auction_template_id</name>
<type>Number</type>
<required>optional</required>
<desc>用户的外店装修模板id</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-10000.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>511</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过511字节&lt;br /&gt; 支持最大长度为：511&lt;br /&gt; 支持的最大列表长度为：511</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值</desc>
</param>
<param>
<name>second_kill</name>
<type>String</type>
<required>optional</required>
<desc>秒杀商品类型。暂时不能使用。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型 
web_only(只能通过web网络秒杀) 
wap_only(只能通过wap网络秒杀) 
web_and_wap(既能通过web秒杀也能通过wap秒杀)</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids可写成：“, ,”</desc>
</param>
<param>
<name>sku_prices</name>
<type>Price</type>
<required>optional</required>
<max_list_size>1000</max_list_size>
<desc>Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid,多个sku之间用逗号分隔。该字段内的销售属性(自定义的除外)也需要在props字段填写 . 规则：如果该SKU存在旧商品，则修改；否则新增Sku。如果更新时有对Sku进行操作，则Sku的properties一定要传入。如果存在自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText，其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>Sku的数量串，结构如：num1,num2,num3 如：2,3</desc>
</param>
<param>
<name>sku_spec_ids</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格信息。</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>required</required>
<desc>新旧程度。可选值：new(新)，second(二手)，unused(闲置)。B商家不能发布二手商品。 
如果是二手商品，特定类目下属性里面必填新旧成色属性</desc>
</param>
<param>
<name>sub_pic_paths</name>
<type>String</type>
<required>optional</required>
<desc>1~4个淘宝图片空间的图片相对url列表，“,”分隔，做为商品的副图</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持;0(默认)不更改</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;默认值:14</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>新发布的商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.cspu.move</name>
<desc>ISV传入商品和sku与cspu的映射信息，套餐对应sku的映射信息，自动完成达尔文老数据的挂接，返回商品信息</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id，必填</desc>
</param>
<param>
<name>sku_cspu_mapping</name>
<type>String</type>
<required>optional</required>
<desc>如果商品存在sku信息，必须输入sku和cspu的映射关系，可以支持多个skuID对应一个cspuID。“-1”代替删除sku。反之不能填写</desc>
</param>
<param>
<name>sku_mealproperty_mapping</name>
<type>String</type>
<required>optional</required>
<desc>商品有SKU信息并且类目配置了营销属性（如套餐），则必须填写sku和套餐的映射关系。并且sku套餐信息和sku_cspu_mapping传入的sku_id信息保持一致。反之，不需要填写，</desc>
</param>
<param>
<name>spu_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品需要挂接的目产品ID，如果不填默认不修改产品ID,即商品本身对应的产品ID</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.delete</name>
<desc>删除单条商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被删除商品的相关信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.ebook.serial.add</name>
<desc>调用该接口 会创建一个二级类目为网络文学原创电子书商品</desc>
<request>
<param>
<name>author</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>作者。长度不能超过60个字符&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>copyright_end</name>
<type>Date</type>
<required>required</required>
<desc>版权到期时间，如2013-08-06</desc>
</param>
<param>
<name>copyright_files</name>
<type>byte[]</type>
<required>required</required>
<max_length>2097152</max_length>
<desc>版权文件。不得小于350*500；类型:jpg,png；大小不能超过2M&lt;br /&gt; 支持的文件类型为：jpg,png&lt;br /&gt; 支持的最大列表长度为：2097152</desc>
</param>
<param>
<name>cover</name>
<type>byte[]</type>
<required>required</required>
<max_length>2097152</max_length>
<desc>商品主图片。类型:JPG,PNG;最大:2M&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：2097152</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>书名。长度不能超过60个字符&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是512个字节</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>不能为0；如：0.50元/章 或者 0.50元/千字；取值范围:0.01-9999.99;精确到2位小数;单位:元。如:5.07，表示:5元7分.</desc>
</param>
<param>
<name>relation_link</name>
<type>String</type>
<required>optional</required>
<desc>相关链接。不超过128个字符</desc>
</param>
<param>
<name>sell_way</name>
<type>Number</type>
<required>required</required>
<desc>售卖方式。目前取值范围0、1； 
0：按章节售卖 1：按千字售卖</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>120</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构,仅有numIid和created返回</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.ebook.serial.update</name>
<desc>更新连载电子书信息</desc>
<request>
<param>
<name>author</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>作者。长度不能超过60个字符&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cover</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品主图片。类型:JPG,PNG;最大:2M&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>宝贝数字id</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>书名。长度不能超过60个字符&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是512个字节</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>不能为0；如：0.50元/章 或者 0.50元/千字；取值范围:0.01-9999.99;精确到2位小数;单位:元。如:5.07，表示:5元7分.</desc>
</param>
<param>
<name>relation_link</name>
<type>String</type>
<required>optional</required>
<desc>相关链接。不超过128个字符</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>120</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.get</name>
<desc>获取单个商品的详细信息  
卖家未登录时只能获得这个商品的公开数据，卖家登录后可以获取商品的所有数据</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的商品对象字段，如title,price,desc_modules等。可选值：Item商品结构体中所有字段均可返回；多个字段用“,”分隔。&lt;br&gt;新增返回字段：item_weight(商品的重量，格式为数字，包含小数)、item_size(商品的体积，格式为数字，包含小数)、change_prop（商品基础色数据）</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>商品数字ID&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>track_iid</name>
<type>String</type>
<required>special</required>
<desc>商品数字ID(带有跟踪效果)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.img.delete</name>
<desc>删除itemimg_id 所指定的商品图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
itemimg_id对应的图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>商品图片ID</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.img.upload</name>
<desc>添加一张商品图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
如果更新图片需要设置itemimg_id，且该itemimg_id的图片记录需要属于传入的num_iid对应的商品。如果新增图片则不用设置  
商品图片有数量和大小上的限制，根据卖家享有的服务（如：卖家订购了多图服务等），商品图片数量限制不同。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>商品图片内容类型:JPG,GIF;最大:500KB 。支持的文件类型：gif,jpg,jpeg,png&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png,bmp&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否将该图片设为主图,可选值:true,false;默认值:false(非主图)</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.joint.img</name>
<desc>* 关联一张商品图片到num_iid指定的商品中 
    * 传入的num_iid所对应的商品必须属于当前会话的用户 
    * 商品图片关联在卖家身份和图片来源上的限制，卖家要是B卖家或订购了多图服务才能关联图片，并且图片要来自于卖家自己的图片空间才行 
    * 商品图片数量有限制。不管是上传的图片还是关联的图片，他们的总数不能超过一定限额</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>上传的图片是否关联为商品主图（如果需更新主图，则需要传人true）</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>required</required>
<desc>图片URL,图片空间图片的相对地址</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.joint.propimg</name>
<desc>* 关联一张商品属性图片到num_iid指定的商品中 
    * 传入的num_iid所对应的商品必须属于当前会话的用户 
    * 图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的 
    * 商品图片关联在卖家身份和图片来源上的限制，卖家要是B卖家或订购了多图服务才能关联图片，并且图片要来自于卖家自己的图片空间才行 
    * 商品图片数量有限制。不管是上传的图片还是关联的图片，他们的总数不能超过一定限额，最多不能超过24张（每个颜色属性都有一张）</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>required</required>
<desc>图片地址(传入图片相对地址即可,即不需包含 http://img02.taobao.net/bao/uploaded )</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>属性列表。调用taobao.itemprops.get获取，属性必须是颜色属性，格式:pid:vid。</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>属性图片对象信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.price.update</name>
<desc>更新商品价格</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品图片。类型:JPG,GIF;最大长度:500k&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度 如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记</desc>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否替换sku</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>上架时间。不论是更新架下的商品还是出售中的商品，如果这个字段小于当前时间则直接上架商品，并且上架的时间为更新商品的时间，此时item.is_timing为false，如果大于当前时间则宝贝会下架进入定时上架的宝贝中。</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在地城市。如杭州 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在地省份。如浙江 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过512字节</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid。该字段内的销售属性也需要在props字段填写 。如果更新时有对Sku进行操作，则Sku的properties一定要传入。</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>宝贝标题. 不能超过60字符,受违禁词控制&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.propimg.delete</name>
<desc>删除propimg_id 所指定的商品属性图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
propimg_id对应的属性图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>商品属性图片ID</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>属性图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.propimg.upload</name>
<desc>添加一张商品属性图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的  
商品属性图片只有享有服务的卖家（如：淘宝大卖家、订购了淘宝多图服务的卖家）才能上传  
商品属性图片有数量和大小上的限制，最多不能超过24张（每个颜色属性都有一张）。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>属性图片内容。类型:JPG,GIF;最大长度:500K;图片大小不超过:1M&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png,bmp&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片位置</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>属性列表。调用taobao.itemprops.get获取类目属性，属性必须是颜色属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid。</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>PropImg属性图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.quantity.update</name>
<desc>提供按照全量或增量形式修改宝贝/SKU库存的功能</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID，必填参数</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>SKU的商家编码，可选参数。如果不填则默认修改宝贝的库存，如果填了则按照商家编码搜索出对应的SKU并修改库存。当sku_id和本字段都填写时以sku_id为准搜索对应SKU</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>库存修改值，必选。当全量更新库存时，quantity必须为大于等于0的正整数；当增量更新库存时，quantity为整数，可小于等于0。若增量更新时传入的库存为负数，则负数与实际库存之和不能小于0。比如当前实际库存为1，传入增量更新quantity=-1，库存改为0</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>要操作的SKU的数字ID，可选。如果不填默认修改宝贝的库存，如果填上则修改该SKU的库存</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<desc>库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.recommend.add</name>
<desc>将当前用户指定商品设置为橱窗推荐状态 
橱窗推荐需要用户有剩余橱窗位才可以顺利执行 
这个Item所属卖家从传入的session中获取，需要session绑定 
需要判断橱窗推荐是否已满，橱窗推荐已满停止调用橱窗推荐接口，2010年1月底开放查询剩余橱窗推荐数后可以按数量橱窗推荐商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被推荐的商品的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.recommend.delete</name>
<desc>取消当前用户指定商品的橱窗推荐状态 
这个Item所属卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被取消橱窗推荐的商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.add</name>
<desc>新增一个sku到num_iid指定的商品中  
传入的iid所对应的商品必须属于当前会话的用户</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户新增sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够添加成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>Sku的销售价格。商品的价格要在商品所有的sku的价格之间。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。 
如果包含自定义属性则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的‘$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)。取值范围:大于零的整数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>spec_id</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格信息</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.delete</name>
<desc>删除一个sku的数据 
需要删除的sku通过属性properties进行匹配查找</desc>
<request>
<param>
<name>item_num</name>
<type>Number</type>
<required>optional</required>
<desc>sku所属商品的数量,大于0的整数。当用户删除sku，使商品数量不等于sku数量之和时候，用于修改商品的数量，使sku能够删除成功。特别是删除最后一个sku的时候，一定要设置商品数量到正常的值，否则删除失败</desc>
</param>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户删除sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够删除成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>Sku结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.get</name>
<desc>获取sku_id所对应的sku数据  
sku_id对应的sku要属于传入的nick对应的卖家</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>卖家nick(num_iid和nick必传一个)，只传卖家nick时候，该api返回的结果不包含cspu（SKu上的产品规格信息）。</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>商品的数字IID（num_iid和nick必传一个，推荐用num_iid），传商品的数字id返回的结果里包含cspu（SKu上的产品规格信息）。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>required</required>
<desc>Sku的id。可以通过taobao.item.get得到</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>Sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.price.update</name>
<desc>更新商品SKU的价格</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>商品SKU信息（只包含num_iid和modified）</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.update</name>
<desc>*更新一个sku的数据  
*需要更新的sku通过属性properties进行匹配查找  
*商品的数量和价格必须大于等于0  
*sku记录会更新到指定的num_iid对应的商品中  
*num_iid对应的商品必须属于当前的会话用户</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充。 
如果包含自定义属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>spec_id</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格信息。</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>商品Sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.skus.get</name>
<desc>* 获取多个商品下的所有sku</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<required>required</required>
<desc>sku所属商品数字id，必选。num_iid个数不能超过40个</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>Sku列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.templates.get</name>
<desc>查询当前登录用户的店铺的宝贝详情页的模板名称</desc>
<response>
<param>
<name>item_template_list</name>
<type>ItemTemplate</type>
<level>Object Array</level>
<desc>返回宝贝模板对象。包含模板id，模板name，还有模板的类别（0表示外店，1表示内店）</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update</name>
<desc>根据传入的num_iid更新对应的商品的数据  
传入的num_iid所对应的商品必须属于当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则更新商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
当关键属性值更新为“其他”的时候，需要输入input_pids和input_str商品才能更新成功。该接口不支持产品属性修改。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
</param>
<param>
<name>barcode</name>
<type>String</type>
<required>optional</required>
<desc>商品条形码</desc>
</param>
<param>
<name>change_prop</name>
<type>String</type>
<required>optional</required>
<desc>商品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID 
该字段已经废弃，货到付款模板已经集成到运费模板中。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>desc_modules</name>
<type>String</type>
<required>optional</required>
<desc>商品描述模块化，模块列表；数据结构可参考Item_Desc_Module 。详细使用说明：http://open.taobao.com/support/question_detail.htm?spm=0.0.0.0.cRcj3S&amp;id=147498 ；</desc>
</param>
<param>
<name>empty_fields</name>
<type>String</type>
<required>optional</required>
<desc>支持宝贝信息的删除,如需删除对应的食品安全信息中的储藏方法、保质期， 则应该设置此参数的值为：food_security.plan_storage,food_security.period; 各个参数的名称之间用【,】分割, 如果对应的参数有设置过值，即使在这个列表中，也不会被删除; 目前支持此功能的宝贝信息如下：食品安全信息所有字段、电子交易凭证字段（locality_life，locality_life.verification，locality_life.refund_ratio，locality_life.network_id ，locality_life.onsale_auto_refund_ratio）。支持对全球购宝贝信息的清除（字符串中包含global_stock）</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>food_security.contact</name>
<type>String</type>
<required>optional</required>
<desc>厂家联系方式</desc>
</param>
<param>
<name>food_security.design_code</name>
<type>String</type>
<required>optional</required>
<desc>产品标准号</desc>
</param>
<param>
<name>food_security.factory</name>
<type>String</type>
<required>optional</required>
<desc>厂名</desc>
</param>
<param>
<name>food_security.factory_site</name>
<type>String</type>
<required>optional</required>
<desc>厂址</desc>
</param>
<param>
<name>food_security.food_additive</name>
<type>String</type>
<required>optional</required>
<desc>食品添加剂</desc>
</param>
<param>
<name>food_security.health_product_no</name>
<type>String</type>
<required>optional</required>
<desc>健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；</desc>
</param>
<param>
<name>food_security.mix</name>
<type>String</type>
<required>optional</required>
<desc>配料表</desc>
</param>
<param>
<name>food_security.period</name>
<type>String</type>
<required>optional</required>
<desc>保质期</desc>
</param>
<param>
<name>food_security.plan_storage</name>
<type>String</type>
<required>optional</required>
<desc>储藏方法</desc>
</param>
<param>
<name>food_security.prd_license_no</name>
<type>String</type>
<required>optional</required>
<desc>生产许可证号</desc>
</param>
<param>
<name>food_security.product_date_end</name>
<type>String</type>
<required>optional</required>
<desc>生产结束日期,格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.product_date_start</name>
<type>String</type>
<required>optional</required>
<desc>生产开始日期，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_end</name>
<type>String</type>
<required>optional</required>
<desc>进货结束日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_start</name>
<type>String</type>
<required>optional</required>
<desc>进货开始日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.supplier</name>
<type>String</type>
<required>optional</required>
<desc>供货商</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
</param>
<param>
<name>global_stock_country</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>全球购商品采购地（地区/国家）,默认值只在全球购商品采购地（库存类型选择情况生效），地区国家值为（美国, 香港, 日本, 英国, 新西兰, 德国, 韩国, 荷兰, 澳洲, 法国, 意大利, 台湾, 澳门, 加拿大, 瑞士, 西班牙, 泰国, 新加坡, 马来西亚, 菲律宾, 其他）&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>global_stock_type</name>
<type>String</type>
<required>optional</required>
<desc>全球购商品采购地（库存类型） 
全球购商品有两种库存类型：现货和代购 参数值为1时代表现货，值为2时代表代购。注意：使用时请与 全球购商品采购地（地区/国家）配合使用</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品图片。类型:JPG,GIF;最大长度:500k&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价(降价)幅度。如果为0，代表系统代理幅度。对于增价拍和荷兰拍来说是加价幅度，对于降价拍来说是降价幅度。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记</desc>
</param>
<param>
<name>is_offline</name>
<type>String</type>
<required>optional</required>
<desc>是否是线下商品。 1：线上商品（默认值）； 2：线上或线下商品； 3：线下商品。</desc>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否替换sku</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。</desc>
</param>
<param>
<name>item_size</name>
<type>String</type>
<required>optional</required>
<desc>表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。 
在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m) 
在编辑的时候，如果需要删除体积属性，请设置该值为0，如bulk:0</desc>
</param>
<param>
<name>item_weight</name>
<type>String</type>
<required>optional</required>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg。 只能传入数值类型（包含小数），不能带单位，单位默认为kg。 在编辑时候，如果需要在商品里删除重量的信息，就需要将值设置为0</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>上架时间。大于当前时间则宝贝会下架进入定时上架的宝贝中。</desc>
</param>
<param>
<name>locality_life.choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>编辑电子凭证宝贝时候表示是否使用邮寄 
0: 代表不使用邮寄； 
1：代表使用邮寄； 
如果不设置这个值，代表不使用邮寄</desc>
</param>
<param>
<name>locality_life.expirydate</name>
<type>String</type>
<required>optional</required>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期; 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</param>
<param>
<name>locality_life.merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick</desc>
</param>
<param>
<name>locality_life.network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID</desc>
</param>
<param>
<name>locality_life.onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数</desc>
</param>
<param>
<name>locality_life.refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例，百分比%前的数字,1-100的正整数值; 在参数empty_fields里设置locality_life.refund_ratio可删除退款比例</desc>
</param>
<param>
<name>locality_life.refundmafee</name>
<type>String</type>
<required>optional</required>
<desc>退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)</desc>
</param>
<param>
<name>locality_life.verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款,1代表核销打款 0代表非核销打款; 在参数empty_fields里设置locality_life.verification可删除核销打款</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在地城市。如杭州</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在地省份。如浙江</desc>
</param>
<param>
<name>newprepay</name>
<type>String</type>
<required>optional</required>
<desc>该宝贝是否支持【7天无理由退货】，卖家选择的值只是一个因素，最终以类目和选择的属性条件来确定是否支持7天。填入字符0，表示不支持；未填写或填人字符1，表示支持7天无理由退货；&lt;br&gt;注意：使用该API修改商品其它属性如标题title时，如需保持商品不支持7天无理由退货状态，该字段需传入0 。</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<max_value>900000000</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-900000000的整数。且需要等于Sku所有数量的和 拍卖商品中增加拍只能为1，荷兰拍要在[2,500)范围内。&lt;br /&gt; 支持最大值为：900000000&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>paimai_info.deposit</name>
<type>Number</type>
<required>optional</required>
<desc>拍卖宝贝的保证金。对于增价拍和荷兰拍来说保证金有两种模式：淘宝默认模式（首次出价金额的10%），自定义固定保证金（固定冻结金额只能输入不超过30万的正整数），并且保证金只冻结1次。对于降价拍来说保证金只有淘宝默认的（竞拍价格的10% * 竞拍数量），并且每次出价都需要冻结保证金。 
对于拍卖宝贝来说，保证金是必须的，但是默认使用淘宝默认保证金模式，只有用户需要使用自定义固定保证金的时候才需要使用到这个参数。如果该参数不传或传入0则代表使用默认。</desc>
</param>
<param>
<name>paimai_info.interval</name>
<type>Number</type>
<required>optional</required>
<max_value>60</max_value>
<min_value>1</min_value>
<desc>降价拍宝贝的降价周期(分钟)。降价拍宝贝的价格每隔paimai_info.interval时间会下降一次increment。&lt;br /&gt; 支持最大值为：60&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.mode</name>
<type>Number</type>
<required>optional</required>
<max_value>3</max_value>
<min_value>1</min_value>
<desc>拍卖商品选择的拍卖类型，拍卖类型包括三种：增价拍(1)，荷兰拍(2)和降价拍(3)。&lt;br /&gt; 支持最大值为：3&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.reserve</name>
<type>Price</type>
<required>optional</required>
<desc>降价拍宝贝的保留价。对于降价拍来说，paimai_info.reserve必须大于0，且小于price-increment，而且（price-paimai_info.reserve）/increment的计算结果必须为整数</desc>
</param>
<param>
<name>paimai_info.valid_hour</name>
<type>Number</type>
<required>optional</required>
<max_value>48</max_value>
<min_value>1</min_value>
<desc>自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：48&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.valid_minute</name>
<type>Number</type>
<required>optional</required>
<max_value>59</max_value>
<min_value>0</min_value>
<desc>自定义销售周期的分钟数。拍卖宝贝可以自定义销售周期，这里是指定销售周期的分钟数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：59&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.templates.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。 拍卖商品对应的起拍价。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>800</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过800字节&lt;br /&gt; 支持最大长度为：800&lt;br /&gt; 支持的最大列表长度为：800</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
</param>
<param>
<name>scenic_ticket_book_cost</name>
<type>String</type>
<required>optional</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>景区门票在选择订金支付时候，需要交的预订费。传入的值是1到20之间的数值，小数点后最多可以保留两位（多余的部分将做四舍五入的处理）。这个数值表示的是预订费的比例，最终的预订费为 scenic_ticket_book_cost乘一口价除以100</desc>
</param>
<param>
<name>scenic_ticket_pay_way</name>
<type>Number</type>
<required>optional</required>
<desc>景区门票类宝贝编辑时候，当卖家签订了支付宝代扣协议时候，需要选择支付方式：全额支付和订金支付。当scenic_ticket_pay_way为1时表示全额支付，为2时表示订金支付</desc>
</param>
<param>
<name>sell_point</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>商品卖点信息，最长150个字符。天猫和集市都可用&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_barcode</name>
<type>String</type>
<required>optional</required>
<desc>sku层面的条形码，多个SKU情况，与SKU价格库存格式类似，用逗号分隔</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid,多个sku之间用逗号分隔。该字段内的销售属性(自定义的除外)也需要在props字段填写 . 规则：如果该SKU存在旧商品，则修改；否则新增Sku。如果更新时有对Sku进行操作，则Sku的properties一定要传入。如果存在自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText，其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
</param>
<param>
<name>sku_spec_ids</name>
<type>String</type>
<required>optional</required>
<desc>暂时不可用</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改
集市卖家默认拍下减库存;
商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>120</max_length>
<desc>宝贝标题. 不能超过30字符,受违禁词控制&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update.delisting</name>
<desc>* 单个商品下架 
    * 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>返回商品更新信息：返回的结果是:num_iid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update.listing</name>
<desc>* 单个商品上架 
* 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>需要上架的商品的数量。取值范围:大于零的整数。如果商品有sku，则上架数量默认为所有sku数量总和，不可修改。否则商品数量根据设置数量调整为num&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>上架后返回的商品信息：返回的结果就是:num_iid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.custom.get</name>
<desc>跟据卖家设定的商品外部id获取商品  
这个商品对应卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的所有字段；多个字段之间用“,”分隔。如果想返回整个子对象，那字段为item_img，如果是想返回子对象里面的字段，那字段为item_img.url。新增返回字段：one_station标记商品是否淘1站商品</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>required</required>
<desc>商品的外部商品ID，支持批量，最多不超过40个。</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>商品列表，具体返回字段以fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.inventory.get</name>
<desc>获取当前用户作为卖家的仓库中的商品列表，并能根据传入的搜索条件对仓库中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>banner</name>
<type>String</type>
<required>optional</required>
<desc>分类字段。可选值:&lt;br&gt;
regular_shelved(定时上架)&lt;br&gt;
never_on_shelf(从未上架)&lt;br&gt;
off_shelf(我下架的)&lt;br&gt;
for_shelved(等待所有上架)&lt;br&gt;

sold_out(全部卖完)&lt;br&gt;
violation_off_shelf(违规下架的)&lt;br&gt;
默认查询for_shelved(等待所有上架)这个状态的商品&lt;br&gt;
&lt;font color='red'&gt;注：for_shelved(等待所有上架)=regular_shelved(定时上架)+never_on_shelf(从未上架)+off_shelf(我下架的)&lt;/font&gt;</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>商品结束修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值为 Item 商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru, list_time,price,has_discount,has_invoice,has_warranty,has_showcase, modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。&lt;br&gt; 
不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>is_cspu</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否挂接了达尔文标准产品体系。</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在外部网店显示</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在淘宝显示</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>101</max_value>
<desc>页码。取值范围:大于零小于等于101的整数;默认值为1，即返回第一页数据。当页码超过101页时系统就会报错，故请大家在用此接口获取数据时尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品。&lt;br /&gt; 支持最大值为：101</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>搜索字段。搜索商品的title。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>32</max_list_size>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>商品起始修改时间</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到底商品列表，具体字段根据设定的fields决定，不包括desc,stuff_status字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.list.get</name>
<desc>查看非公开属性时需要用户登录</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的商品对象字段。可选值：Item商品结构体中字段均可返回(除item_weight,item_size)；多个字段用“,”分隔。如果想返回整个子对象，那字段为itemimg，如果是想返回子对象里面的字段，那字段为itemimg.url。</desc>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<required>special</required>
<desc>商品数字id列表，多个num_iid用逗号隔开，一次不超过20个。</desc>
</param>
<param>
<name>track_iids</name>
<type>String</type>
<required>special</required>
<desc>商品数字id列表，多个track_iid用逗号隔开，一次不超过20个。</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.onsale.get</name>
<desc>获取当前用户作为卖家的出售中的商品列表，并能根据传入的搜索条件对出售中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>结束的修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。
不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否橱窗推荐。 可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>is_cspu</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否挂接了达尔文标准产品体系。</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在外部网店显示</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在淘宝显示</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间)，sold_quantity（商品销量）,;默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过2万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>搜索字段。搜索商品的title。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>32</max_list_size>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>起始的修改时间</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到的商品列表，具体字段根据设定的fields决定，不包括desc字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.add</name>
<desc>获取类目ID，必需是叶子类目ID；调用taobao.itemcats.get.v2获取  
传入关键属性,结构:pid:vid;pid:vid.调用taobao.itemprops.get.v2获取pid, 
调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props. 
新增：套装产品发布，目前支持单件多个即 A*2 形式的套装</desc>
<request>
<param>
<name>binds</name>
<type>String</type>
<required>optional</required>
<max_length>512</max_length>
<desc>非关键属性结构:pid:vid;pid:vid.&lt;br&gt;
非关键属性&lt;font color=red&gt;不包含&lt;/font&gt;关键属性、销售属性、用户自定义属性、商品属性;
&lt;br&gt;调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid.&lt;br&gt;&lt;font color=red&gt;注:支持最大长度为512字节&lt;/font&gt;&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>商品类目ID.调用taobao.itemcats.get获取;注意:必须是叶子类目 id.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”
&lt;br&gt;&lt;font color=red&gt;注：包含所有自定义属性的传入&lt;/font&gt;</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述.最大不超过25000个字符</desc>
</param>
<param>
<name>extra_info</name>
<type>String</type>
<required>optional</required>
<max_length>25000</max_length>
<desc>存放产品扩展信息，由List(ProductExtraInfo)转化成jsonArray存入.&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>产品主图片.最大1M,目前仅支持GIF,JPG.&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>is_pub_suite</name>
<type>Boolean</type>
<required>special</required>
<desc>是否发布套装产品，和suite_items_str配合使用，is_pub_suite=true走套装SPU发布逻辑，达尔文体系下不需要再走tmall.product.spec.add发布产品规格</desc>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是不是主图</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为新增C2C市场的产品信息， 2为新增B2C市场的产品信息。 
不填写此值则C用户新增B2C市场的产品信息，B用户新增B2C市场的产品信息。</desc>
</param>
<param>
<name>market_time</name>
<type>Date</type>
<required>optional</required>
<desc>上市时间。目前只支持鞋城类目传入此参数</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称,最大30个字符.</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>外部产品ID</desc>
</param>
<param>
<name>packing_list</name>
<type>String</type>
<required>optional</required>
<desc>包装清单。注意，在管控类目下，包装清单不能为空，同时保证清单的格式为： 
名称:数字;名称:数字; 
其中，名称不能违禁、不能超过60字符，数字不能超过999</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>optional</required>
<desc>产品市场价.精确到2位小数;单位为元.如：200.07</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。只有少数销售属性值支持传入别名，比如颜色和尺寸</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>关键属性 结构:pid:vid;pid:vid.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.</desc>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<required>optional</required>
<desc>销售属性结构:pid:vid;pid:vid.调用taobao.itemprops.get获取is_sale_prop＝true的pid,调用taobao.itempropvalues.get获取vid.</desc>
</param>
<param>
<name>sell_pt</name>
<type>String</type>
<required>optional</required>
<desc>商品卖点描述，长度限制为20个汉字</desc>
</param>
<param>
<name>suite_items_str</name>
<type>String</type>
<required>special</required>
<desc>发布套装产品时，套装关联的产品规格+数量的字符串，格式：specsId:number。</desc>
</param>
<param>
<name>template_id</name>
<type>Number</type>
<required>optional</required>
<desc>在天猫，无关键属性发布产品，必须指定模板ID,模板ID通过tmall.product.template.get获取</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>产品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.get</name>
<desc>两种方式查看一个产品详细信息:  
传入product_id来查询  
传入cid和props来查询</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>商品类目id.调用taobao.itemcats.get获取;必须是叶子类目id,如果没有传product_id,那么cid和props必须要传.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义关键属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔.</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为取C2C市场的产品信息， 2为取B2C市场的产品信息。 
不填写此值则默认取C2C的产品信息。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<desc>Product的id.两种方式来查看一个产品:1.传入product_id来查询 2.传入cid和props来查询</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>比如:诺基亚N73这个产品的关键属性列表就是:品牌:诺基亚;型号:N73,对应的PV值就是10005:10027;10006:29729.</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.img.delete</name>
<desc>1.传入非主图ID  
2.传入产品ID  
删除产品非主图</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>非主图ID</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id,通过taobao.product.add接口新增产品的时候会返回id.</desc>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<desc>返回productimg中的：id,product_id</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.img.upload</name>
<desc>1.传入产品ID  
2.传入图片内容  
注意：图片最大为500K,只支持JPG,GIF格式,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>产品图片ID.修改图片时需要传入</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>图片内容.图片最大为500K,只支持JPG,GIF格式.&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否将该图片设为主图.可选值:true,false;默认值:false.</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id</desc>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<desc>返回产品图片结构中的：url,id,created,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.propimg.delete</name>
<desc>1.传入属性图片ID  
2.传入产品ID  
删除一个产品的属性图片</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>属性图片ID</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id.</desc>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<desc>返回product_prop_img数据结构中的：product_id,id</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.propimg.upload</name>
<desc>传入产品ID  
传入props,目前仅支持颜色属性.调用taobao.itemprops.get.v2取得颜色属性pid, 
再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;  
传入图片内容  
注意：图片最大为2M,只支持JPG,GIF,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>产品属性图片ID</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>图片内容.图片最大为2M,只支持JPG,GIF.&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>required</required>
<desc>属性串.目前仅支持颜色属性.调用taobao.itemprops.get获取类目属性,取得颜色属性pid,再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;</desc>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<desc>支持返回产品属性图片中的：url,id,created,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.update</name>
<desc>传入产品ID  
可修改字段：outer_id,binds,sale_props,name,price,desc,image  
注意：1.可以修改主图,不能修改子图片,主图最大500K,目前仅支持GIF,JPG 
      2.商城卖家产品发布24小时后不能作删除或修改操作</desc>
<request>
<param>
<name>binds</name>
<type>String</type>
<required>optional</required>
<desc>非关键属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述.最大不超过25000个字符</desc>
</param>
<param>
<name>extra_info</name>
<type>String</type>
<required>optional</required>
<max_length>25000</max_length>
<desc>存放产品扩展信息，由List(ProductExtraInfo)转化成jsonArray存入.&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>产品主图.最大500K,目前仅支持GIF,JPG&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是主图</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为更新C2C市场的产品信息， 2为更新B2C市场的产品信息。 
不填写此值则C用户更新B2C市场的产品信息，B用户更新B2C市场的产品信息。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称.最大不超过30个字符</desc>
</param>
<param>
<name>native_unkeyprops</name>
<type>String</type>
<required>optional</required>
<desc>自定义非关键属性</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>外部产品ID</desc>
</param>
<param>
<name>packing_list</name>
<type>String</type>
<required>optional</required>
<desc>保证清单。</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>optional</required>
<desc>产品市场价.精确到2位小数;单位为元.如:200.07</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<required>optional</required>
<desc>销售属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
</param>
<param>
<name>sell_pt</name>
<type>String</type>
<required>optional</required>
<desc>产品卖点描述，最长40个字节</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>返回product数据结构中的：product_id,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.products.search</name>
<desc>&lt;pre&gt; 
只有天猫商家发布商品时才需要用到； 
二种方式搜索所有产品信息(二种至少传一种):  
传入关键字q搜索， 
传入cid和props搜索 
返回值支持:product_id,name,pic_path,cid,props,price,tsc 
当用户指定了cid并且cid为垂直市场（3C电器城、鞋城）的类目id时，默认只返回小二确认的产品。如果用户没有指定cid，或cid为普通的类目，默认返回商家确认或小二确认的产品。如果用户自定了status字段，以指定的status类型为准。 
新增一： 
   传入suite_items_str 按规格搜索套装产品。 
   返回字段增加suite_items_str,is_suite_effecitve支持。 
 
新增二： 
   传入barcode_str 支持按条码搜索产品。 
   返回字段增加barcode_str。 
&lt;/pre&gt;</desc>
<request>
<param>
<name>barcode_str</name>
<type>String</type>
<required>optional</required>
<desc>按条码搜索产品信息,多个逗号隔开，不支持条码为全零的方式</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>商品类目ID.调用taobao.itemcats.get获取.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义关键属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Product数据结构中的以下字段:product_id,name,pic_url,cid,props,price,tsc;多个字段之间用","分隔.新增字段status(product的当前状态)</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为取C2C市场的产品信息， 2为取B2C市场的产品信息。 
不填写此值则默认取C2C的产品信息。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值为40.</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>属性,属性值的组合.格式:pid:vid;pid:vid;调用taobao.itemprops.get获取类目属性pid  
,再用taobao.itempropvalues.get取得vid.</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>special</required>
<desc>搜索的关键词是用来搜索产品的title.　注:q,cid和props至少传入一个</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>想要获取的产品的状态列表，支持多个状态并列获取，多个状态之间用","分隔，最多同时指定5种状态。例如，只获取小二确认的spu传入"3",只要商家确认的传入"0"，既要小二确认又要商家确认的传入"0,3"。目前只支持者两种类型的状态搜索，输入其他状态无效。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>suite_items_str</name>
<type>String</type>
<required>special</required>
<desc>按关联产品规格specs搜索套装产品</desc>
</param>
<param>
<name>vertical_market</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>传入值为：3表示3C表示3C垂直市场产品，4表示鞋城垂直市场产品，8表示网游垂直市场产品。一次只能指定一种垂直市场类型&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.skus.custom.get</name>
<desc>跟据卖家设定的Sku的外部id获取商品，如果一个outer_id对应多个Sku会返回所有符合条件的sku  
这个Sku所属卖家从传入的session中获取，需要session绑定(注：iid标签里是num_iid的值，可以用作num_iid使用)</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”隔开</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>required</required>
<desc>Sku的外部商家ID</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>Sku对象，具体字段以fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.skus.quantity.update</name>
<desc>提供按照全量/增量的方式批量修改SKU库存的功能</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID，必填参数</desc>
</param>
<param>
<name>outerid_quantities</name>
<type>String</type>
<required>special</required>
<desc>特殊可选，skuIdQuantities为空的时候用该字段通过outerId来指定sku和其库存修改值。格式为outerId:库存修改值;outerId:库存修改值。当skuIdQuantities不为空的时候该字段失效。当一个outerId对应多个sku时，所有匹配到的sku都会被修改库存。最多支持20个SKU同时修改。</desc>
</param>
<param>
<name>skuid_quantities</name>
<type>String</type>
<required>special</required>
<desc>sku库存批量修改入参，用于指定一批sku和每个sku的库存修改值，特殊可填。格式为skuId:库存修改值;skuId:库存修改值。最多支持20个SKU同时修改。</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<desc>库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新。当选择全量更新时，如果库存更新值传入的是负数，会出错并返回错误码；当选择增量更新时，如果库存更新值为负数且绝对值大于当前库存，则sku库存会设置为0.</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.item.add</name>
<desc>发布门票商品接口，只支持新版门票发布&lt;br&gt; 
注意门票商品必须发布到对应达尔文体系下的产品上，产品获取请走taobao.products.search接口。&lt;br&gt; 
门票商品的产品规格信息包含门票商品的价格，库存，有效期等。是门票核心信息。一个门票宝贝可能包含多个产品规格（产品对应产品规格的获取请走tmall.product.specs.get接口），可以指定每个产品规格在不同时间段下不同有效期的门票的不同价格和库存。具体信息请参见skus字段描述。</desc>
<request>
<param>
<name>auction_point</name>
<type>Price</type>
<required>optional</required>
<desc>门票商品返点比例（只对B卖家开放，单位为%）</desc>
</param>
<param>
<name>auction_status</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>门票商品状态（onsale：上架，instock：仓库）&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>门票商品所在地-城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>required</required>
<max_length>25000</max_length>
<desc>门票宝贝描述&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>etc.association_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.auto_refund</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的自动退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.merchant_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.merchant_nick</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商名-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.network_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证网店ID-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.overdue_pay</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的过期退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.verification_pay</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否核销打款-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>have_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否有发票（有发票：true，没有发票：false）. 
对于B卖家来说只能选择有发票。</desc>
</param>
<param>
<name>image_1</name>
<type>String</type>
<required>required</required>
<desc>商品主图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_2</name>
<type>String</type>
<required>optional</required>
<desc>第一张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_3</name>
<type>String</type>
<required>optional</required>
<desc>第二张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_4</name>
<type>String</type>
<required>optional</required>
<desc>第三张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_5</name>
<type>String</type>
<required>optional</required>
<desc>第四张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>list_time</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品的物流运费模板-在产品规格使用到物流时必选</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>门票对应产品标识&lt;br&gt; 
门票商品只能使用达尔文体系下的产品。该参数可通过taobao.products.search接口获取，注意返回产品的cspu_feature属性，该属性表明是否为达尔文体系下产品。</desc>
</param>
<param>
<name>promoted_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否橱窗推荐（橱窗推荐；true，不推荐则可不用设置该值）</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>门票商品所在地-省份&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>shop_cats</name>
<type>String</type>
<required>optional</required>
<desc>门票宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识</desc>
</param>
<param>
<name>skus</name>
<type>String</type>
<required>required</required>
<desc>门票商品产品规格信息，包括门票的库存价格等信息（产品规格可通过tmall.product.specs.get接口获取）。&lt;br&gt;请通过门票商品使用的产品所对应的产品规格信息进行设置，注意由于产品规格信息比较复杂，所以直接使用json作为传输，请按照约定传入正确的json格式）&lt;br&gt; 
格式定义：&lt;br&gt; 
&lt;pre&gt; 
{ 
  "SKU": 
	{ 
		"20890017-121840019_20394-121290067":{// 产品下的某个产品规格的属性属性值信息（pid-vid_pid-vid） 
			"effDates":{ 
				"1":{ 
					"type":"0",// 有效期类型，0-非指定日票，1-指定日票，2-年卡 
					"effDate" :{ // 有效期，如下几块，type已经去掉 
						"startDate":"2013-01-01",// 有效期时间段开始时间,null代表未设置 
						"endDate":"2013-12-31",// 有效期时间段结束时间,null代表未设置 
						"weeks":["1","4"],// 有效期周,1~7代表周一到周日，null代表未设置 
						"startHour":"12",// 有效期开始时间小时,null代表未设置 
						"startMinute":"59",// 有效期开始时间分钟,null代表未设置 
						"endHour":"18"// 有效期结束时间小时,null代表未设置 
						"endMinute":"30"// 有效期结束时间分钟,null代表未设置 
						"effDays":"1",// xx后n天内有效的天数，购买后、出票后、开卡后n天内有效,null代表未设置 
					}, 
					"timeLimit":{// 入园时间限制数据 
						"limit":{ 
							"type":"0",// 入园时间限制类型,0-不限，1-提前n天的n点n分，2-提前n小时n分钟 
							"aheadDays":"3",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间提前n天的天数 
							"aheadAtHour":"12",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的小时 
							"aheadAtMinute":"30",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的分钟 
							"aheadHours":"48",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n小时的小时 
							"aheadMinutes":"30",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n分钟的分钟 
						} 
						"autoActivate":{ // 有效期类型为年卡时才使用 
							"type":"0",// 是否有最晚自动开卡时间,0-无，1-有最晚自动开卡 
							"time":"30" // 天数,无最晚自动开发时间时为null 
						} 
					} 
 
					"price" : 10000,  
					"inventory" : 100, 
					"outerId" : "商家编码" 
				}, 
				"222":{} 
			}, 
			"save":true, // 必须，代表是保存的有效数据 
 
				"returnRule":{ 
					"type":"0",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"changeRule":{ 
					"type":"1",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"guide": "卖家输入的文本" 
		} 
	} 
} 
&lt;/pre&gt;&lt;br&gt;</desc>
</param>
<param>
<name>sub_stock_at_buy</name>
<type>Boolean</type>
<required>required</required>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>门票商品库存技术方式（拍下减库存：true，付款减库存：false）</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>门票商品标题&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>video_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品视频-视频标识由多媒体中相关接口获取</desc>
</param>
<param>
<name>vip_promoted</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否参与店铺会员打折</desc>
</param>
</request>
<response>
<param>
<name>ticket_item_process_result</name>
<type>TicketItemProcessResult</type>
<level>Object</level>
<desc>门票商品操作结果，具体请参见TicketItemProcessResult数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.item.get</name>
<desc>获取新门票类目商品信息，目前只支持门票二期的商品</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的门票商品（TicketItem）对象字段，如title,price,skus等。&lt;br&gt;可选值：TicketItem商品结构体中所有字段均可返回；多个字段用“,”分隔。</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>新门票类目商品的标识（非日历价格库存商品）</desc>
</param>
</request>
<response>
<param>
<name>ticket_item</name>
<type>TicketItem</type>
<level>Object</level>
<desc>参见TicketItem数据结构文档</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.item.update</name>
<desc>编辑新门票类目商品&lt;br&gt; 
只有如下两种情况能够更换门票商品挂载的产品：从其他类目迁移到当前新门票类目，或当前商品挂载的产品被屏蔽&lt;br&gt; 
注意门票商品必须发布到对应达尔文体系下的产品上，产品获取请走taobao.products.search接口。 
门票商品的产品规格信息包含门票商品的价格，库存，有效期等。是门票核心信息。一个门票宝贝可能包含多个达尔文体系产品（产品对应达尔文体系产品的获取请走tmall.product.specs.get接口），可以指定每个达尔文体系产品在不同时间段下不同有效期的门票的不同价格和库存。具体信息请参见skus字段描述。</desc>
<request>
<param>
<name>auction_point</name>
<type>Price</type>
<required>optional</required>
<desc>门票商品返点比例（只对B卖家开放，单位为%）</desc>
</param>
<param>
<name>auction_status</name>
<type>String</type>
<required>optional</required>
<max_length>10</max_length>
<desc>门票商品状态（onsale：上架，instock：仓库）&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品所在地-城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>optional</required>
<max_length>25000</max_length>
<desc>门票宝贝描述&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>etc.association_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.auto_refund</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的自动退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.merchant_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.merchant_nick</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商名-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.network_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证网店ID-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.overdue_pay</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的过期退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.verification_pay</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否核销打款-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>have_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否有发票（有发票：true，没有发票：false）. 
对于B卖家来说只能选择有发票。</desc>
</param>
<param>
<name>image_1</name>
<type>String</type>
<required>optional</required>
<desc>商品主图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_2</name>
<type>String</type>
<required>optional</required>
<desc>第一张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_3</name>
<type>String</type>
<required>optional</required>
<desc>第二张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_4</name>
<type>String</type>
<required>optional</required>
<desc>第三张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_5</name>
<type>String</type>
<required>optional</required>
<desc>第四张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>需要更新的门票商品标识（只支持门票二期商品）</desc>
</param>
<param>
<name>list_time</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品的物流运费模板-在产品规格使用到物流时必选</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品挂载到的产品&lt;br&gt; 
通过taobao.products.search获取产品信息，并且对应产品必须是小二确认的达尔文体系产品。</desc>
</param>
<param>
<name>promoted_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否橱窗推荐（橱窗推荐；true，不推荐则可不用设置该值）</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品所在地-省份&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>remove_fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要删除的字段列表</desc>
</param>
<param>
<name>shop_cats</name>
<type>String</type>
<required>optional</required>
<desc>门票宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识</desc>
</param>
<param>
<name>skus</name>
<type>String</type>
<required>optional</required>
<desc>门票商品产品规格信息（门票的产品规格信息可以通过tmall.product.specs.get接口获取）&lt;br&gt;。请通过门票商品使用的产品所对应的产品规格信息进行设置，注意由于产品规格信息比较复杂，所以直接使用json作为传输，请按照约定传入正确的json格式）&lt;br&gt; 
格式定义：&lt;br&gt; 
&lt;pre&gt; 
{ 
  "SKU": 
	{ 
		"20890017-121840019_20394-121290067":{// 产品下的某个产品规格的属性属性值信息（pid-vid_pid-vid） 
			"effDates":{ 
				"1":{ 
					"type":"0",// 有效期类型，0-非指定日票，1-指定日票，2-年卡 
					"effDate" :{ // 有效期，如下几块，type已经去掉 
						"startDate":"2013-01-01",// 有效期时间段开始时间,null代表未设置 
						"endDate":"2013-12-31",// 有效期时间段结束时间,null代表未设置 
						"weeks":["1","4"],// 有效期周,1~7代表周一到周日，null代表未设置 
						"startHour":"12",// 有效期开始时间小时,null代表未设置 
						"startMinute":"59",// 有效期开始时间分钟,null代表未设置 
						"endHour":"18"// 有效期结束时间小时,null代表未设置 
						"endMinute":"30"// 有效期结束时间分钟,null代表未设置 
						"effDays":"1",// xx后n天内有效的天数，购买后、出票后、开卡后n天内有效,null代表未设置 
					}, 
					"timeLimit":{// 入园时间限制数据 
						"limit":{ 
							"type":"0",// 入园时间限制类型,0-不限，1-提前n天的n点n分，2-提前n小时n分钟 
							"aheadDays":"3",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间提前n天的天数 
							"aheadAtHour":"12",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的小时 
							"aheadAtMinute":"30",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的分钟 
							"aheadHours":"48",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n小时的小时 
							"aheadMinutes":"30",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n分钟的分钟 
						} 
						"autoActivate":{ // 有效期类型为年卡时才使用 
							"type":"0",// 是否有最晚自动开卡时间,0-无，1-有最晚自动开卡 
							"time":"30" // 天数,无最晚自动开发时间时为null 
						} 
					} 
 
					"price" : 10000,  
					"inventory" : 100, 
					"outerId" : "商家编码" 
				}, 
				"222":{} 
			}, 
			"save":true, // 必须，代表是保存的有效数据 
 
				"returnRule":{ 
					"type":"0",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"changeRule":{ 
					"type":"1",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"guide": "卖家输入的文本" 
		} 
	} 
} 
&lt;/pre&gt;&lt;br&gt;</desc>
</param>
<param>
<name>sub_stock_at_buy</name>
<type>Boolean</type>
<required>optional</required>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>门票商品库存技术方式（拍下减库存：true，付款减库存：false）</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>门票商品标题&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>video_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品视频-视频标识由多媒体中相关接口获取</desc>
</param>
<param>
<name>vip_promoted</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否参与店铺会员打折</desc>
</param>
</request>
<response>
<param>
<name>ticket_item_process_result</name>
<type>TicketItemProcessResult</type>
<level>Object</level>
<desc>门票商品操作结果，具体请参见TicketItemProcessResult数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.items.get</name>
<desc>批量获取新门票类目商品信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的门票商品（TicketItem）对象字段，如title,price,skus等。&lt;br&gt;可选值：TicketItem商品结构体中所有字段均可返回；多个字段用“,”分隔。</desc>
</param>
<param>
<name>item_ids</name>
<type>Field List</type>
<required>required</required>
<desc>批量获取信息的商品标识。最多不能超过20个。</desc>
</param>
</request>
<response>
<param>
<name>ticket_items</name>
<type>TicketItem</type>
<level>Object Array</level>
<desc>商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.promotion.get</name>
<desc>商品优惠详情查询，可查询商品设置的详细优惠。包括限时折扣，满就送等官方优惠以及第三方优惠。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id</desc>
</param>
</request>
<response>
<param>
<name>promotions</name>
<type>PromotionDisplayTop</type>
<level>Object</level>
<desc>优惠详细信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.control.get</name>
<desc>获取到所有的类目，品牌的控制信息，达尔文类目是会以品牌和类目作为控制的力度来管理商品，所有的控制信息可以通过这个接口获取到信息。</desc>
<response>
<param>
<name>brand_cat_control_info</name>
<type>BrandCatControlInfo</type>
<level>Object</level>
<desc>被管控的类目和品牌信息。如何判断一个产品是否被管控，是去品牌的信息和类目信息做一个交集。</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.metadata.get</name>
<desc>获取指定叶子类目、品牌、商家的达尔文数据</desc>
<request>
<param>
<name>brand_id</name>
<type>Number</type>
<required>optional</required>
<desc>品牌id</desc>
</param>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目id</desc>
</param>
</request>
<response>
<param>
<name>brand_cat_meta_data</name>
<type>BrandCatMetaData</type>
<level>Object</level>
<desc>类目、品牌下的达尔文元数据</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.propinput.get</name>
<desc>针对监管类目品牌关键属性可输入判断逻辑比较复杂，提供简化属性可输入判断的接口，该接口兼容非关键属性和非监管类目品牌</desc>
<request>
<param>
<name>brand_id</name>
<type>Number</type>
<required>required</required>
<desc>品牌ID，如果类目没有品牌，指定null</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>类目ID</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>required</required>
<desc>属性ID，如果属性有子属性，请指定最后一级子属性ID，tmall.brandcat.propinput.get返回的即为的该属性ID对应的输入特征，对于有子属性模板的情况指定顶级属性ID即可</desc>
</param>
</request>
<response>
<param>
<name>property_input</name>
<type>PropertyInputDO</type>
<level>Object</level>
<desc>属性输入特征</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.salespro.get</name>
<desc>获取被管控的品牌类目下销售信息，销售信息又分成两中，一种是规格属性，要求针对这个属性创建规格信息，第二种是非规格属性（一般会被称为营销属性），这种信息主要是会影响到价格的变化，在做sku的时候会使用到。</desc>
<request>
<param>
<name>brand_id</name>
<type>Number</type>
<required>required</required>
<desc>被管控的品牌Id</desc>
</param>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>被管控的类目Id</desc>
</param>
</request>
<response>
<param>
<name>cat_brand_sale_props</name>
<type>CatBrandSaleProp</type>
<level>Object Array</level>
<desc>获取被管控品牌和类目下的销售属性，注意，一个管控品牌和类目下可能有多个销售属性。</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.suiteconf.get</name>
<desc>该接口获取能发布套餐产品的类目，及对应的套餐配置。</desc>
<response>
<param>
<name>suite_conf_list</name>
<type>SuiteConfDO</type>
<level>Object Array</level>
<desc>套装的配置信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.item.desc.modules.get</name>
<desc>商品描述模块信息获取，包括运营设定的类目级别的模块信息以及用户自定义模块数量约束。</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝后台发布商品的叶子类目id，可通过taobao.itemcats.get查到。api 访问地址http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.CFhhk4&amp;path=cid:3-apiId:122</desc>
</param>
<param>
<name>usr_id</name>
<type>Number</type>
<required>required</required>
<desc>商家主帐号id</desc>
</param>
</request>
<response>
<param>
<name>modular_desc_info</name>
<type>ModularDescInfo</type>
<level>Object</level>
<desc>返回描述模块信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.books.add</name>
<desc>tmall提供给外部商家的接口，外部商家调用接口，可以将商家的图书的类目以及SPU信息推送到tamll的数据库中</desc>
<request>
<param>
<name>abstract_msg</name>
<type>String</type>
<required>optional</required>
<desc>摘要信息，不支持HTML代码，长度限制5000</desc>
</param>
<param>
<name>app_info</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>用户的Id,需要确定自己id的可以联系接口负责人&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>author</name>
<type>String</type>
<required>required</required>
<max_length>80</max_length>
<desc>作者/著者，最多填写三个人名，超出三个人的以“等”结束&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>author_area</name>
<type>String</type>
<required>optional</required>
<max_length>80</max_length>
<desc>作者国别/地区，到国家级别&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>bar_code</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>条形码，数字，共13位，9787开头&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>book_bind</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>装帧&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>book_size</name>
<type>Number</type>
<required>optional</required>
<desc>开本，如：16  表示16开本</desc>
</param>
<param>
<name>book_version</name>
<type>Number</type>
<required>optional</required>
<max_length>10</max_length>
<desc>版本&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>catalog</name>
<type>String</type>
<required>optional</required>
<max_length>8000</max_length>
<desc>目录，不支持HTML代码，长度限制为8000&lt;br /&gt; 支持最大长度为：8000&lt;br /&gt; 支持的最大列表长度为：8000</desc>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<max_list_size>40</max_list_size>
<desc>类目id</desc>
</param>
<param>
<name>china_classify_no</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>中图分类号，英文字母加数字组成&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>cip</name>
<type>String</type>
<required>optional</required>
<max_length>50</max_length>
<desc>cip数据编号，真实格式：（XXX）第***号， 
导入时，格式为XXX-***&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>commentator</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>点评者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>custom_id</name>
<type>String</type>
<required>required</required>
<desc>用户自己的Id号</desc>
</param>
<param>
<name>deputy_name</name>
<type>String</type>
<required>required</required>
<max_length>150</max_length>
<desc>图书名称(正副书名)&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>drawor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>绘图者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>editor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>编者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>graphor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>摄影者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>上传图片，图片上传使用byte[]类型</desc>
</param>
<param>
<name>isbn</name>
<type>String</type>
<required>required</required>
<max_length>13</max_length>
<desc>不带‘-’的图书ISBN号 
1. 位数限定：10位 末尾校验,7开头 
2. 位数限定：13位、开头数字限定： 9787开头&lt;br /&gt; 支持最大长度为：13&lt;br /&gt; 支持的最大列表长度为：13</desc>
</param>
<param>
<name>item_ids</name>
<type>String</type>
<required>optional</required>
<desc>这条记录对应的淘宝的Ids</desc>
</param>
<param>
<name>narrator</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>口述者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>part_name</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>分册名&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>part_no</name>
<type>Number</type>
<required>optional</required>
<max_length>10</max_length>
<desc>分册号&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>plottor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>策划者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>价格支持整数和小数，小数保留小数点后两位，若有多个价格，价格之间通过','号分隔&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>publish_company</name>
<type>String</type>
<required>optional</required>
<max_length>80</max_length>
<desc>出版社名称&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>publish_ym</name>
<type>String</type>
<required>optional</required>
<desc>出版时间，格式必须注意：年份/月份</desc>
</param>
<param>
<name>regin_year</name>
<type>String</type>
<required>optional</required>
<max_length>10</max_length>
<desc>年号，必须是完整的年份，如：2013，当输入的值不是四位或者首位大于2时，调接口失败&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>scholisat</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>注释者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>series_books_name</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>丛书名&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>spu_img</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>此字段废弃&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>summary</name>
<type>String</type>
<required>optional</required>
<max_length>5000</max_length>
<desc>简介，不支持HTML代码，长度不能超过5000&lt;br /&gt; 支持最大长度为：5000&lt;br /&gt; 支持的最大列表长度为：5000</desc>
</param>
<param>
<name>translator</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>译者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>product_books</name>
<type>ProductBooks</type>
<level>Object</level>
<desc>请求相应结构</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.spec.add</name>
<desc>增加产品规格</desc>
<request>
<param>
<name>barcode</name>
<type>String</type>
<required>optional</required>
<desc>产品二维码</desc>
</param>
<param>
<name>certified_pic_str</name>
<type>String</type>
<required>optional</required>
<desc>存放产品规格认证类型-认证图片url映射信息，格式为k:v;k:v;，其中key为认证类型数字id，value为调用tmall.product.spec.pic.upload返回的认证图片url文本</desc>
</param>
<param>
<name>certified_txt_str</name>
<type>String</type>
<required>optional</required>
<desc>存放产品规格认证类型-认证文本映射信息，格式为k:v;k:v;，其中key为认证类型数字id，value为认证文本值</desc>
</param>
<param>
<name>change_prop</name>
<type>String</type>
<required>optional</required>
<desc>产品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1</desc>
</param>
<param>
<name>customer_spec_props</name>
<type>String</type>
<required>optional</required>
<desc>用户自定义销售属性，结构：pid1:value1;pid2:value2。在</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<desc>产品图片</desc>
</param>
<param>
<name>label_price</name>
<type>Number</type>
<required>optional</required>
<max_value>999999999</max_value>
<min_value>0</min_value>
<desc>产品规格吊牌价，以分为单位，无默认值，上限999999999&lt;br /&gt; 支持最大值为：999999999&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>market_time</name>
<type>Date</type>
<required>optional</required>
<desc>产品上市时间</desc>
</param>
<param>
<name>product_code</name>
<type>String</type>
<required>optional</required>
<desc>产品货号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>spec_props</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格属性</desc>
</param>
<param>
<name>spec_props_alias</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>规格属性别名,只允许传颜色别名&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
</request>
<response>
<param>
<name>product_spec</name>
<type>ProductSpec</type>
<level>Object</level>
<desc>产品规格对象</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.spec.get</name>
<desc>通过当个的spec_id获取到这个产品规格的信息，主要是因为产品规格是要经过审核的，所以通过这个接口可以获取到是否通过审核 
通过参看这个ProductSpec的status判断： 
1:表示审核通过 
3:表示等待审核。 
如果你的id找不到数据，那么就是审核被拒绝。</desc>
<request>
<param>
<name>spec_id</name>
<type>Number</type>
<required>required</required>
<desc>要获取信息的产品规格信息。</desc>
</param>
</request>
<response>
<param>
<name>product_spec</name>
<type>ProductSpec</type>
<level>Object</level>
<desc>返回的产品规格信息，注意，这个产品规格信息可能是等待审核的，不一定可用。根据状态判断1：表示审核通过 
3：表示等待审核。</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.spec.pic.upload</name>
<desc>上传指定类型的产品规格认证文件，并返回存有上传成功图片url的产品规格对象</desc>
<request>
<param>
<name>certify_pic</name>
<type>byte[]</type>
<required>required</required>
<desc>上传的认证图片文件</desc>
</param>
<param>
<name>certify_type</name>
<type>Number</type>
<required>required</required>
<desc>上传的认证图片的认证类型&lt;br&gt;
1：代表产品包装正面图&lt;br&gt;
2：代表完整产品资质&lt;br&gt;
3：代表产品包装反面图&lt;br&gt;
4：代表产品包装侧面图&lt;br&gt;
5：代表产品包装条形码特写&lt;br&gt;
6：代表特殊用途化妆品批准文号&lt;br&gt;
7：代表3C认证图标&lt;br&gt;</desc>
</param>
</request>
<response>
<param>
<name>spec_pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>上传成功的产品规格认证图片url</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.specs.get</name>
<desc>按product_id或品牌下载产品规格，返回一组的产品规格信息。</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>optional</required>
<desc>类目的ID号，该id必须和properties同时传入。 
而且只有当product_id不传入的时候才起效果。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品的ID。这个不能和properties和cat_id同时起效果</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>关键属性的字符串，pid:vid;pid:vid 
该字段必须和cat_id同时传入才起效果。 而且只有当product_id不传入的时候才起效果。</desc>
</param>
</request>
<response>
<param>
<name>product_specs</name>
<type>ProductSpec</type>
<level>Object Array</level>
<desc>返回一组产品规格信息。</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.specs.ticket.get</name>
<desc>批量根据specId查询产品规格审核信息包括产品规格状态，申请人，拒绝原因等</desc>
<request>
<param>
<name>spec_ids</name>
<type>String</type>
<required>required</required>
<desc>产品规格ID，多个用逗号分隔</desc>
</param>
</request>
<response>
<param>
<name>tickets</name>
<type>Ticket</type>
<level>Object Array</level>
<desc>产品规格审核单信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.suitespecs.get</name>
<desc>套装产品，关联规格获取，和tmall.product.specs.get相似。仅现套装的情况下使用，返回的规格number有直</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>optional</required>
<desc>类目的ID号，该id必须和properties同时传入。 
而且只有当product_id不传入的时候才起效果。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品的ID。这个不能和properties和cat_id同时起效果</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>关键属性的字符串，pid:vid;pid:vid 
该字段必须和cat_id同时传入才起效果。 而且只有当product_id不传入的时候才起效果。</desc>
</param>
</request>
<response>
<param>
<name>product_specs</name>
<type>ProductSpec</type>
<level>Object Array</level>
<desc>返回一组产品规格信息。</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.template.get</name>
<desc>产品模板获取接口，对于非关键属性的类目，发布达尔文(监管)产品时，必须先根据类目获取产品模板。&lt;br/&gt; 
产品模板定义产品发布需要的类目属性，包括：&lt;br/&gt; 
   关键属性:关键属性可以在类目上不存在。不存在的PID，默认为输入，没有子属性。属性名称在prop_name_str中取 
   绑定属性:内容为属性ID(PID)的列表,绑定属性肯定在类目上有，对应属性的类目特征，子属性请根据PID到类目上去取&lt;br/&gt; 
   过滤属性:内容有属性ID(PID)列表，很重要的属性，filter_properties包含的属性，必须填写&lt;br/&gt; 
   如果获取不到模板，非关键属性类目是不能发布产品的&lt;br/&gt;</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>类目ID</desc>
</param>
</request>
<response>
<param>
<name>template</name>
<type>SpuTemplateDO</type>
<level>Object</level>
<desc>见SpuTemplateDO说明</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.amount.get</name>
<desc>卖家查询该笔交易订单的资金帐务相关的数据； 
1. 只供卖家使用，买家不可使用 
2. 可查询所有的状态的订单，但不同状态时订单的相关数据可能会有不同</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>订单帐务详情需要返回的字段信息，可选值如下： 
1. TradeAmount中可指定的fields： 
tid,alipay_no,created,pay_time,end_time,total_fee,payment,post_fee,cod_fee,commission_fee,buyer_obtain_point_fee 
2. OrderAmount中可指定的fields：order_amounts.oid,order_amounts.title,order_amounts.num_iid, 
order_amounts.sku_properties_name,order_amounts.sku_id,order_amounts.num,order_amounts.price,order_amounts.discount_fee,order_amounts.adjust_fee,order_amounts.payment,order_amounts.promotion_name 
3. order_amounts(返回OrderAmount的所有内容) 
4. promotion_details(指定该值会返回主订单的promotion_details中除id之外的所有字段)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>-9223372036854775808</min_value>
<desc>订单交易编号&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：-9223372036854775808</desc>
</param>
</request>
<response>
<param>
<name>trade_amount</name>
<type>TradeAmount</type>
<level>Object</level>
<desc>主订单的财务信息详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.close</name>
<desc>关闭一笔订单，可以是主订单或子订单。当订单从创建到关闭时间小于10s的时候，会报“CLOSE_TRADE_TOO_FAST”错误。</desc>
<request>
<param>
<name>close_reason</name>
<type>String</type>
<required>required</required>
<desc>交易关闭原因。可以选择的理由有：
1.未及时付款
2.买家联系不上
3.谢绝还价
4.商品瑕疵
5.协商不一致
6.买家不想买
7.与买家协商一致</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单或子订单编号。</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>关闭交易时返回的Trade信息，可用字段有tid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.confirmfee.get</name>
<desc>获取交易确认收货费用 
可以获取主订单或子订单的确认收货费用</desc>
<request>
<param>
<name>is_detail</name>
<type>String</type>
<required>required</required>
<desc>是否是子订单。可选值:IS_FATHER(父订单),IS_CHILD(子订单)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号，或子订单编号</desc>
</param>
</request>
<response>
<param>
<name>trade_confirm_fee</name>
<type>TradeConfirmFee</type>
<level>Object</level>
<desc>获取到的交易确认收货费用</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.fullinfo.get</name>
<desc>获取单笔交易的详细信息 
&lt;br/&gt;1. 只有在交易成功的状态下才能取到交易佣金，其它状态下取到的都是零或空值  
&lt;br/&gt;2. 只有单笔订单的情况下Trade数据结构中才包含商品相关的信息  
&lt;br/&gt;3. 获取到的Order中的payment字段在单笔子订单时包含物流费用，多笔子订单时不包含物流费用 
&lt;br/&gt;4. 请按需获取字段，减少TOP系统的压力</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>1.Trade中可以指定返回的fields：seller_nick, buyer_nick, title, type, created, tid, seller_rate,buyer_flag, buyer_rate, status, payment, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no,alipay_id,buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D,buyer_email,buyer_area, trade_from,is_lgtype,is_force_wlb,is_brand_sale,buyer_cod_fee,discount_fee,seller_cod_fee,express_agency_fee,invoice_name,service_orders,credit_cardfee,step_trade_status,step_paid_fee,mark_desc,has_yfx,yfx_fee,yfx_id,yfx_type,trade_source(注：当该授权用户为卖家时不能查看买家buyer_memo,buyer_flag),eticket_ext,send_time, is_daixiao,is_part_consign, arrive_interval, arrive_cut_time, consign_interval,zero_purchase,alipay_point,pcc_af,2.Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, orders.item_meal_id,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.is_oversold,orders.end_time,orders.order_from,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no, orders.is_daixiao 
3.fields：orders（返回Order的所有内容） 
4.flelds：promotion_details(返回promotion_details所有内容，优惠详情),invoice_name(发票抬头),orders.is_www(子订单是否是www订单,orders.store_code(发货的仓库编码)&lt;br&gt; 
5. field:service_tags(返回物流标签)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>1</min_value>
<desc>交易编号&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.get</name>
<desc>获取单笔交易的部分信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：&lt;br&gt;

1. Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type， is_daixiao，consign_interval，arrive_interval，arrive_cut_time &lt;br&gt;
2. Order中可以指定返回fields:orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.outer_sku_id, orders.outer_iid, orders.buyer_rate, orders.seller_rate， orders.is_daixiao &lt;br&gt;
3. fields：orders（返回Order中的所有允许返回的字段）,orders.is_wwww(是否是www订单),orders.store_code(仓库代码）&lt;br&gt;
4. field:service_tags(返回物流标签)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.memo.add</name>
<desc>根据登录用户的身份（买家或卖家），自动添加相应的交易备注,不能重复调用些接口添加备注，需要更新备注请用taobao.trade.memo.update</desc>
<request>
<param>
<name>flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>0</min_value>
<desc>交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0&lt;br /&gt; 支持最大值为：5&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>交易备注。最大长度: 1000个字节</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>对一笔交易添加备注后返回其对应的Trade，Trade中可用的返回字段有tid和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.memo.update</name>
<desc>需要商家或以上权限才可调用此接口，可重复调用本接口更新交易备注，本接口同时具有添加备注的功能</desc>
<request>
<param>
<name>flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>0</min_value>
<desc>卖家交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0&lt;br /&gt; 支持最大值为：5&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<desc>卖家交易备注。最大长度: 1000个字节</desc>
</param>
<param>
<name>reset</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否对memo的值置空 
若为true，则不管传入的memo字段的值是否为空，都将会对已有的memo值清空，慎用； 
若用false，则会根据memo是否为空来修改memo的值：若memo为空则忽略对已有memo字段的修改，若memo非空，则使用新传入的memo覆盖已有的memo的值</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>更新交易的备注信息后返回的Trade，其中可用字段为tid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.ordersku.update</name>
<desc>只能更新发货前子订单的销售属性  
只能更新价格相同的销售属性。对于拍下减库存的交易会同步更新销售属性的库存量。对于旺店的交易，要使用商品扩展信息中的SKU价格来比较。  
必须使用sku_id或sku_props中的一个参数来更新，如果两个都传的话，sku_id优先</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>子订单编号（对于单笔订单的交易可以传交易编号）。</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>special</required>
<desc>销售属性编号，可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
</param>
<param>
<name>sku_props</name>
<type>String</type>
<required>special</required>
<desc>销售属性组合串，格式：p1:v1;p2:v2，如：1627207:28329;20509:28314。可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
</param>
</request>
<response>
<param>
<name>order</name>
<type>Order</type>
<level>Object</level>
<desc>只返回oid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.postage.update</name>
<desc>修改订单邮费接口，通过传入订单编号和邮费价格，修改订单的邮费，返回修改时间modified,邮费post_fee,总费用total_fee。</desc>
<request>
<param>
<name>post_fee</name>
<type>String</type>
<required>required</required>
<desc>邮费价格(邮费单位是元）</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>返回trade类型，其中包含修改时间modified，修改邮费post_fee，修改后的总费用total_fee和买家实付款payment</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.receivetime.delay</name>
<desc>延长交易收货时间</desc>
<request>
<param>
<name>days</name>
<type>Number</type>
<required>required</required>
<max_value>10</max_value>
<min_value>3</min_value>
<desc>延长收货的天数，可选值为：3, 5, 7, 10。&lt;br /&gt; 支持最大值为：10&lt;br /&gt; 支持最小值为：3</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>更新后的交易数据，只包括tid和modified两个字段。</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.shippingaddress.update</name>
<desc>只能更新一笔交易里面的买家收货地址  
只能更新发货前（即买家已付款，等待卖家发货状态）的交易的买家收货地址  
更新后的发货地址可以通过taobao.trade.fullinfo.get查到  
参数中所说的字节为GBK编码的（英文和数字占1字节，中文占2字节）</desc>
<request>
<param>
<name>receiver_address</name>
<type>String</type>
<required>optional</required>
<max_length>228</max_length>
<desc>收货地址。最大长度为228个字节。&lt;br /&gt; 支持最大长度为：228&lt;br /&gt; 支持的最大列表长度为：228</desc>
</param>
<param>
<name>receiver_city</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>城市。最大长度为32个字节。如：杭州&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>receiver_district</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>区/县。最大长度为32个字节。如：西湖区&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>receiver_mobile</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>移动电话。最大长度为30个字节。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<max_length>50</max_length>
<desc>收货人全名。最大长度为50个字节。&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>receiver_phone</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>固定电话。最大长度为30个字节。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>receiver_state</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>省份。最大长度为32个字节。如：浙江&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>receiver_zip</name>
<type>String</type>
<required>optional</required>
<max_length>6</max_length>
<desc>邮政编码。必须由6个数字组成。&lt;br /&gt; 支持最大长度为：6&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号。</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>交易结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.snapshot.get</name>
<desc>交易快照查询 
目前只支持类型为“旺店标准版(600)”或“旺店入门版(610)”的交易  
对于“旺店标准版”类型的交易，返回的snapshot字段为交易快照编号  
对于“旺店入门版”类型的交易，返回的snapshot字段为JSON结构的数据(其中的shopPromotion包含了优惠，积分等信息）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段列表。现只支持："snapshot"字段</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>只包含Trade中的tid和snapshot、子订单Order中的oid和snapshot</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.get</name>
<desc>搜索当前会话用户作为卖家已卖出的交易数据（只能获取到三个月以内的交易信息） 
&lt;br/&gt;1. 返回的数据结果是以订单的创建时间倒序排列的。 
&lt;br/&gt;2. 返回的数据结果只包含了订单的部分数据，可通过taobao.trade.fullinfo.get获取订单详情。 
&lt;br/&gt; &lt;span style="color:red"&gt;注意：type字段的说明，如果该字段不传，接口默认只查4种类型订单，非默认查询的订单是不返回。遇到订单查不到的情况的，通常都是这个原因造成。解决办法就是type加上订单类型就可正常返回了。用taobao.trade.fullinfo.get 查订单fields返回type 很容易的能知道订单的类型（type）&lt;/span&gt;</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>查询交易创建时间结束。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：&lt;br&gt; 
1. Trade中可以指定返回的fields:&lt;br&gt; 
seller_nick, buyer_nick, title, type, created,  tid, seller_rate,seller_can_rate, buyer_rate,can_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment,  pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,buyer_area,has_buyer_message, credit_card_fee, lg_aging_type, lg_aging, step_trade_status,step_paid_fee,mark_desc,has_yfx,yfx_fee,yfx_id,yfx_type,trade_source,send_time,is_daixiao,is_wt,is_part_consign,zero_purchase 
&lt;br&gt; 
2. Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.end_time,orders.order_from,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no,orders.is_daixiao&lt;br&gt; 
3. fields：orders（返回2中Order的所有内容） 
4.fields:service_orders(返回service_order中所有内容)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
</param>
<param>
<name>rate_status</name>
<type>String</type>
<required>optional</required>
<desc>评价状态，默认查询所有评价状态的数据，除了默认值外每次只能查询一种状态。&lt;br&gt;
可选值：
RATE_UNBUYER(买家未评)
RATE_UNSELLER(卖家未评)
RATE_BUYER_UNSELLER(买家已评，卖家未评)
RATE_UNBUYER_SELLER(买家未评，卖家已评)
RATE_BUYER_SELLER(买家已评,卖家已评)</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>查询三个月内交易创建时间开始。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 
可选值： 
TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
WAIT_BUYER_PAY(等待买家付款) 
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
SELLER_CONSIGNED_PART（卖家部分发货） 
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
TRADE_FINISHED(交易成功) 
TRADE_CLOSED(交易关闭) 
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) 
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) 
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO) 
WAIT_PRE_AUTH_CONFIRM(余额宝0元购合约中)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。&lt;span style="color:red;font-weight: bold;"&gt;默认同时查询guarantee_trade, auto_delivery, ec, cod,step的5种交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。&lt;/span&gt; 
可选值： 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
step(分阶段付款，万人团，阶梯团订单） 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) 
cod(货到付款) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易) 
instant_trade (即时到账) 
b2c_cod(大商家货到付款) 
hotel_trade(酒店类型交易) 
super_market_trade(商超交易) 
super_market_cod_trade(商超货到付款交易) 
taohua(淘花网交易类型） 
waimai(外卖交易类型） 
nopaid（即时到帐/趣味猜交易类型） 
step (万人团) eticket(电子凭证)  
tmall_i18n（天猫国际）;nopaid （无付款交易）insurance_plus（保险）finance（基金） 
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。 
pre_auth_type(预授权0元购)</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量交易，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.increment.get</name>
<desc>搜索当前会话用户作为卖家已卖出的增量交易数据（只能获取到三个月以内的交易信息） 
&lt;br/&gt;1. 一次请求只能查询时间跨度为一天的增量交易记录，即end_modified - start_modified &lt;= 1天。 
&lt;br/&gt;2. 返回的数据结果是以订单的修改时间倒序排列的，通过从后往前翻页的方式可以避免漏单问题。 
&lt;br/&gt;3. 返回的数据结果只包含了订单的部分数据，可通过taobao.trade.fullinfo.get获取订单详情。 
&lt;br/&gt;4. &lt;span style="color:red"&gt;使用&lt;a href="http://open.taobao.com/doc/detail.htm?spm=0.0.0.0.F9TTxy&amp;id=101744"&gt;消息服务&lt;/a&gt;监听订单变更事件，可以实时获取订单更新数据。&lt;/span&gt; 
&lt;br/&gt;注意：type字段的说明，如果该字段不传，接口默认只查4种类型订单，非默认查询的订单是不返回。遇到订单查不到的情况的，通常都是这个原因造成。解决办法就是type加上订单类型就可正常返回了。用taobao.trade.fullinfo.get 查订单fields返回type 很容易的能知道订单的类型（type）</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。&lt;span style="color:red;font-weight: bold;"&gt;建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率&lt;/span&gt;。</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有： 
1.Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate,seller_can_rate, buyer_rate,can_rate,status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment,pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,has_buyer_message,credit_card_fee,step_trade_status,step_paid_fee,mark_desc,send_time,,has_yfx,yfx_fee,yfx_id,yfx_type,trade_source,seller_flag,is_daixiao,is_part_consign,zero_purchase 
2.Order中可以指定返回fields： 
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type，orders.end_time,,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no,orders.is_daixiao 
3.fields：orders（返回Order的所有内容） 
4.fields:service_orders(返回service_order中所有内容)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数;默认值:1。&lt;span style="color:red;font-weight: bold;"&gt;注：必须采用倒序的分页方式（从最后一页往回取）才能避免漏单问题。&lt;/span&gt;</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围：1~100，默认值：40。&lt;span style="color:red;font-weight: bold;"&gt;建议使用40~50，可以提高成功率，减少超时数量&lt;/span&gt;。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 可选值 TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) 
SELLER_CONSIGNED_PART（卖家部分发货）  
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO) 
WAIT_PRE_AUTH_CONFIRM(余额宝0元购合约中)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。&lt;span style="color:red;font-weight: bold;"&gt;默认同时查询guarantee_trade, auto_delivery, ec, cod,step的5种交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。&lt;/span&gt; 
可选值： 
fixed(一口价) 
auction(拍卖) 
step（分阶段付款，万人团，阶梯团订单） 
guarantee_trade(一口价、拍卖) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易) 
instant_trade (即时到账) 
b2c_cod(大商家货到付款) 
hotel_trade(酒店类型交易) 
super_market_trade(商超交易), 
super_market_cod_trade(商超货到付款交易) 
taohua(桃花网交易类型） 
waimai(外卖交易类型） 
nopaid（即时到帐/趣味猜交易类型） 
 eticket(电子凭证)  
tmall_i18n（天猫国际）;nopaid（无付款交易）insurance_plus（保险）finance（基金） 
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。 
pre_auth_type(预授权0元购)</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，&lt;span style="color:red;font-weight: bold;"&gt;通过此种方式获取增量交易，效率在原有的基础上有80%的提升&lt;/span&gt;。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.incrementv.get</name>
<desc>搜索当前会话用户作为卖家已卖出的增量交易数据（只能获取到三个月以内的交易信息）  
&lt;br/&gt;1. 一次请求只能查询时间跨度为一天的增量交易记录，即end_create - start_create &lt;= 1天。  
&lt;br/&gt;2. 返回的数据结果是以订单入库时间的倒序排列的(该时间和订单修改时间不同)，通过从后往前翻页的方式可以避免漏单问题。  
&lt;br/&gt;3. 返回的数据结果只包含了订单的部分数据，可通过taobao.trade.fullinfo.get获取订单详情。  
&lt;br/&gt;4. 使用主动通知监听订单变更事件，可以实时获取订单更新数据。</desc>
<request>
<param>
<name>end_create</name>
<type>Date</type>
<required>required</required>
<desc>查询入库结束时间，必须大于入库开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。&lt;span style="color:red;font-weight: bold;"&gt;建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率&lt;/span&gt;。</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：
1.Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment,pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,has_buyer_message,credit_card_fee,step_trade_status,step_paid_fee,mark_desc，is_daixiao,is_part_consign
2.Order中可以指定返回fields：
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type，orders.end_time, orders.order_from,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no，orders.is_daixiao
3.fields：orders（返回Order的所有内容）
4.fields:service_orders(返回service_order中所有内容)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数;默认值:1。&lt;span style="color:red;font-weight: bold;"&gt;注：必须采用倒序的分页方式（从最后一页往回取）才能避免漏单问题。&lt;/span&gt;</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围：1~100，默认值：40。&lt;span style="color:red;font-weight: bold;"&gt;建议使用40~50，可以提高成功率，减少超时数量&lt;/span&gt;。</desc>
</param>
<param>
<name>start_create</name>
<type>Date</type>
<required>required</required>
<desc>查询入库开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 可选值 TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
SELLER_CONSIGNED_PART（卖家部分发货） 
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。&lt;span style="color:red;font-weight: bold;"&gt;默认同时查询guarantee_trade, auto_delivery, ec, cod,step的5种交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。&lt;/span&gt;
可选值：
fixed(一口价)
auction(拍卖)
step（分阶段付款，万人团，阶梯团订单）
guarantee_trade(一口价、拍卖)
independent_simple_trade(旺店入门版交易)
independent_shop_trade(旺店标准版交易)
auto_delivery(自动发货)
ec(直冲) cod(货到付款)
fenxiao(分销)
game_equipment(游戏装备)
shopex_trade(ShopEX交易)
netcn_trade(万网交易)
external_trade(统一外部交易)
instant_trade (即时到账)
b2c_cod(大商家货到付款)
hotel_trade(酒店类型交易)
super_market_trade(商超交易),
super_market_cod_trade(商超货到付款交易)
taohua(桃花网交易类型）
waimai(外卖交易类型）
nopaid（无付款订单）
eticket(电子凭证)
tmall_i18n（天猫国际）
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，&lt;span style="color:red;font-weight: bold;"&gt;通过此种方式获取增量交易，效率在原有的基础上有80%的提升&lt;/span&gt;。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.add</name>
<desc>新增单个评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不能再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>anony</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否匿名,卖家评不能匿名。可选值:true(匿名),false(非匿名)。注意：如果交易订单匿名，则评价也匿名</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<desc>子订单ID</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色,可选值:seller(卖家),buyer(买家)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易ID</desc>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<desc>返回tid、oid、create</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.explain.add</name>
<desc>商城卖家给评价做出解释（买家追加评论后、评价超过30天的，都不能再做评价解释）</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>子订单ID</desc>
</param>
<param>
<name>reply</name>
<type>String</type>
<required>required</required>
<desc>评价解释内容,最大长度: 500个汉字</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商城卖家给评价解释是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.impr.imprword.byaucid.get</name>
<desc>根据商品id获取这个商品id对应的大家印象</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝的商品id</desc>
</param>
</request>
<response>
<param>
<name>impr_word_list</name>
<type>ImprItemDO</type>
<level>Object Array</level>
<desc>返回的大家印象的结构体</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.impr.imprword.byfeedid.get</name>
<desc>根据卖家nick和交易id（如果是子订单，输入子订单id），查询到该条评价的大家印象标签</desc>
<request>
<param>
<name>child_trade_id</name>
<type>Number</type>
<required>required</required>
<desc>交易订单id号（如果包含子订单，请使用子订单id号）</desc>
</param>
</request>
<response>
<param>
<name>impr_feed</name>
<type>ImprFeedIdDO</type>
<level>Object</level>
<desc>根据子订单和买家昵称找到的评价和印象词结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.impr.imprwords.get</name>
<desc>根据淘宝后台类目的一级类目和叶子类目</desc>
<request>
<param>
<name>cat_leaf_id</name>
<type>Number</type>
<required>optional</required>
<desc>淘宝叶子类目id</desc>
</param>
<param>
<name>cat_root_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝一级类目id</desc>
</param>
</request>
<response>
<param>
<name>impr_words</name>
<type>String</type>
<level>Basic Array</level>
<desc>返回类目下所有大家印象的标签</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.list.add</name>
<desc>针对父子订单新增批量评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不用再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>anony</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否匿名，卖家评不能匿名。可选值:true(匿名),false(非匿名)。 注意：如果买家匿名购买，那么买家的评价默认匿名</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色。可选值:seller(卖家),buyer(买家)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易ID</desc>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<desc>返回的评论的信息，仅返回tid和created字段</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderates.get</name>
<desc>搜索评价信息，只能获取距今180天内的评价记录(只支持查询卖家给出或得到的评价)。</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>评价结束时间。如果只输入结束时间，那么全部返回所有评价数据。</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：TradeRate 结构中的所有字段，多个字段之间用“,”分隔</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>optional</required>
<desc>商品的数字ID</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数最大限制为200; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>150</max_value>
<min_value>1</min_value>
<desc>每页获取条数。默认值40，最小值1，最大值150。&lt;br /&gt; 支持最大值为：150&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>rate_type</name>
<type>String</type>
<required>required</required>
<desc>评价类型。可选值:get(得到),give(给出)</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>optional</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色即评价的发起方。可选值:seller(卖家),buyer(买家)。 当 give buyer 以买家身份给卖家的评价； 当 get seller 以买家身份得到卖家给的评价； 当 give seller 以卖家身份给买家的评价； 当 get buyer 以卖家身份得到买家给的评价。</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>评价开始时。如果只输入开始时间，那么能返回开始时间之后的评价数据。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易订单id，可以是父订单id号，也可以是子订单id号</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取评价信息，效率在原有的基础上有80%的提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>当使用use_has_next时返回信息，如果还有下一页则返回true</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的评价总数。相同的查询时间段条件下，最大只能获取总共1500条评价记录。所以当评价大于等于1500时 ISV可以通过start_date及end_date来进行拆分，以保证可以查询到全部数据</desc>
</param>
<param>
<name>trade_rates</name>
<type>TradeRate</type>
<level>Object Array</level>
<desc>评价列表。返回的TradeRate包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.traderate.cattags.get</name>
<desc>通过类目ID获取该类目下定义的所有标签</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>类目ID</desc>
</param>
</request>
<response>
<param>
<name>tags</name>
<type>TmallRateTag</type>
<level>Object Array</level>
<desc>该类目下的标签列表</desc>
</param>
</response>
</api>
<api>
<name>tmall.traderate.feeds.get</name>
<desc>通过子订单ID获取对应的评价，追评，以及对应的语义标签</desc>
<request>
<param>
<name>child_trade_id</name>
<type>Number</type>
<required>required</required>
<desc>交易子订单ID</desc>
</param>
</request>
<response>
<param>
<name>tmall_rate_info</name>
<type>TmallRateInfo</type>
<level>Object</level>
<desc>返回评价信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.traderate.itemtags.get</name>
<desc>通过商品ID获取标签详细信息</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>tags</name>
<type>TmallRateTagDetail</type>
<level>Object Array</level>
<desc>标签列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.areas.get</name>
<desc>查询标准地址区域代码信息。参考：http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201401/t20140116_501070.html</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Area 结构中的所有字段;多个字段之间用","分隔.如:id,type,name,parent_id,zip.</desc>
</param>
</request>
<response>
<param>
<name>areas</name>
<type>Area</type>
<level>Object Array</level>
<desc>地址区域信息列表.返回的Area包含的具体信息为入参fields请求的字段信息.</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.add</name>
<desc>新增运费模板</desc>
<request>
<param>
<name>assumer</name>
<type>Number</type>
<required>required</required>
<desc>可选值：0、1 ，说明如下&lt;br&gt;0:表示买家承担服务费;&lt;br&gt;1:表示卖家承担服务费</desc>
</param>
<param>
<name>consign_area_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家发货地址区域ID 
&lt;br/&gt;&lt;br/&gt;&lt;font color=blue&gt;可以不填，如果没有填写取卖家默认发货地址的区域ID，如果需要输入必须用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  
&lt;/font&gt; 
 
&lt;br/&gt;&lt;br/&gt;&lt;font color=red&gt;注意：填入该值时必须取您的发货地址最小区域级别ID，比如您的发货地址是：某省XX市xx区（县）时需要填入区(县)的ID，当然有些地方没有区或县可以直接填市级别的ID&lt;/font&gt;</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>运费模板的名称，长度不能超过50个字节&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>template_add_fees</name>
<type>String</type>
<required>required</required>
<desc>增费：输入0.00-999.99（最多包含两位小数） 
 
&lt;br/&gt;&lt;br/&gt;&lt;font color=blue&gt;增费必须小于等于首费，但是当首费为0时增费可以大于首费&lt;/font&gt; 
 
 
&lt;br/&gt;&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_add_standards</name>
<type>String</type>
<required>required</required>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br/&gt;&lt;font color=red&gt;当valuation(记价方式)为1时输入0.1-9999.9范围内的小数只能包含以为小数（单位为千克）&lt;br/&gt;&lt;font color=blue&gt;当valuation(记价方式)为3时输入0.1-999.9范围内的数值，数值只能包含一位小数（单位为 立方米）
&lt;br/&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_dests</name>
<type>String</type>
<required>required</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3,value4
&lt;br&gt;如:1,110000;1,110000;1,310000;1,320000,330000。 aredId解释(1=全国,110000=北京,310000=上海,320000=江苏,330000=浙江)
如果template_types设置为post;ems;exmpress;cod则表示为平邮(post)指定默认地区(全国)和北京地区的运费;其他的类似以分号区分一一对应
&lt;br/&gt;可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm&lt;br/&gt;
&lt;br/&gt;&lt;font color=red&gt;每个运费方式设置涉及的地区中必须包含全国地区（areaId=1）表示默认运费,可以只设置默认运费&lt;/font&gt;
&lt;br&gt;&lt;font color=blue&gt;注意:为多个地区指定指定不同（首费标准、首费、增费标准、增费一项不一样就算不同）的运费以逗号","区分，
template_start_standards(首费标准)、template_start_fees(首费)、
template_add_standards(增费标准)、
template_add_fees(增费)必须与template_types分号数量相同。如果为需要为多个地区指定相同运费则地区之间用“|”隔开即可。&lt;/font&gt;
&lt;font color=red&gt;如果卖家没有传入发货地址则默认地址库的发货地址&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_fees</name>
<type>String</type>
<required>required</required>
<desc>首费：输入0.00-999.99（最多包含两位小数）
&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_standards</name>
<type>String</type>
<required>required</required>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br/&gt;&lt;font color=red&gt;当valuation(记价方式)为1时输入0.1-9999.9范围内的小数只能包含以为小数（单位为千克）&lt;br/&gt;&lt;font color=blue&gt;当valuation(记价方式)为3时输入0.1-999.9范围内的数值，数值只能包含一位小数（单位为 立方米）
&lt;br/&gt;
&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_types</name>
<type>String</type>
<required>required</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems),货到付款(cod),物流宝保障速递(wlb),家装物流(furniture)结构:value1;value2;value3;value4 
如: post;express;ems;cod 
&lt;br/&gt;&lt;font color=red&gt;
注意:在添加多个运费方式时,字符串中使用 ";" 分号区分
。template_dests(指定地区)
template_start_standards(首费标准)、template_start_fees(首费)、template_add_standards(增费标准)、template_add_fees(增费)必须与template_types的分号数量相同. &lt;/font&gt;
&lt;br&gt;
&lt;font color=blue&gt;
注意：&lt;br/&gt;
1、post,ems,express三种运费方式必须填写一个&lt;br/&gt;
2、只有订购了货到付款用户可以填cod;只有家装物流用户可以填写furniture
只有订购了保障速递的用户可以填写bzsd,只有物流宝用户可以填写wlb&lt;br/&gt;
3、如果是货到付款用户当没有填写cod运送方式时，运费模板会默认继承express的费用为cod的费用&lt;br/&gt;
4、如果是保障速递户当没有填写bzsd运送方式时，运费模板会默认继承express的费用为bzsd的费用&lt;br/&gt;
5、由于3和4的原因所以当是货到付款用户或保障速递用户时如果没填写对应的运送方式express是必须填写的
&lt;/font&gt;</desc>
</param>
<param>
<name>valuation</name>
<type>Number</type>
<required>required</required>
<desc>可选值：0、1、3，说明如下。&lt;br&gt;0:表示按宝贝件数计算运费 &lt;br&gt;1:表示按宝贝重量计算运费
 &lt;br&gt;3:表示按宝贝体积计算运费</desc>
</param>
</request>
<response>
<param>
<name>delivery_template</name>
<type>DeliveryTemplate</type>
<level>Object</level>
<desc>模板对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.delete</name>
<desc>根据用户指定的模板ID删除指定的模板</desc>
<request>
<param>
<name>template_id</name>
<type>Number</type>
<required>required</required>
<desc>运费模板ID</desc>
</param>
</request>
<response>
<param>
<name>complete</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示删除成功还是失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.get</name>
<desc>获取用户指定运费模板信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。 &lt;br/&gt;  
&lt;B&gt; 
可选值:示例中的值;各字段之间用","隔开 
&lt;/B&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=blue&gt; 
template_id：查询模板ID &lt;br/&gt;  
template_name:查询模板名称 &lt;br/&gt;  
assumer：查询服务承担放 &lt;br/&gt;  
valuation:查询计价规则 &lt;br/&gt;  
supports:查询增值服务列表 &lt;br/&gt;  
created:查询模板创建时间 &lt;br/&gt;  
modified:查询修改时间&lt;br/&gt;  
consign_area_id:运费模板上设置的卖家发货地址最小级别ID&lt;br/&gt;  
address:卖家地址信息 
&lt;/font&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=bule&gt; 
query_cod:查询货到付款运费信息&lt;br/&gt;  
query_post:查询平邮运费信息 &lt;br/&gt;  
query_express:查询快递公司运费信息 &lt;br/&gt;  
query_ems:查询EMS运费信息&lt;br/&gt;  
query_bzsd:查询普通保障速递运费信息&lt;br/&gt;  
query_wlb:查询物流宝保障速递运费信息&lt;br/&gt;  
query_furniture:查询家装物流运费信息 
&lt;font color=blue&gt; 
&lt;br/&gt;&lt;br/&gt; 
&lt;font color=red&gt;不能有空格&lt;/font&gt;</desc>
</param>
<param>
<name>template_ids</name>
<type>Field List</type>
<required>required</required>
<desc>需要查询的运费模板ID列表</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>optional</required>
<desc>在没有登录的情况下根据淘宝用户昵称查询指定的模板</desc>
</param>
</request>
<response>
<param>
<name>delivery_templates</name>
<type>DeliveryTemplate</type>
<level>Object Array</level>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.update</name>
<desc>修改运费模板</desc>
<request>
<param>
<name>assumer</name>
<type>Number</type>
<required>optional</required>
<desc>可选值：0,1 &lt;br&gt;  说明&lt;br&gt;0:表示买家承担服务费;&lt;br&gt;1:表示卖家承担服务费</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>模板名称，长度不能大于50个字节</desc>
</param>
<param>
<name>template_add_fees</name>
<type>String</type>
<required>required</required>
<desc>增费：输入0.00-999.99（最多包含两位小数）&lt;br/&gt;&lt;font color=blue&gt;增费可以为0&lt;/font&gt;&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_add_standards</name>
<type>String</type>
<required>required</required>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;增费标准目前只能为1&lt;/font&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_dests</name>
<type>String</type>
<required>required</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3,value4
&lt;br&gt;如:1,110000;1,110000;1,310000;1,320000,330000。 aredId解释(1=全国,110000=北京,310000=上海,320000=江苏,330000=浙江)
如果template_types设置为post;ems;exmpress;cod则表示为平邮(post)指定默认地区(全国)和北京地区的运费;其他的类似以分号区分一一对应
&lt;br/&gt;可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm
&lt;br/&gt;&lt;font color=red&gt;每个运费方式设置的设涉及地区中必须包含全国地区（areaId=1）表示默认运费,可以只设置默认运费&lt;/font&gt;
&lt;br&gt;&lt;font color=blue&gt;注意:为多个地区指定指定不同（首费标准、首费、增费标准、增费一项不一样就算不同）的运费以逗号","区分，
template_start_standards(首费标准)、template_start_fees(首费)、
template_add_standards(增费标准)、
template_add_fees(增费)必须与template_types分号数量相同。如果为需要为多个地区指定相同运费则地区之间用“|”隔开即可。&lt;/font&gt;</desc>
</param>
<param>
<name>template_id</name>
<type>Number</type>
<required>required</required>
<desc>需要修改的模板对应的模板ID</desc>
</param>
<param>
<name>template_start_fees</name>
<type>String</type>
<required>required</required>
<desc>首费：输入0.01-999.99（最多包含两位小数） 
&lt;br/&gt;&lt;font color=blue&gt; 首费不能为0&lt;/font&gt;&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_standards</name>
<type>String</type>
<required>required</required>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;首费标准目前只能为1&lt;/br&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_types</name>
<type>String</type>
<required>required</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems),货到付款(cod)结构:value1;value2;value3;value4  
如: post;express;ems;cod  
&lt;br/&gt;&lt;font color=red&gt; 
注意:在添加多个运费方式时,字符串中使用 ";" 分号区分。template_dests(指定地区) template_start_standards(首费标准)、template_start_fees(首费)、template_add_standards(增费标准)、template_add_fees(增费)必须与template_types的分号数量相同.  
 &lt;/font&gt; 
&lt;br/&gt; 
&lt;font color=blue&gt; 
普通用户：post,ems,express三种运费方式必须填写一个，不能填写cod。 
货到付款用户：如果填写了cod运费方式，则post,ems,express三种运费方式也必须填写一个，如果没有填写cod则填写的运费方式中必须存在express&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>complete</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.templates.get</name>
<desc>根据用户ID获取用户下所有模板</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。 &lt;br/&gt;  
&lt;B&gt; 
可选值:示例中的值;各字段之间用","隔开 
&lt;/B&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=blue&gt; 
template_id：查询模板ID &lt;br/&gt;  
template_name:查询模板名称 &lt;br/&gt;  
assumer：查询服务承担放 &lt;br/&gt;  
valuation:查询计价规则 &lt;br/&gt;  
supports:查询增值服务列表 &lt;br/&gt;  
created:查询模板创建时间 &lt;br/&gt;  
modified:查询修改时间&lt;br/&gt;  
consign_area_id:运费模板上设置的卖家发货地址最小级别ID&lt;br/&gt;  
address:卖家地址信息 
&lt;/font&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=bule&gt; 
query_cod:查询货到付款运费信息&lt;br/&gt;  
query_post:查询平邮运费信息 &lt;br/&gt;  
query_express:查询快递公司运费信息 &lt;br/&gt;  
query_ems:查询EMS运费信息&lt;br/&gt;  
query_bzsd:查询普通保障速递运费信息&lt;br/&gt;  
query_wlb:查询物流宝保障速递运费信息&lt;br/&gt;  
query_furniture:查询家装物流运费信息 
&lt;font color=blue&gt; 
&lt;br/&gt;&lt;br/&gt; 
&lt;font color=red&gt;不能有空格&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>delivery_templates</name>
<type>DeliveryTemplate</type>
<level>Object Array</level>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.add</name>
<desc>通过此接口新增卖家地址库,卖家最多可添加5条地址库,新增第一条卖家地址，将会自动设为默认地址库</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</param>
<param>
<name>cancel_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认退货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认退货地址，撤消原默认退货地址&lt;/font&gt;</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在市</desc>
</param>
<param>
<name>contact_name</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名 &lt;font color='red'&gt;长度不可超过20个字节&lt;/font&gt;</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>区、县 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
<param>
<name>get_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认取货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认取货地址，撤消原默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>备注,&lt;br&gt;&lt;font color='red'&gt;备注不能超过256字节&lt;/font&gt;&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>手机号码，手机与电话必需有一个 
&lt;br&gt;&lt;font color='red'&gt;手机号码不能超过20位&lt;/font&gt;</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>special</required>
<desc>电话号码,手机与电话必需有一个</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>所在省</desc>
</param>
<param>
<name>seller_company</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>公司名称,&lt;br&gt;&lt;font color="red"&gt;公司名称长能不能超过20字节&lt;/font&gt;&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>地区邮政编码 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改日期modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.modify</name>
<desc>卖家地址库修改</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</param>
<param>
<name>cancel_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认退货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认退货地址，撤消原默认退货地址&lt;/font&gt;</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在市</desc>
</param>
<param>
<name>contact_id</name>
<type>Number</type>
<required>required</required>
<desc>地址库ID</desc>
</param>
<param>
<name>contact_name</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名 
&lt;font color='red'&gt;长度不可超过20个字节&lt;/font&gt;</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>区、县 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
<param>
<name>get_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认取货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认取货地址，撤消原默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<desc>备注,&lt;br&gt;&lt;font color='red'&gt;备注不能超过256字节&lt;/font&gt;</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>手机号码，手机与电话必需有一个 &lt;br&gt;&lt;font color='red'&gt;手机号码不能超过20位&lt;/font&gt;</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>special</required>
<desc>电话号码,手机与电话必需有一个</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>所在省</desc>
</param>
<param>
<name>seller_company</name>
<type>String</type>
<required>optional</required>
<desc>公司名称, 
&lt;br&gt;&lt;font color='red'&gt;公司名称长能不能超过20字节&lt;/font&gt;</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>地区邮政编码 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改时间modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.remove</name>
<desc>用此接口删除卖家地址库</desc>
<request>
<param>
<name>contact_id</name>
<type>Number</type>
<required>required</required>
<desc>地址库ID</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改日期modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.search</name>
<desc>通过此接口查询卖家地址库，</desc>
<request>
<param>
<name>rdef</name>
<type>String</type>
<required>optional</required>
<desc>可选，参数列表如下：&lt;br&gt;&lt;font color='red'&gt;
no_def:查询非默认地址&lt;br&gt;
get_def:查询默认取货地址&lt;br&gt;
cancel_def:查询默认退货地址&lt;br&gt;
缺省此参数时，查询所有当前用户的地址库
&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>addresses</name>
<type>AddressResult</type>
<level>Object Array</level>
<desc>一组地址库数据，</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.companies.get</name>
<desc>查询淘宝网合作的物流公司信息，用于发货接口。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值:LogisticCompany 结构中的所有字段;多个字段间用","逗号隔开. 
如:id,code,name,reg_mail_no 
&lt;br&gt;&lt;font color='red'&gt;说明：&lt;/font&gt; 
&lt;br&gt;id：物流公司ID 
&lt;br&gt;code：物流公司code 
&lt;br&gt;name：物流公司名称 
&lt;br&gt;reg_mail_no：物流公司对应的运单规则</desc>
</param>
<param>
<name>is_recommended</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否查询推荐物流公司.可选值:true,false.如果不提供此参数,将会返回所有支持电话联系的物流公司.</desc>
</param>
<param>
<name>order_mode</name>
<type>String</type>
<required>optional</required>
<desc>推荐物流公司的下单方式.可选值:offline(电话联系/自己联系),online(在线下单),all(即电话联系又在线下单). 此参数仅仅用于is_recommended 为ture时。就是说对于推荐物流公司才可用.如果不选择此参数将会返回推荐物流中支持电话联系的物流公司.</desc>
</param>
</request>
<response>
<param>
<name>logistics_companies</name>
<type>LogisticsCompany</type>
<level>Object Array</level>
<desc>物流公司信息。返回的LogisticCompany包含的具体信息为入参fields请求的字段信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.consign.order.createandsend</name>
<desc>创建物流订单，并发货。</desc>
<request>
<param>
<name>company_id</name>
<type>Number</type>
<required>required</required>
<desc>物流公司ID</desc>
</param>
<param>
<name>item_json_string</name>
<type>String</type>
<required>required</required>
<desc>物品的json数据。</desc>
</param>
<param>
<name>logis_type</name>
<type>Number</type>
<required>required</required>
<desc>物流订单物流类型，值固定选择：2</desc>
</param>
<param>
<name>mail_no</name>
<type>String</type>
<required>optional</required>
<desc>运单号</desc>
</param>
<param>
<name>order_source</name>
<type>Number</type>
<required>required</required>
<desc>订单来源，值选择：30</desc>
</param>
<param>
<name>order_type</name>
<type>Number</type>
<required>required</required>
<desc>订单类型，值固定选择：30</desc>
</param>
<param>
<name>r_address</name>
<type>String</type>
<required>required</required>
<desc>收件人街道地址</desc>
</param>
<param>
<name>r_area_id</name>
<type>Number</type>
<required>required</required>
<desc>收件人区域ID</desc>
</param>
<param>
<name>r_city_name</name>
<type>String</type>
<required>required</required>
<desc>市</desc>
</param>
<param>
<name>r_dist_name</name>
<type>String</type>
<required>optional</required>
<desc>区</desc>
</param>
<param>
<name>r_mobile_phone</name>
<type>String</type>
<required>optional</required>
<desc>手机号码</desc>
</param>
<param>
<name>r_name</name>
<type>String</type>
<required>required</required>
<desc>收件人名称</desc>
</param>
<param>
<name>r_prov_name</name>
<type>String</type>
<required>required</required>
<desc>省</desc>
</param>
<param>
<name>r_telephone</name>
<type>String</type>
<required>optional</required>
<desc>电话号码</desc>
</param>
<param>
<name>r_zip_code</name>
<type>String</type>
<required>required</required>
<desc>收件人邮编</desc>
</param>
<param>
<name>s_address</name>
<type>String</type>
<required>required</required>
<desc>发件人街道地址</desc>
</param>
<param>
<name>s_area_id</name>
<type>Number</type>
<required>required</required>
<desc>发件人区域ID</desc>
</param>
<param>
<name>s_city_name</name>
<type>String</type>
<required>required</required>
<desc>市</desc>
</param>
<param>
<name>s_dist_name</name>
<type>String</type>
<required>optional</required>
<desc>区</desc>
</param>
<param>
<name>s_mobile_phone</name>
<type>String</type>
<required>optional</required>
<desc>手机号码</desc>
</param>
<param>
<name>s_name</name>
<type>String</type>
<required>required</required>
<desc>发件人名称</desc>
</param>
<param>
<name>s_prov_name</name>
<type>String</type>
<required>required</required>
<desc>省</desc>
</param>
<param>
<name>s_telephone</name>
<type>String</type>
<required>optional</required>
<desc>电话号码</desc>
</param>
<param>
<name>s_zip_code</name>
<type>String</type>
<required>required</required>
<desc>发件人出编</desc>
</param>
<param>
<name>shipping</name>
<type>String</type>
<required>optional</required>
<desc>费用承担方式 1买家承担运费 2卖家承担运费</desc>
</param>
<param>
<name>trade_id</name>
<type>Number</type>
<required>required</required>
<desc>交易流水号，淘外订单号或者商家内部交易流水号</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>required</required>
<desc>用户ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单ID</desc>
</param>
<param>
<name>result_desc</name>
<type>String</type>
<level>Basic</level>
<desc>结果描述</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.consign.resend</name>
<desc>支持卖家发货后修改物流公司和运单号;支持在线下单和自己联系两种发货方式;使用条件：&lt;br&gt; 
1、必须是已发货订单，自己联系发货的必须24小时内才可修改；在线下单的，必须下单后物流公司未揽收成功前才可修改； 
2、自己联系只能切换为自己联系的公司，在线下单也只能切换为在线下单的物流公司。</desc>
<request>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"代表中国邮政,"ZJS"代表宅急送。调用 taobao.logistics.companies.get 获取。
&lt;br&gt;&lt;font color='red'&gt;如果是货到付款订单，选择的物流公司必须支持货到付款发货方式&lt;/font&gt;</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.dummy.send</name>
<desc>用户调用该接口可实现无需物流（虚拟）发货,使用该接口发货，交易订单状态会直接变成卖家已发货</desc>
<request>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.offline.send</name>
<desc>用户调用该接口可实现自己联系发货（线下物流），使用该接口发货，交易订单状态会直接变成卖家已发货。不支持货到付款、在线下单类型的订单。</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。非淘宝官方物流合作公司，填写具体的物流公司名称，如“顺丰”。</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单
1表示拆单
0表示不拆单，默认值0</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>需要拆单发货的子订单集合，为空表示不做拆单发货。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.cancel</name>
<desc>调此接口取消发货的订单，重新选择物流公司发货。前提是物流公司未揽收货物。对未发货和已经被物流公司揽收的物流订单，是不能取消的。</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>成功与失败</desc>
</param>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
<param>
<name>recreated_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>重新创建物流订单id</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.confirm</name>
<desc>确认发货的目的是让交易流程继承走下去，确认发货后交易状态会由【买家已付款】变为【卖家已发货】，然后买家才可以确认收货，货款打入卖家账号。货到付款的订单除外</desc>
<request>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。&lt;br&gt;</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>只返回is_success：是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.send</name>
<desc>用户调用该接口可实现在线订单发货（支持货到付款） 
调用该接口实现在线下单发货，有两种情况：&lt;br&gt; 
&lt;font color='red'&gt;如果不输入运单号的情况：交易状态不会改变，需要调用taobao.logistics.online.confirm确认发货后交易状态才会变成卖家已发货。&lt;br&gt; 
如果输入运单号的情况发货：交易订单状态会直接变成卖家已发货 。&lt;/font&gt;</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。 
&lt;br&gt;&lt;font color='red'&gt;如果是货到付款订单，选择的物流公司必须支持货到付款发货方式&lt;/font&gt;</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>optional</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.order.create</name>
<desc>用户调用该接口可以创建物流订单。目前仅支持手工订单的创建，创建完毕后默认自动使用“自己联系”的方式发货并且初始状态为”已发货“。也可以通过可选参数选择是否发货以及何种方式进行发货。</desc>
<request>
<param>
<name>goods_names</name>
<type>String</type>
<required>required</required>
<desc>运送的货物名称列表，用|号隔开</desc>
</param>
<param>
<name>goods_quantities</name>
<type>String</type>
<required>required</required>
<desc>运送货物的数量列表，用|号隔开</desc>
</param>
<param>
<name>is_consign</name>
<type>Boolean</type>
<required>optional</required>
<desc>创建订单同时是否进行发货，默认发货。</desc>
</param>
<param>
<name>item_values</name>
<type>String</type>
<required>required</required>
<desc>运送货物的单价列表(注意：单位为分），用|号隔开</desc>
</param>
<param>
<name>logis_company_code</name>
<type>String</type>
<required>special</required>
<desc>发货的物流公司代码，如申通=STO，圆通=YTO。is_consign=true时，此项必填。</desc>
</param>
<param>
<name>logis_type</name>
<type>String</type>
<required>optional</required>
<desc>发货方式,默认为自己联系发货。可选值:ONLINE(在线下单)、OFFLINE(自己联系)。</desc>
</param>
<param>
<name>mail_no</name>
<type>String</type>
<required>special</required>
<desc>发货的物流公司运单号。在logis_type=OFFLINE且is_consign=true时，此项必填。</desc>
</param>
<param>
<name>receiver_address</name>
<type>String</type>
<required>required</required>
<desc>收货人详细地址，比如”浙江省^^^杭州市^^^下城区^^^文二路“，中间用“^^^”分隔</desc>
</param>
<param>
<name>receiver_mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>收货人手机号码（若此处为空，则电话必填）</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>required</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>receiver_telephone</name>
<type>String</type>
<required>special</required>
<desc>收货人电话号码（若此处为空，则手机号码必填）</desc>
</param>
<param>
<name>receiver_zip_code</name>
<type>String</type>
<required>required</required>
<desc>收货人邮编</desc>
</param>
<param>
<name>seller_wangwang_id</name>
<type>String</type>
<required>required</required>
<desc>卖家旺旺号</desc>
</param>
<param>
<name>sender_address</name>
<type>String</type>
<required>required</required>
<desc>发货人详细地址，比如”浙江省^^^杭州市^^^下城区^^^文二路“，中间用“^^^”分隔</desc>
</param>
<param>
<name>sender_mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>发货人手机号码（若此处为空，则电话必填）</desc>
</param>
<param>
<name>sender_name</name>
<type>String</type>
<required>required</required>
<desc>发货人姓名</desc>
</param>
<param>
<name>sender_telephone</name>
<type>String</type>
<required>special</required>
<desc>发货人电话号码（如此处为空，则手机号码必填）</desc>
</param>
<param>
<name>sender_zip_code</name>
<type>String</type>
<required>required</required>
<desc>发货人邮编</desc>
</param>
<param>
<name>shipping</name>
<type>Number</type>
<required>optional</required>
<desc>运费承担方式。1为买家承担运费，2为卖家承担运费，其他值为错误参数。</desc>
</param>
<param>
<name>trade_id</name>
<type>Number</type>
<required>optional</required>
<desc>订单的交易号码</desc>
</param>
</request>
<response>
<param>
<name>trade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝物流订单交易号，如返回-1则表示错误。如果在新建订单时传入trade_id,此处会返回此id，如果未传入trade_id，此处会返回淘宝物流分配的交易号码。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.order.shengxian.confirm</name>
<desc>优鲜送，生鲜业务使用该接口发货，交易订单状态会直接变成卖家已发货。不支持货到付款、在线下单类型的订单。</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>delivery_type</name>
<type>Number</type>
<required>optional</required>
<desc>1：冷链。0：常温</desc>
</param>
<param>
<name>logis_id</name>
<type>Number</type>
<required>optional</required>
<min_value>1000</min_value>
<desc>物流订单ID 。同淘宝交易订单互斥，淘宝交易号存在，，以淘宝交易号为准&lt;br /&gt; 支持最小值为：1000</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt; 
 
如果service_code不为空，默认使用service_code 
如果service_code为空，sender_id不为空，使用sender_id对应的地址发货 
如果service_code与sender_id都为空，使用默认地址发货</desc>
</param>
<param>
<name>service_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库的服务代码标示，代码一个仓库的实体。(可以通过taobao.wlb.stores.baseinfo.get接口查询) 
 
如果service_code为空，默认通过sender_id来发货</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
<param>
<name>ship_fresh</name>
<type>ShipFresh</type>
<level>Object</level>
<desc>发货成功后，返回承运商的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orders.detail.get</name>
<desc>查询物流订单的详细信息，涉及用户隐私字段。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间结束.格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中所有字段.fileds中可以指定返回以上任意一个或者多个字段,以","分隔.</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页条数.该字段没传 或 值&lt;1 ，则默认page_size为40&lt;br /&gt; 支持最大值为：100</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<required>optional</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes.</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间开始.格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>物流状态.可查看数据结构 Shipping 中的status字段.</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<desc>获取的物流订单详情列表.返回的Shipping包含的具体信息为入参fields请求的字段信息.</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orders.get</name>
<desc>批量查询物流订单。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间结束</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中的以下字段: &lt;br&gt; 
tid,order_code,seller_nick,buyer_nick,delivery_start, delivery_end,out_sid,item_title,receiver_name, created,modified,status,type,freight_payer,seller_confirm,company_name,sub_tids,is_spilt；&lt;br&gt;多个字段之间用","分隔。如tid,seller_nick,buyer_nick,delivery_start。</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页条数.该字段没传 或 值&lt;1 ,则默认page_size为40&lt;br /&gt; 支持最大值为：100</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<required>optional</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间开始</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>物流状态.查看数据结构 Shipping 中的status字段.</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,若传入tid：非拆单场景，仅会返回一条物流订单信息；拆单场景，会返回多条物流订单信息</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<desc>获取的物流订单详情列表  
返回的Shipping包含的具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orderstore.push</name>
<desc>卖家使用自己的物流公司发货，可以通过本接口将订单的仓内信息推送到淘宝，淘宝保存这些仓内信息，并可在页面展示这些仓内信息。</desc>
<request>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>occure_time</name>
<type>Date</type>
<required>required</required>
<desc>流转状态发生时间</desc>
</param>
<param>
<name>operate_detail</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>仓内操作描述&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>operator_contact</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员联系方式&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>operator_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员名称&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>trade_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝订单交易号</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回结果是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.ordertrace.push</name>
<desc>卖家使用自己的物流公司发货，可以通过本接口将订单的流转信息推送到淘宝，淘宝保存这些流转信息，并可在页面展示这些流转信息。</desc>
<request>
<param>
<name>company_name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>物流公司名称&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>current_city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>流转节点的当前城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>facility_name</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>网点名称&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>mail_no</name>
<type>String</type>
<required>required</required>
<desc>快递单号。各个快递公司的运单号格式不同。</desc>
</param>
<param>
<name>next_city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>流转节点的下一个城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>node_description</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>描述当前节点的操作，操作是“揽收”、“派送”或“签收”。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>occure_time</name>
<type>Date</type>
<required>required</required>
<desc>流转节点发生时间</desc>
</param>
<param>
<name>operate_detail</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>流转节点的详细地址及操作描述&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>operator_contact</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员联系方式，手机号码或电话。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>operator_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员名称&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回结果是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.partners.get</name>
<desc>查询物流公司信息（可以查询目的地可不可达情况）</desc>
<request>
<param>
<name>goods_value</name>
<type>String</type>
<required>optional</required>
<desc>货物价格.只有当选择货到付款此参数才会有效</desc>
</param>
<param>
<name>is_need_carriage</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要揽收资费信息，默认false。在此值为false时，返回内容中将无carriage。在未设置source_id或target_id的情况下，无法查询揽收资费信息。自己联系无揽收资费记录。</desc>
</param>
<param>
<name>service_type</name>
<type>String</type>
<required>required</required>
<desc>服务类型，根据此参数可查出提供相应服务类型的物流公司信息(物流公司状态正常)，可选值：cod(货到付款)、online(在线下单)、 offline(自己联系)、limit(限时物流)。然后再根据source_id,target_id,goods_value这三个条件来过滤物流公司. 目前输入自己联系服务类型将会返回空，因为自己联系并没有具体的服务信息，所以不会有记录。</desc>
</param>
<param>
<name>source_id</name>
<type>String</type>
<required>optional</required>
<desc>物流公司揽货地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm  或者调用 taobao.areas.get 获取</desc>
</param>
<param>
<name>target_id</name>
<type>String</type>
<required>optional</required>
<desc>物流公司派送地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm  或者调用 taobao.areas.get 获取</desc>
</param>
</request>
<response>
<param>
<name>logistics_partners</name>
<type>LogisticsPartner</type>
<level>Object Array</level>
<desc>物流公司信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.trace.search</name>
<desc>用户根据淘宝交易号查询物流流转信息，如2010-8-10 15：23：00到达杭州集散地。 
此接口的返回信息都由物流公司提供。（备注：使用线下发货（offline.send）的运单，不支持运单状态的实时跟踪，只要一发货，状态就会变为&lt;status&gt;对方已签收&lt;/status&gt;，该字段仅对线上发货（online.send）的运单有效。）</desc>
<request>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易号，请勿传非淘宝交易号</desc>
</param>
</request>
<response>
<param>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订单的物流状态（仅支持线上发货online订单，线下发货offline发出后直接变为已签收）
* 等候发送给物流公司
*已提交给物流公司,等待物流公司接单
*已经确认消息接收，等待物流公司接单
*物流公司已接单
*物流公司不接单
*物流公司揽收失败
*物流公司揽收成功
*签收失败
*对方已签收
*对方拒绝签收</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易号</desc>
</param>
<param>
<name>trace_list</name>
<type>TransitStepInfo</type>
<level>Object Array</level>
<desc>流转信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.stores.baseinfo.get</name>
<desc>通过USERID和仓库类型，获取商家自有仓库或菜鸟仓库或全部仓库</desc>
<request>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<desc>0.商家仓库.1.菜鸟仓库.2全部被划分的仓库</desc>
</param>
</request>
<response>
<param>
<name>store_info_list</name>
<type>StoreInfo</type>
<level>Object Array</level>
<desc>仓库列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.add</name>
<desc>此API添加卖家店铺内自定义类目  
父类目parent_cid值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目  
注：因为缓存的关系,添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<required>optional</required>
<desc>父类目编号，如果类目为店铺下的一级类目：值等于0，如果类目为子类目，调用获取taobao.sellercats.list.get父类目编号</desc>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<required>optional</required>
<desc>链接图片URL地址。(绝对地址，格式：http://host/image_path)</desc>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<required>optional</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<desc>返回seller_cat数据结构中的：cid,created</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.get</name>
<desc>此API获取当前卖家店铺在淘宝前端被展示的浏览导航类目（面向买家）</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>seller_cats</name>
<type>SellerCat</type>
<level>Object Array</level>
<desc>卖家自定义类目</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.update</name>
<desc>此API更新卖家店铺内自定义类目  
注：因为缓存的关系，添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>卖家自定义类目编号</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<required>optional</required>
<desc>链接图片URL地址</desc>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<required>optional</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<desc>返回sellercat数据结构中的：cid,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.get</name>
<desc>获取卖家店铺的基本信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Shop 结构中的所有字段；多个字段之间用逗号(,)分隔</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.remainshowcase.get</name>
<desc>获取卖家店铺剩余橱窗数量，已用橱窗数量，总橱窗数量</desc>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>支持返回剩余橱窗数量，已用橱窗数量，总橱窗数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.update</name>
<desc>目前只支持标题、公告和描述的更新</desc>
<request>
<param>
<name>bulletin</name>
<type>String</type>
<required>special</required>
<desc>店铺公告。不超过1024个字符</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>special</required>
<desc>店铺描述。10～2000个字符以内</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>special</required>
<desc>店铺标题。不超过30个字符；过滤敏感词，如淘咖啡、阿里巴巴等。title, bulletin和desc至少必须传一个</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.shopcats.list.get</name>
<desc>获取淘宝面向买家的浏览导航类目（跟后台卖家商品管理的类目有差异）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表，见ShopCat，默认返回：cid,parent_cid,name,is_parent</desc>
</param>
</request>
<response>
<param>
<name>shop_cats</name>
<type>ShopCat</type>
<level>Object Array</level>
<desc>店铺类目列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.audit</name>
<desc>合作授权审批</desc>
<request>
<param>
<name>audit_result</name>
<type>Number</type>
<required>required</required>
<desc>1:审批通过，审批通过后要加入授权产品线列表； 
2:审批拒绝</desc>
</param>
<param>
<name>product_line_list_agent</name>
<type>String</type>
<required>optional</required>
<desc>当审批通过时需要指定授权产品线id列表(代销)，如果没传则表示不开通，且经销和代销的授权产品线列表至少传入一种，同时传入则表示都开通。</desc>
</param>
<param>
<name>product_line_list_dealer</name>
<type>String</type>
<required>optional</required>
<desc>当审批通过时需要指定授权产品线id列表(经销)，如果没传则表示不开通，且经销和代销的授权产品线列表至少传入一种，同时传入则表示都开通。</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>required</required>
<desc>备注</desc>
</param>
<param>
<name>requisition_id</name>
<type>Number</type>
<required>required</required>
<desc>合作申请Id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.get</name>
<desc>获取供应商的合作关系信息</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>合作结束时间yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>合作开始时间yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>合作状态： NORMAL(合作中)、 ENDING(终止中) 、END (终止)</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式：AGENT(代销) 、DEALER（经销）</desc>
</param>
</request>
<response>
<param>
<name>cooperations</name>
<type>Cooperation</type>
<level>Object Array</level>
<desc>合作分销关系</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.productcat.add</name>
<desc>追加授权产品线</desc>
<request>
<param>
<name>cooperate_id</name>
<type>Number</type>
<required>required</required>
<desc>合作关系id</desc>
</param>
<param>
<name>grade_id</name>
<type>Number</type>
<required>optional</required>
<desc>等级ID（为空则不修改）</desc>
</param>
<param>
<name>product_line_list</name>
<type>String</type>
<required>required</required>
<desc>产品线id列表，若有多个，以逗号分隔</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.terminate</name>
<desc>终止与分销商的合作关系</desc>
<request>
<param>
<name>cooperate_id</name>
<type>Number</type>
<required>required</required>
<desc>合作编号</desc>
</param>
<param>
<name>end_remain_days</name>
<type>Number</type>
<required>required</required>
<desc>终止天数，可选1,2,3,5,7,15，在多少天数内终止</desc>
</param>
<param>
<name>end_remark</name>
<type>String</type>
<required>required</required>
<max_length>2000</max_length>
<desc>终止说明（5-2000字）&lt;br /&gt; 支持最大长度为：2000&lt;br /&gt; 支持的最大列表长度为：2000</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.update</name>
<desc>供应商更新合作的分销商等级</desc>
<request>
<param>
<name>distributor_id</name>
<type>Number</type>
<required>required</required>
<desc>分销商ID</desc>
</param>
<param>
<name>grade_id</name>
<type>Number</type>
<required>required</required>
<desc>等级ID(0代表取消)</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式(新增)： AGENT(代销)、DEALER(经销)(默认为代销)</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新结果成功失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.agree</name>
<desc>供应商或分销商通过采购申请/经销采购单审核</desc>
<request>
<param>
<name>dealer_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购申请/经销采购单编号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功。true：成功；false：失败。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.close</name>
<desc>供应商或分销商关闭采购申请/经销采购单</desc>
<request>
<param>
<name>dealer_order_id</name>
<type>Number</type>
<required>required</required>
<desc>经销采购单编号</desc>
</param>
<param>
<name>reason</name>
<type>Number</type>
<required>required</required>
<desc>关闭原因： 
1：长时间无法联系到分销商，取消交易。 
2：分销商错误提交申请，取消交易。 
3：缺货，近段时间都无法发货。 
4：分销商恶意提交申请单。 
5：其他原因。</desc>
</param>
<param>
<name>reason_detail</name>
<type>String</type>
<required>required</required>
<desc>关闭详细原因，字数5-200字</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功。true：成功；false：失败。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.get</name>
<desc>批量查询采购申请/经销采购单，目前支持供应商和分销商查询</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>采购申请/经销采购单最迟修改时间。与start_date字段的最大时间间隔不能超过30天</desc>
</param>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<desc>多个字段用","分隔。 fields 如果为空：返回所有采购申请/经销采购单对象(dealer_orders)字段。 如果不为空：返回指定采购单对象(dealer_orders)字段。 例1： dealer_order_details.product_id 表示只返回product_id 例2： dealer_order_details 表示只返回明细列表</desc>
</param>
<param>
<name>identity</name>
<type>Number</type>
<required>required</required>
<desc>查询者自己在所要查询的采购申请/经销采购单中的身份。 
1：供应商。 
2：分销商。 
注：填写其他值当做错误处理。</desc>
</param>
<param>
<name>order_status</name>
<type>Number</type>
<required>optional</required>
<desc>采购申请/经销采购单状态。 
0：全部状态。 
1：分销商提交申请，待供应商审核。 
2：供应商驳回申请，待分销商确认。 
3：供应商修改后，待分销商确认。 
4：分销商拒绝修改，待供应商再审核。 
5：审核通过下单成功，待分销商付款。 
7：付款成功，待供应商发货。 
8：供应商发货，待分销商收货。 
9：分销商收货，交易成功。 
10：采购申请/经销采购单关闭。 
 
注：无值按默认值0计，超出状态范围返回错误信息。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数。无值或小于1的值按默认值1计）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数（大于0但小于等于50的整数。无值或大于50或小于1的值按默认值50计）</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>采购申请/经销采购单最早修改时间</desc>
</param>
</request>
<response>
<param>
<name>dealer_orders</name>
<type>DealerOrder</type>
<level>Object Array</level>
<desc>采购申请/经销采购单结果列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>按查询条件查到的记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.modify</name>
<desc>供应商或分销商修改采购申请/经销采购单明细，如果商品总数量被修改为0（或删除所有商品明细）则关闭采购申请/经销采购单，否则状态变为供应商或分销商审核通过。</desc>
<request>
<param>
<name>dealer_order_id</name>
<type>Number</type>
<required>required</required>
<desc>经销采购单编号</desc>
</param>
<param>
<name>delete_detail_ids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>要删除的商品明细id列表，多个id使用英文符号的逗号隔开</desc>
</param>
<param>
<name>detail_id_prices</name>
<type>String</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>经销采购单的商品明细的新的采购价格。格式为商品明细id:价格修改值,商品明细id:价格修改值</desc>
</param>
<param>
<name>detail_id_quantities</name>
<type>String</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>修改经销采购单的商品明细的新的库存。格式为商品明细id:库存修改值,商品明细id:库存修改值</desc>
</param>
<param>
<name>new_post_fee</name>
<type>Number</type>
<required>optional</required>
<desc>新邮费（单位：分，示例值1005表示10.05元）。必须大于等于0。自提方式不可修改邮费。不提交该参数表示不修改邮费。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功。true：成功；false：失败。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.query</name>
<desc>按编号查询采购申请/经销采购单，目前支持供应商和分销商查询。</desc>
<request>
<param>
<name>dealer_order_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>50</max_list_size>
<desc>经销采购单编号。 
多个编号用英文符号的逗号隔开。最多支持50个经销采购单编号的查询。</desc>
</param>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<desc>多个字段用","分隔。 fields 如果为空：返回所有经销采购单对象(dealer_orders)字段。 如果不为空：返回指定采购单对象(dealer_orders)字段。 例1： dealer_order_details.product_id 表示只返回product_id 例2： dealer_order_details 表示只返回明细列表</desc>
</param>
</request>
<response>
<param>
<name>dealer_orders</name>
<type>DealerOrder</type>
<level>Object Array</level>
<desc>经销采购单结果列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.refuse</name>
<desc>供应商或分销商驳回采购申请/经销采购单</desc>
<request>
<param>
<name>dealer_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购申请/经销采购单编号</desc>
</param>
<param>
<name>reason</name>
<type>Number</type>
<required>required</required>
<desc>驳回原因（1：价格不合理；2：采购数量不合理；3：其他原因）</desc>
</param>
<param>
<name>reason_detail</name>
<type>String</type>
<required>required</required>
<desc>驳回详细原因，字数范围5-200字</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功。true：成功；false：失败。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.dealer.requisitionorder.remark.update</name>
<desc>供应商修改经销采购单备注</desc>
<request>
<param>
<name>dealer_order_id</name>
<type>Number</type>
<required>required</required>
<desc>经销采购单ID</desc>
</param>
<param>
<name>supplier_memo</name>
<type>String</type>
<required>optional</required>
<desc>备注留言，可为空</desc>
</param>
<param>
<name>supplier_memo_flag</name>
<type>Number</type>
<required>required</required>
<max_value>5</max_value>
<min_value>1</min_value>
<desc>旗子的标记，必选。 
1-5之间的数字。 
非1-5之间，都采用1作为默认。 
1:红色 
2:黄色 
3:绿色 
4:蓝色 
5:粉红色&lt;br /&gt; 支持最大值为：5&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.discount.add</name>
<desc>新增等级折扣</desc>
<request>
<param>
<name>discount_name</name>
<type>String</type>
<required>required</required>
<desc>折扣名称,长度不能超过25字节</desc>
</param>
<param>
<name>discount_types</name>
<type>String</type>
<required>required</required>
<desc>PERCENT（按折扣优惠）、PRICE（按减价优惠），例如"PERCENT,PRICE,PERCENT"</desc>
</param>
<param>
<name>discount_values</name>
<type>String</type>
<required>required</required>
<desc>优惠比率或者优惠价格，例如：”8000,-2300,7000”,大小为-100000000到100000000之间（单位：分）</desc>
</param>
<param>
<name>target_ids</name>
<type>String</type>
<required>required</required>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
</param>
<param>
<name>target_types</name>
<type>String</type>
<required>required</required>
<desc>GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠），例如"GRADE,DISTRIBUTOR"</desc>
</param>
</request>
<response>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.discount.update</name>
<desc>修改等级折扣</desc>
<request>
<param>
<name>detail_ids</name>
<type>String</type>
<required>optional</required>
<desc>详情ID，例如：”0,1002,1003”</desc>
</param>
<param>
<name>detail_statuss</name>
<type>String</type>
<required>optional</required>
<desc>ADD(新增)、UPDATE（更新）、DEL（删除，对应的target_type等信息填NULL），例如：”UPDATE,DEL,DEL”</desc>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>discount_name</name>
<type>String</type>
<required>optional</required>
<desc>折扣名称，长度不能超过25字节</desc>
</param>
<param>
<name>discount_status</name>
<type>String</type>
<required>optional</required>
<desc>状态DEL（删除）UPDATE(更新)</desc>
</param>
<param>
<name>discount_types</name>
<type>String</type>
<required>optional</required>
<desc>PERCENT（按折扣优惠）、PRICE（按减价优惠），例如"PERCENT,PRICE,PERCENT"</desc>
</param>
<param>
<name>discount_values</name>
<type>String</type>
<required>optional</required>
<desc>优惠比率或者优惠价格，例如：”8000,-2300,7000”,大小为-100000000到100000000之间（单位：分）</desc>
</param>
<param>
<name>target_ids</name>
<type>String</type>
<required>optional</required>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
</param>
<param>
<name>target_types</name>
<type>String</type>
<required>optional</required>
<desc>GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠），例如"GRADE,DISTRIBUTOR"</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>成功状态</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.discounts.get</name>
<desc>查询折扣信息</desc>
<request>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>ext_fields</name>
<type>String</type>
<required>optional</required>
<desc>指定查询额外的信息，可选值：DETAIL（查询折扣详情），多个可选值用逗号分割。（只允许指定折扣ID情况下使用）</desc>
</param>
</request>
<response>
<param>
<name>discounts</name>
<type>Discount</type>
<level>Object Array</level>
<desc>折扣数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributor.archives.get</name>
<desc>获取当前供应商授权分销商的产品的下载率，计算逻辑同后台页面。downLoadRatio 
获取当前供应商授权分销商的产品的上架率，计算逻辑同后台页面。获取upSelfRatio 
获取当前供应商在分销商店铺中的上架商品占比。upShopRatio 
获取当前供应商在分销商店铺中的成交（已付款）订单笔数占比。 orderShopRatio 
获取当前供应商在分销商店铺中铺货商品UV占店铺商品总UV的比。uvShopRatio</desc>
<request>
<param>
<name>distributor_user_nick</name>
<type>String</type>
<required>required</required>
<desc>分销商淘宝店主nick</desc>
</param>
</request>
<response>
<param>
<name>distributor_archive</name>
<type>DistributorArchive</type>
<level>Object</level>
<desc>分销商档案</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口执行结果，true表示执行成功；false表示执行失败。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributor.items.get</name>
<desc>供应商查询分销商商品下载记录。</desc>
<request>
<param>
<name>distributor_id</name>
<type>Number</type>
<required>special</required>
<desc>分销商ID 。</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>设置结束时间,空为不设置。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<desc>产品ID</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>设置开始时间。空为不设置。</desc>
</param>
</request>
<response>
<param>
<name>records</name>
<type>FenxiaoItemRecord</type>
<level>Object Array</level>
<desc>下载记录对象</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributor.procuct.static.get</name>
<desc>获取分销商品流量，以天为单位统计分销商品的PV，UV</desc>
<request>
<param>
<name>distributor_user_nick</name>
<type>String</type>
<required>required</required>
<desc>分销商淘宝店主nick</desc>
</param>
<param>
<name>product_id_array</name>
<type>String</type>
<required>required</required>
<desc>供应商商品id，一次可以传多个，每次最多40个。 
以,(英文)作为分隔符。</desc>
</param>
</request>
<response>
<param>
<name>distributor_item_flows</name>
<type>DistributorItemFlow</type>
<level>Object Array</level>
<desc>分销商商品流量</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>执行结果，true表示执行成功；false表示执行失败。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributor.products.get</name>
<desc>分销商查询供应商产品信息</desc>
<request>
<param>
<name>download_status</name>
<type>String</type>
<required>optional</required>
<desc>下载状态，默认未下载。UNDOWNLOAD：未下载，DOWNLOADED：已下载。</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>结束时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>指定查询额外的信息，可选值：skus（sku数据）、images（多图），多个可选值用逗号分割。</desc>
</param>
<param>
<name>item_ids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>根据商品ID列表查询，优先级次于产品ID列表，高于其他分页查询条件。如果商品不是分销商品，自动过滤。最大限制20，用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序。QUANTITY_DESC：库存降序，CREATE_TIME_DESC，创建时间降序。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>pids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>产品ID列表，优先级最高，传了忽略其他查询条件。用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品线ID</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>开始时间</desc>
</param>
<param>
<name>supplier_nick</name>
<type>String</type>
<required>optional</required>
<desc>供应商nick，分页查询时，必传</desc>
</param>
<param>
<name>time_type</name>
<type>String</type>
<required>optional</required>
<desc>查询时间类型，默认更新时间。MODIFIED:更新时间，CREATE:创建时间</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式，分页查询时，必传。AGENT：代销，DEALER：经销</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>products</name>
<type>FenxiaoProduct</type>
<level>Object Array</level>
<desc>产品对象记录集。返回 FenxiaoProduct 包含的字段信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributors.get</name>
<desc>查询和当前登录供应商有合作关系的分销商的信息</desc>
<request>
<param>
<name>nicks</name>
<type>String</type>
<required>required</required>
<desc>分销商用户名列表。多个之间以“,”分隔;最多支持50个分销商用户名。</desc>
</param>
</request>
<response>
<param>
<name>distributors</name>
<type>Distributor</type>
<level>Object Array</level>
<desc>分销商详细信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.grade.add</name>
<desc>新建等级</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>等级名称，等级名称不可重复&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>等级ID</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.grade.delete</name>
<desc>删除等级</desc>
<request>
<param>
<name>grade_id</name>
<type>Number</type>
<required>required</required>
<desc>等级ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.grade.update</name>
<desc>修改等级</desc>
<request>
<param>
<name>grade_id</name>
<type>Number</type>
<required>required</required>
<desc>等级ID</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>等级名称，等级名称不可重复&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.grades.get</name>
<desc>根据供应商ID，查询他的分销商等级信息</desc>
<response>
<param>
<name>fenxiao_grades</name>
<type>FenxiaoGrade</type>
<level>Object Array</level>
<desc>分销商等级信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.login.user.get</name>
<desc>获取用户登录信息</desc>
<response>
<param>
<name>login_user</name>
<type>LoginUser</type>
<level>Object</level>
<desc>登录用户信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.close</name>
<desc>供应商关闭未付款采购单.可传入一个主单号或是多个子单号，多个子单号之间以‘，’隔开</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>关闭理由,特殊字符会被转义，会改变长度，有特殊字符是请注意&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单编号</desc>
</param>
<param>
<name>sub_order_ids</name>
<type>String</type>
<required>optional</required>
<desc>子采购单ID，可传多笔子单ID，逗号分隔</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.confirm.paid</name>
<desc>供应商确认收款（非支付宝交易）。</desc>
<request>
<param>
<name>confirm_remark</name>
<type>String</type>
<required>optional</required>
<desc>确认支付信息（字数小于100）</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单编号。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>确认结果成功与否</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.create.dealer</name>
<desc>分销商创建经销采购单.</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>街道</desc>
</param>
<param>
<name>buyer_name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>买家姓名&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>special</required>
<desc>市</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>special</required>
<desc>区</desc>
</param>
<param>
<name>logistic_fee</name>
<type>Number</type>
<required>required</required>
<desc>运费，单位为分</desc>
</param>
<param>
<name>logistic_type</name>
<type>String</type>
<required>required</required>
<desc>运输方式，快递,平邮等</desc>
</param>
<param>
<name>message</name>
<type>String</type>
<required>optional</required>
<max_length>200</max_length>
<desc>留言&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>optional</required>
<desc>买家手机号码和电话号码两者中必须有一个</desc>
</param>
<param>
<name>outer_id</name>
<type>Number</type>
<required>required</required>
<desc>erp主订单号，用于去重。当传入号已存在将返回原来的采购单</desc>
</param>
<param>
<name>pay_type</name>
<type>String</type>
<required>required</required>
<desc>支付类型,需要供应支持该支付类型</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>optional</required>
<desc>买家电话号码</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>省</desc>
</param>
<param>
<name>sub_order_detail</name>
<type>String</type>
<required>required</required>
<desc>子单信息,子单内部以‘,’隔开，多个子单以‘;’隔开. 
例(分销产品id,skuid,购买数量,单价;分销产品id:,skuid,购买数量,单价) 
单价的单位位分</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>邮编</desc>
</param>
</request>
<response>
<param>
<name>get_module</name>
<type>Number</type>
<level>Basic</level>
<desc>采购单号</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.message.add</name>
<desc>添加采购单留言，最多20条（供应商分销商都可添加）</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<desc>留言内容</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.remark.update</name>
<desc>供应商修改采购单备注</desc>
<request>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单编号</desc>
</param>
<param>
<name>supplier_memo</name>
<type>String</type>
<required>required</required>
<desc>备注内容(供应商操作)</desc>
</param>
<param>
<name>supplier_memo_flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>1</min_value>
<desc>旗子的标记，1-5之间的数字。非1-5之间，都采用1作为默认。 
1:红色 
2:黄色 
3:绿色 
4:蓝色 
5:粉红色&lt;br /&gt; 支持最大值为：5&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.orders.get</name>
<desc>分销商或供应商均可用此接口查询采购单信息（代销）； (发货处理请调用物流API中的发货接口)。</desc>
<request>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>结束时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。若purchase_order_id没传，则此参数必传。</desc>
</param>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<desc>多个字段用","分隔。 
 
fields 
如果为空：返回所有采购单对象(purchase_orders)字段。 
如果不为空：返回指定采购单对象(purchase_orders)字段。 
 
例1： 
sub_purchase_orders.tc_order_id 表示只返回tc_order_id  
例2： 
sub_purchase_orders表示只返回子采购单列表</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>2147483647</max_value>
<min_value>-21474836478</min_value>
<desc>页码。（大于0的整数。默认为1）&lt;br /&gt; 支持最大值为：2147483647&lt;br /&gt; 支持最小值为：-21474836478</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>2147483647</max_value>
<min_value>-21474836478</min_value>
<desc>每页条数。（每页条数不超过50条）&lt;br /&gt; 支持最大值为：2147483647&lt;br /&gt; 支持最小值为：-21474836478</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>optional</required>
<max_value>9223372036854775807</max_value>
<min_value>-9223372036854775808</min_value>
<desc>采购单编号或分销流水号，若其它参数没传，则此参数必传。&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：-9223372036854775808</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>起始时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。若purchase_order_id没传，则此参数必传。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，不传默认查询所有采购单根据身份选择自身状态可选值:&lt;br&gt; *供应商：&lt;br&gt; WAIT_SELLER_SEND_GOODS(等待发货)&lt;br&gt; WAIT_SELLER_CONFIRM_PAY(待确认收款)&lt;br&gt; WAIT_BUYER_PAY(等待付款)&lt;br&gt; WAIT_BUYER_CONFIRM_GOODS(已发货)&lt;br&gt; TRADE_REFUNDING(退款中)&lt;br&gt; TRADE_FINISHED(采购成功)&lt;br&gt; TRADE_CLOSED(已关闭)&lt;br&gt; *分销商：&lt;br&gt; WAIT_BUYER_PAY(等待付款)&lt;br&gt; WAIT_BUYER_CONFIRM_GOODS(待收货确认)&lt;br&gt; TRADE_FOR_PAY(已付款)&lt;br&gt; TRADE_REFUNDING(退款中)&lt;br&gt; TRADE_FINISHED(采购成功)&lt;br&gt; TRADE_CLOSED(已关闭)&lt;br&gt;</desc>
</param>
<param>
<name>tc_order_id</name>
<type>Number</type>
<required>optional</required>
<desc>采购单下游买家订单id</desc>
</param>
<param>
<name>time_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值：trade_time_type(采购单按照成交时间范围查询),update_time_type(采购单按照更新时间范围查询)</desc>
</param>
</request>
<response>
<param>
<name>purchase_orders</name>
<type>PurchaseOrder</type>
<level>Object Array</level>
<desc>采购单及子采购单信息。返回 PurchaseOrder 包含的字段信息。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的采购单记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.add</name>
<desc>添加分销平台产品数据。业务逻辑与分销系统前台页面一致。 
 
    * 产品图片默认为空 
    * 产品发布后默认为下架状态</desc>
<request>
<param>
<name>alarm_number</name>
<type>Number</type>
<required>required</required>
<desc>警戒库存必须是0到29999。</desc>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在地：市，例：“杭州”</desc>
</param>
<param>
<name>cost_price</name>
<type>String</type>
<required>optional</required>
<desc>代销采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>经销采购价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<desc>产品描述，长度为5到25000字符。</desc>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>have_guarantee</name>
<type>String</type>
<required>required</required>
<desc>是否有保修，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>have_invoice</name>
<type>String</type>
<required>required</required>
<desc>是否有发票，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>产品主图，大小不超过500k，格式为gif,jpg,jpeg,png,bmp等图片</desc>
</param>
<param>
<name>input_properties</name>
<type>String</type>
<required>optional</required>
<desc>自定义属性。格式为pid:value;pid:value</desc>
</param>
<param>
<name>is_authz</name>
<type>String</type>
<required>optional</required>
<desc>添加产品时，添加入参isAuthz:yes|no  
yes:需要授权  
no:不需要授权  
默认是需要授权</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>导入的商品ID</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>产品名称，长度不超过60个字节。</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码，长度不能超过60个字节。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>产品主图图片空间相对路径或绝对路径</desc>
</param>
<param>
<name>postage_ems</name>
<type>String</type>
<required>optional</required>
<desc>ems费用，单位：元。例：“10.56”。 大小为0.00元到999999元之间。</desc>
</param>
<param>
<name>postage_fast</name>
<type>String</type>
<required>optional</required>
<desc>快递费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>运费模板ID，参考taobao.postages.get。</desc>
</param>
<param>
<name>postage_ordinary</name>
<type>String</type>
<required>optional</required>
<desc>平邮费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。</desc>
</param>
<param>
<name>postage_type</name>
<type>String</type>
<required>required</required>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）,默认seller。</desc>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<required>required</required>
<desc>产品线ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>产品属性，格式为pid:vid;pid:vid</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性别名，格式为：pid:vid:alias;pid:vid:alias（alias为别名）</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>required</required>
<desc>所在地：省，例：“浙江”</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>产品库存必须是1到999999。</desc>
</param>
<param>
<name>retail_price_high</name>
<type>String</type>
<required>required</required>
<desc>最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。</desc>
</param>
<param>
<name>retail_price_low</name>
<type>String</type>
<required>required</required>
<desc>最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_dealer_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的经销采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序。其中每个值的单位：元。例：“10.56,12.3”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku的商家编码。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>sku的属性。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_quantitys</name>
<type>String</type>
<required>optional</required>
<desc>sku的库存。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_standard_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的采购基准价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>spu_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品spuID，达尔文产品必须要传spuID，否则不能发布。其他非达尔文产品，看情况传</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>required</required>
<desc>采购基准价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>standard_retail_price</name>
<type>String</type>
<required>optional</required>
<desc>零售基准价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>产品创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.gradeprice.get</name>
<desc>等级折扣查询</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品id</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>skuId</desc>
</param>
<param>
<name>trade_type</name>
<type>Number</type>
<required>optional</required>
<desc>经、代销模式（1：代销、2：经销）</desc>
</param>
</request>
<response>
<param>
<name>grade_discounts</name>
<type>GradeDiscount</type>
<level>Object Array</level>
<desc>等级折扣列表</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.gradeprice.update</name>
<desc>供应商可以针对产品不同的sku，指定对应交易类型（代销or经销）方式下，设定折扣方式（按等级or指定分销商）以及对应优惠后的采购价格</desc>
<request>
<param>
<name>ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
</param>
<param>
<name>prices</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>优惠价格,大小为0到100000000之间的整数或两位小数，例：优惠价格为：100元2角5分，传入的参数应写成：100.25</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品Id</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>skuId，如果产品有skuId,必须要输入skuId;没有skuId的时候不必选</desc>
</param>
<param>
<name>target_type</name>
<type>String</type>
<required>required</required>
<desc>选择折扣方式：GRADE（按等级进行设置）;DISCITUTOR(按分销商进行设置）。例如"GRADE,DISTRIBUTOR"</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型： AGENT(代销)、DEALER(经销)，ALL(代销和经销)</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作结果：成功或失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.image.delete</name>
<desc>产品图片删除，只删除图片信息，不真正删除图片</desc>
<request>
<param>
<name>position</name>
<type>Number</type>
<required>required</required>
<desc>图片位置</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>properties表示sku图片的属性。key:value形式，key是pid，value是vid。如果position是0的话，则properties需要是必传项</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.image.upload</name>
<desc>产品主图图片空间相对路径或绝对路径添加或更新，或者是图片上传。如果指定位置的图片已存在，则覆盖原有信息。如果位置为1,自动设为主图；如果位置为0，表示属性图片</desc>
<request>
<param>
<name>image</name>
<type>byte[]</type>
<required>special</required>
<desc>产品图片</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>special</required>
<desc>产品主图图片空间相对路径或绝对路径</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>required</required>
<desc>图片位置，0-14之间。0：操作sku属性图片，1：主图，2-5：细节图，6-14：额外主图</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>properties表示sku图片的属性。key:value形式，key是pid，value是vid。如果position是0的话，则properties需要是必传项</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.map.add</name>
<desc>创建分销和供应链商品映射关系。</desc>
<request>
<param>
<name>not_check_outer_code</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要校验商家编码，true不校验，false校验。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>分销产品id。</desc>
</param>
<param>
<name>sc_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>后端商品id（如果当前分销产品没有sku和后端商品时需要指定）。</desc>
</param>
<param>
<name>sc_item_ids</name>
<type>String</type>
<required>optional</required>
<desc>在有sku的情况下，与各个sku对应的后端商品id列表。逗号分隔，顺序需要保证与sku_ids一致。</desc>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<required>optional</required>
<desc>分销产品的sku id。逗号分隔，顺序需要保证与sc_item_ids一致（没有sku就不传）。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.map.delete</name>
<desc>删除分销和供应链商品映射关系。</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>分销产品id。</desc>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<required>optional</required>
<desc>分销产品的sku id列表，逗号分隔，在有sku时需要指定。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.sku.add</name>
<desc>添加产品SKU信息</desc>
<request>
<param>
<name>agent_cost_price</name>
<type>String</type>
<required>special</required>
<desc>代销采购价</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>special</required>
<desc>经销采购价</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>产品ID&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>sku属性</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<max_value>1000000</max_value>
<min_value>0</min_value>
<desc>sku产品库存，在0到1000000之间，如果不传，则库存为0&lt;br /&gt; 支持最大值为：1000000&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>sku_number</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>required</required>
<desc>采购基准价，最大值1000000000</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.sku.delete</name>
<desc>根据sku properties删除sku数据</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品id</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>sku属性</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.sku.update</name>
<desc>产品SKU信息更新</desc>
<request>
<param>
<name>agent_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>代销采购价</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>经销采购价</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>sku属性</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<desc>产品SKU库存</desc>
</param>
<param>
<name>sku_number</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>optional</required>
<desc>采购基准价</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.skus.get</name>
<desc>产品sku查询</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>产品ID&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>FenxiaoSku</type>
<level>Object Array</level>
<desc>sku信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.update</name>
<desc>更新分销平台产品数据，不传更新数据返回失败&lt;br&gt; 
1. 对sku进行增、删操作时，原有的sku_ids字段会被忽略，请使用sku_properties和sku_properties_del。&lt;br&gt;</desc>
<request>
<param>
<name>alarm_number</name>
<type>Number</type>
<required>optional</required>
<desc>警戒库存必须是0到29999。</desc>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<required>optional</required>
<desc>所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>所在地：市，例：“杭州”</desc>
</param>
<param>
<name>cost_price</name>
<type>String</type>
<required>optional</required>
<desc>代销采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>经销采购价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述，长度为5到25000字符。</desc>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>have_guarantee</name>
<type>String</type>
<required>optional</required>
<desc>是否有保修，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>have_invoice</name>
<type>String</type>
<required>optional</required>
<desc>是否有发票，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>主图图片，如果pic_path参数不空，则优先使用pic_path，忽略该参数&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png,bmp&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
<param>
<name>input_properties</name>
<type>String</type>
<required>optional</required>
<desc>自定义属性。格式为pid:value;pid:value</desc>
</param>
<param>
<name>is_authz</name>
<type>String</type>
<required>optional</required>
<desc>产品是否需要授权isAuthz:yes|no  
yes:需要授权  
no:不需要授权</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称，长度不超过60个字节。</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码，长度不能超过60个字节。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>产品主图图片空间相对路径或绝对路径</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>postage_ems</name>
<type>String</type>
<required>optional</required>
<desc>ems费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
</param>
<param>
<name>postage_fast</name>
<type>String</type>
<required>optional</required>
<desc>快递费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>运费模板ID，参考taobao.postages.get。更新时必须指定运费类型为 buyer，否则不更新。</desc>
</param>
<param>
<name>postage_ordinary</name>
<type>String</type>
<required>optional</required>
<desc>平邮费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
</param>
<param>
<name>postage_type</name>
<type>String</type>
<required>optional</required>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）。</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>产品属性</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性别名</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>optional</required>
<desc>所在地：省，例：“浙江”</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<desc>产品库存必须是1到999999。</desc>
</param>
<param>
<name>retail_price_high</name>
<type>String</type>
<required>optional</required>
<desc>最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。</desc>
</param>
<param>
<name>retail_price_low</name>
<type>String</type>
<required>optional</required>
<desc>最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku采购价格，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids或sku_properties保持一致。</desc>
</param>
<param>
<name>sku_dealer_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的经销采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序。其中每个值的单位：元。例：“10.56,12.3”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku id列表，例：1001,1002,1003。如果传入sku_properties将忽略此参数。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku商家编码 ，单位元，例："S1000,S1002,S1003"，字段必须和上面的id或sku_properties保持一致，如果没有可以写成",,"</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>sku属性。格式:pid:vid;pid:vid,表示一组属性如:1627207:3232483;1630696:3284570,表示一组:机身颜色:军绿色;手机套餐:一电一充。多组之间用逗号“,”区分。(属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid) 
通过此字段可新增和更新sku。若传入此值将忽略sku_ids字段。sku其他字段与此值保持一致。</desc>
</param>
<param>
<name>sku_properties_del</name>
<type>String</type>
<required>optional</required>
<desc>根据sku属性删除sku信息。需要按组删除属性。</desc>
</param>
<param>
<name>sku_quantitys</name>
<type>String</type>
<required>optional</required>
<desc>sku库存，单位元，例："10,20,30"，字段必须和sku_ids或sku_properties保持一致。</desc>
</param>
<param>
<name>sku_standard_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku采购基准价，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids或sku_properties保持一致。</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>optional</required>
<desc>采购基准价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>standard_retail_price</name>
<type>String</type>
<required>optional</required>
<desc>零售基准价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>发布状态，可选值：up（上架）、down（下架）、delete（删除），输入非法字符则忽略。</desc>
</param>
</request>
<response>
<param>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间，时间格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.productcat.add</name>
<desc>新增产品线</desc>
<request>
<param>
<name>agent_cost_percent</name>
<type>Number</type>
<required>required</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>代销默认采购价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
<param>
<name>dealer_cost_percent</name>
<type>Number</type>
<required>required</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>经销默认采购价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>产品线名称&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>retail_high_percent</name>
<type>Number</type>
<required>required</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>最高零售价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
<param>
<name>retail_low_percent</name>
<type>Number</type>
<required>required</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>最低零售价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
<param>
<name>product_line_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品线ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.productcat.delete</name>
<desc>删除产品线</desc>
<request>
<param>
<name>product_line_id</name>
<type>Number</type>
<required>required</required>
<desc>产品线ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.productcat.update</name>
<desc>修改产品线</desc>
<request>
<param>
<name>agent_cost_percent</name>
<type>Number</type>
<required>optional</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>代销默认采购价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
<param>
<name>dealer_cost_percent</name>
<type>Number</type>
<required>optional</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>经销默认采购价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>10</max_length>
<desc>产品线名称&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>product_line_id</name>
<type>Number</type>
<required>required</required>
<desc>产品线ID</desc>
</param>
<param>
<name>retail_high_percent</name>
<type>Number</type>
<required>optional</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>最高零售价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
<param>
<name>retail_low_percent</name>
<type>Number</type>
<required>optional</required>
<max_value>99999</max_value>
<min_value>100</min_value>
<desc>最低零售价比例，注意：100.00%，则输入为10000&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：100</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.productcats.get</name>
<desc>查询供应商的所有产品线数据。根据登陆用户来查询，不需要其他入参</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<desc>返回字段列表</desc>
</param>
</request>
<response>
<param>
<name>productcats</name>
<type>ProductCat</type>
<level>Object Array</level>
<desc>产品线列表。返回 ProductCat 包含的字段信息。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.products.get</name>
<desc>查询供应商的产品数据。 
 
    * 入参传入pids将优先查询，即只按这个条件查询。 
    *入参传入sku_number将优先查询(没有传入pids)，即只按这个条件查询(最多显示50条) 
    * 入参fields传skus将查询sku的数据，不传该参数默认不查询，返回产品的其它信息。 
    * 入参fields传入images将查询多图数据，不传只返回主图数据。 
    * 入参fields仅对传入pids生效（只有按ID查询时，才能查询额外的数据） 
    * 查询结果按照产品发布时间倒序，即时间近的数据在前。</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>结束修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>指定查询额外的信息，可选值：skus（sku数据）、images（多图），多个可选值用逗号分割。</desc>
</param>
<param>
<name>is_authz</name>
<type>String</type>
<required>optional</required>
<desc>查询产品列表时，查询入参“是否需要授权” 
yes:需要授权  
no:不需要授权</desc>
</param>
<param>
<name>item_ids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>可根据导入的商品ID列表查询，优先级次于产品ID、sku_numbers，高于其他分页查询条件。最大限制20，用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>pids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>30</max_list_size>
<desc>产品ID列表（最大限制30），用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品线ID</desc>
</param>
<param>
<name>sku_number</name>
<type>String</type>
<required>optional</required>
<desc>sku商家编码</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>开始修改时间</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>产品状态，可选值：up（上架）、down（下架），不传默认查询所有</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>FenxiaoProduct</type>
<level>Object Array</level>
<desc>产品对象记录集。返回 FenxiaoProduct 包含的字段信息。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.refund.create</name>
<desc>用于对分销的子采购单创建退款</desc>
<request>
<param>
<name>is_return_goods</name>
<type>Boolean</type>
<required>required</required>
<desc>是否退货，只有子采购单发货后，才能申请退货</desc>
</param>
<param>
<name>is_return_post_fee</name>
<type>Boolean</type>
<required>required</required>
<desc>此条子采购单是否退邮费，邮费要记在最后一笔申请退款的子单上面</desc>
</param>
<param>
<name>refund_desc</name>
<type>String</type>
<required>required</required>
<desc>退款说明,2-200字</desc>
</param>
<param>
<name>refund_reason_id</name>
<type>Number</type>
<required>required</required>
<desc>发货前： 
1、缺货，2、拍错商品，3、商品缺少所需样式，4、协商一致退款，5、未及时发货，0、其它 
发货后： 
经销： 
1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它 
代销： 
1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、买家一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它</desc>
</param>
<param>
<name>return_fee</name>
<type>Number</type>
<required>required</required>
<desc>需要退款的金额，单位为分</desc>
</param>
<param>
<name>sub_order_id</name>
<type>Number</type>
<required>required</required>
<desc>需要创建退款的子采购单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>退款是否创建成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.refund.get</name>
<desc>分销商或供应商可以查询某子单的退款信息，以及下游订单的退款信息</desc>
<request>
<param>
<name>query_seller_refund</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否查询下游买家的退款信息</desc>
</param>
<param>
<name>sub_order_id</name>
<type>Number</type>
<required>required</required>
<desc>要查询的退款子单的id</desc>
</param>
</request>
<response>
<param>
<name>refund_detail</name>
<type>RefundDetail</type>
<level>Object</level>
<desc>退款详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.refund.message.add</name>
<desc>添加退款留言</desc>
<request>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>留言凭证</desc>
</param>
<param>
<name>message_content</name>
<type>String</type>
<required>required</required>
<desc>留言内容</desc>
</param>
<param>
<name>sub_order_id</name>
<type>Number</type>
<required>required</required>
<desc>发生退款的子采购单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>退款是否创建成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.refund.message.get</name>
<desc>根据子采购单id，查询对应子单的退款留言信息</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。（大于0的整数。默认为1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。（默认10）</desc>
</param>
<param>
<name>sub_order_id</name>
<type>Number</type>
<required>required</required>
<desc>子采购单id</desc>
</param>
</request>
<response>
<param>
<name>order_messages</name>
<type>OrderMessage</type>
<level>Object Array</level>
<desc>退款留言</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>总留言条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.refund.query</name>
<desc>供应商按查询条件批量查询代销采购退款</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>代销采购退款最迟修改时间。与start_date的最大时间间隔不能超过30天</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数。无值或小于1的值按默认值1计）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数（大于0但小于等于50的整数。无值或大于50或小于1的值按默认值50计）</desc>
</param>
<param>
<name>query_seller_refund</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否查询下游买家的退款信息</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>代销采购退款单最早修改时间</desc>
</param>
</request>
<response>
<param>
<name>refund_list</name>
<type>RefundDetail</type>
<level>Object Array</level>
<desc>代销采购退款列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>按查询条件查到的记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.refund.update</name>
<desc>修改退款协议</desc>
<request>
<param>
<name>is_return_goods</name>
<type>Boolean</type>
<required>required</required>
<desc>是否退货，只有子采购单发货后，才能申请退货</desc>
</param>
<param>
<name>refund_desc</name>
<type>String</type>
<required>required</required>
<desc>退款说明</desc>
</param>
<param>
<name>refund_reason_id</name>
<type>Number</type>
<required>required</required>
<desc>发货前： 
1、缺货，2、拍错商品，3、商品缺少所需样式，4、协商一致退款，5、未及时发货，0、其它 
发货后： 
经销： 
1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它 
代销： 
1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、买家一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它</desc>
</param>
<param>
<name>return_fee</name>
<type>Number</type>
<required>required</required>
<desc>需要退款的金额</desc>
</param>
<param>
<name>sub_order_id</name>
<type>Number</type>
<required>required</required>
<desc>需要修改退款的子采购单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>退款是否修改成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.requisitions.get</name>
<desc>合作申请查询</desc>
<request>
<param>
<name>apply_end</name>
<type>Date</type>
<required>optional</required>
<desc>申请结束时间yyyy-MM-dd</desc>
</param>
<param>
<name>apply_start</name>
<type>Date</type>
<required>optional</required>
<desc>申请开始时间yyyy-MM-dd</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>申请状态（1-申请中、2-成功、3-被退回、4-已撤消、5-过期）</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
<param>
<name>requisitions</name>
<type>Requisition</type>
<level>Object Array</level>
<desc>合作申请</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.trademonitor.get</name>
<desc>仅限供应商调用此接口查询经销商品监控信息</desc>
<request>
<param>
<name>distributor_nick</name>
<type>String</type>
<required>optional</required>
<desc>经销商的淘宝账号</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>结束时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。</desc>
</param>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<desc>多个字段用","分隔。 fields 如果为空：返回所有采购单对象(purchase_orders)字段。 如果不为空：返回指定采购单对象(purchase_orders)字段。例如：trade_monitors.item_title表示只返回item_title</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。（大于0的整数。小于1按1计）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。（每页条数不超过50条，超过50或小于0均按50计）</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品id</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>起始时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。</desc>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的经销商品订单数量</desc>
</param>
<param>
<name>trade_monitors</name>
<type>TradeMonitor</type>
<level>Object Array</level>
<desc>经销商品订单监控信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.adjust.external</name>
<desc>商家非交易调整库存，调拨出库、盘点等时调用</desc>
<request>
<param>
<name>biz_type</name>
<type>String</type>
<required>required</required>
<desc>外部订单类型：ALLOCATE:调拨、 RETURN:退货、PURCHACE：采购、BALANCE:盘点、NON_TAOBAO_TRADE：非淘宝交易、OTHERS：其他</desc>
</param>
<param>
<name>biz_unique_code</name>
<type>String</type>
<required>required</required>
<desc>商家外部定单号</desc>
</param>
<param>
<name>items</name>
<type>String</type>
<required>required</required>
<desc>商品初始库存信息： [{"scItemId":"商品后端ID，如果有传scItemCode,参数可以为0","scItemCode":"商品商家编码","inventoryType":"库存类型  1：正常,”direction”: 1: 盘盈 -1: 盘亏,参数可选,"quantity":"数量"}]</desc>
</param>
<param>
<name>occupy_operate_code</name>
<type>String</type>
<required>optional</required>
<desc>库存占用返回的操作码.operate_type 为OUTBOUND时，如果是确认事先进行过的库存占用，需要传入当时返回的操作码，并且明细必须与申请时保持一致</desc>
</param>
<param>
<name>operate_time</name>
<type>Date</type>
<required>required</required>
<desc>业务操作时间</desc>
</param>
<param>
<name>operate_type</name>
<type>String</type>
<required>required</required>
<desc>库存操作类别：INBOUND：入库 OUTBOUND: 出库BALANCE: 盘点</desc>
</param>
<param>
<name>reduce_type</name>
<type>String</type>
<required>optional</required>
<desc>出库时库存扣减类型，operate_type为OUTBOUND时有效。  
AUTO_CALCULATE:自动计算可供扣减，如果库存不够返回失败 ClIENT_FORCE：强制要求最大化扣减，有多少扣多少</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>required</required>
<desc>商家仓库编码</desc>
</param>
</request>
<response>
<param>
<name>operate_code</name>
<type>String</type>
<level>Basic</level>
<desc>操作返回码</desc>
</param>
<param>
<name>tip_infos</name>
<type>TipInfo</type>
<level>Object Array</level>
<desc>提示信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.adjust.trade</name>
<desc>商家交易调整库存，淘宝交易、B2B经销等</desc>
<request>
<param>
<name>biz_unique_code</name>
<type>String</type>
<required>required</required>
<desc>商家外部定单号</desc>
</param>
<param>
<name>items</name>
<type>String</type>
<required>required</required>
<desc>商品初始库存信息： [{ "TBOrderCode”:”淘宝交易号”,"TBSubOrderCode ":"淘宝子交易单号,赠品可以不填","”isGift”:”TRUE或者FALSE,是否赠品”,storeCode":"商家仓库编码"," scItemId ":"商品后端ID","scItemCode":"商品商家编码"," originScItemId ":"原商品ID","inventoryType":"","quantity":"111","isComplete":"TRUE或者FALSE，是否全部确认出库"}]</desc>
</param>
<param>
<name>operate_time</name>
<type>Date</type>
<required>required</required>
<desc>业务操作时间</desc>
</param>
<param>
<name>tb_order_type</name>
<type>String</type>
<required>required</required>
<desc>订单类型：B2C、B2B</desc>
</param>
</request>
<response>
<param>
<name>operate_code</name>
<type>String</type>
<level>Basic</level>
<desc>操作返回码</desc>
</param>
<param>
<name>tip_infos</name>
<type>TipInfo</type>
<level>Object Array</level>
<desc>提示信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.initial</name>
<desc>商家仓库存初始化接口，直接按照商家指定的商品库存数进行填充，没有单据核对，不参与库存对账</desc>
<request>
<param>
<name>items</name>
<type>String</type>
<required>required</required>
<desc>商品初始库存信息： [{"scItemId":"商品后端ID，如果有传scItemCode,参数可以为0","scItemCode":"商品商家编码","inventoryType":"库存类型  1：正常,2：损坏,3：冻结,10：质押,11-20:用户自定义","quantity":"数量"}]</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>required</required>
<desc>商家仓库编码</desc>
</param>
</request>
<response>
<param>
<name>tip_infos</name>
<type>TipInfo</type>
<level>Object Array</level>
<desc>提示信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.initial.item</name>
<desc>商家仓商品初始化在各个仓中库存</desc>
<request>
<param>
<name>sc_item_id</name>
<type>Number</type>
<required>required</required>
<desc>后端商品id</desc>
</param>
<param>
<name>store_inventorys</name>
<type>String</type>
<required>required</required>
<desc>商品初始库存信息： [{"storeCode":"必选,商家仓库编号","inventoryType":"可选，库存类型 1：正常,2：损坏,3：冻结,10：质押,11-20:用户自定义,默认为1","quantity":"必选,数量"}]</desc>
</param>
</request>
<response>
<param>
<name>tip_infos</name>
<type>TipInfo</type>
<level>Object Array</level>
<desc>提示信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.occupy.adjust</name>
<desc>库存占用调整</desc>
<request>
<param>
<name>biz_unique_code</name>
<type>String</type>
<required>required</required>
<desc>商家外部订单号</desc>
</param>
<param>
<name>items</name>
<type>String</type>
<required>required</required>
<desc>商品初始库存信息： [{ "TBOrderCode":"淘宝交易号","TBSubOrderCode ":"淘宝子交易单号","originalStoreCode":"交易下单的仓库编码","storeCode":"要切换占用到的商家仓库编码"," scItemId ":"商品后端ID","scItemCode":"商品商家编码","inventoryType":"仓储类型","quantity":"新仓库的占用数量，如果不传，则取用原先的占用数"}]</desc>
</param>
<param>
<name>operate_time</name>
<type>Date</type>
<required>required</required>
<desc>业务操作时间</desc>
</param>
<param>
<name>tb_order_type</name>
<type>String</type>
<required>required</required>
<desc>订单类型：B2C、B2B</desc>
</param>
</request>
<response>
<param>
<name>operate_code</name>
<type>String</type>
<level>Basic</level>
<desc>操作返回码</desc>
</param>
<param>
<name>tip_infos</name>
<type>TipInfo</type>
<level>Object Array</level>
<desc>提示信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.query</name>
<desc>商家查询商品总体库存信息</desc>
<request>
<param>
<name>sc_item_codes</name>
<type>String</type>
<required>optional</required>
<desc>后端商品的商家编码列表，控制到50个</desc>
</param>
<param>
<name>sc_item_ids</name>
<type>String</type>
<required>required</required>
<desc>后端商品ID 列表，控制到50个</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>optional</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>store_codes</name>
<type>String</type>
<required>optional</required>
<desc>仓库列表:GLY001^GLY002</desc>
</param>
</request>
<response>
<param>
<name>item_inventorys</name>
<type>InventorySum</type>
<level>Object Array</level>
<desc>商品总体库存信息</desc>
</param>
<param>
<name>tip_infos</name>
<type>TipInfo</type>
<level>Object Array</level>
<desc>提示信息，提示不存在的后端商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.store.manage</name>
<desc>创建商家仓或者更新商家仓信息</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>required</required>
<desc>仓库的物理地址，可更新</desc>
</param>
<param>
<name>address_area_name</name>
<type>String</type>
<required>required</required>
<desc>仓库区域名，可更新</desc>
</param>
<param>
<name>alias_name</name>
<type>String</type>
<required>optional</required>
<desc>仓库简称，可更新</desc>
</param>
<param>
<name>contact</name>
<type>String</type>
<required>optional</required>
<desc>联系人，可更新</desc>
</param>
<param>
<name>operate_type</name>
<type>String</type>
<required>required</required>
<desc>参数定义，ADD：新建; UPDATE：更新</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>optional</required>
<desc>联系电话，可更新</desc>
</param>
<param>
<name>postcode</name>
<type>Number</type>
<required>optional</required>
<desc>邮编，可更新</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>required</required>
<desc>商家的仓库编码，不允许重复，不允许更新</desc>
</param>
<param>
<name>store_name</name>
<type>String</type>
<required>required</required>
<desc>商家的仓库名称，可更新</desc>
</param>
<param>
<name>store_type</name>
<type>String</type>
<required>required</required>
<desc>仓库类型，可更新。目前只支持自有仓，TYPE_OWN：自有物理仓</desc>
</param>
</request>
<response>
<param>
<name>store_list</name>
<type>Store</type>
<level>Object Array</level>
<desc>返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.store.query</name>
<desc>查询商家仓信息</desc>
<request>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>商家的仓库编码</desc>
</param>
</request>
<response>
<param>
<name>store_list</name>
<type>Store</type>
<level>Object Array</level>
<desc>仓库列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.add</name>
<desc>发布后端商品</desc>
<request>
<param>
<name>bar_code</name>
<type>String</type>
<required>optional</required>
<desc>条形码</desc>
</param>
<param>
<name>brand_id</name>
<type>Number</type>
<required>optional</required>
<desc>品牌id</desc>
</param>
<param>
<name>brand_name</name>
<type>String</type>
<required>optional</required>
<desc>brand_Name</desc>
</param>
<param>
<name>height</name>
<type>Number</type>
<required>optional</required>
<desc>高 单位：mm</desc>
</param>
<param>
<name>is_area_sale</name>
<type>Number</type>
<required>optional</required>
<desc>1表示区域销售，0或是空是非区域销售</desc>
</param>
<param>
<name>is_costly</name>
<type>Number</type>
<required>optional</required>
<desc>是否是贵重品 0:不是 1：是</desc>
</param>
<param>
<name>is_dangerous</name>
<type>Number</type>
<required>optional</required>
<desc>是否危险 0：不是  1：是</desc>
</param>
<param>
<name>is_friable</name>
<type>Number</type>
<required>optional</required>
<desc>是否易碎 0：不是  1：是</desc>
</param>
<param>
<name>is_warranty</name>
<type>Number</type>
<required>optional</required>
<desc>是否保质期：0:不是 1：是</desc>
</param>
<param>
<name>item_name</name>
<type>String</type>
<required>required</required>
<desc>商品名称</desc>
</param>
<param>
<name>item_type</name>
<type>Number</type>
<required>optional</required>
<desc>0.普通供应链商品 1.供应链组合主商品</desc>
</param>
<param>
<name>length</name>
<type>Number</type>
<required>optional</required>
<desc>长度 单位：mm</desc>
</param>
<param>
<name>matter_status</name>
<type>Number</type>
<required>optional</required>
<desc>0:液体，1：粉体，2：固体</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>required</required>
<desc>商家编码</desc>
</param>
<param>
<name>price</name>
<type>Number</type>
<required>optional</required>
<desc>价格 单位：分</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>商品属性格式是  p1:v1,p2:v2,p3:v3</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>remark</desc>
</param>
<param>
<name>spu_id</name>
<type>Number</type>
<required>optional</required>
<desc>spuId或是cspuid</desc>
</param>
<param>
<name>volume</name>
<type>Number</type>
<required>optional</required>
<desc>体积：立方厘米</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>重量 单位：g</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>optional</required>
<desc>宽 单位：mm</desc>
</param>
<param>
<name>wms_code</name>
<type>String</type>
<required>optional</required>
<desc>仓储商编码</desc>
</param>
</request>
<response>
<param>
<name>sc_item</name>
<type>ScItem</type>
<level>Object</level>
<desc>后台商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.get</name>
<desc>根据id查询商品</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id</desc>
</param>
</request>
<response>
<param>
<name>sc_item</name>
<type>ScItem</type>
<level>Object</level>
<desc>后端商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.map.add</name>
<desc>创建IC商品或分销商品与后端商品的映射关系</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>前台ic商品id</desc>
</param>
<param>
<name>need_check</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认值为false 
true:进行高级校验,前端商品或SKU的商家编码必须与后端商品的商家编码一致，否则会拒绝关联 
false:不进行高级校验</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>sc_item_id和outer_code 其中一个不能为空</desc>
</param>
<param>
<name>sc_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>sc_item_id和outer_code 其中一个不能为空</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>前台ic商品skuid</desc>
</param>
</request>
<response>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<desc>接口调用返回结果信息：商家编码</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.map.batch.query</name>
<desc>批量分页查询后端商品对应的前端商品</desc>
<request>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>后端商品的商家编码</desc>
</param>
<param>
<name>page_index</name>
<type>Number</type>
<required>optional</required>
<desc>当前页码数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>sc_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>后端商品id</desc>
</param>
</request>
<response>
<param>
<name>sc_item_maps</name>
<type>ScItemMap</type>
<level>Object Array</level>
<desc>后端商品映射列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.map.delete</name>
<desc>根据后端商品Id，失效指定用户的商品与后端商品的映射关系</desc>
<request>
<param>
<name>sc_item_id</name>
<type>Number</type>
<required>required</required>
<desc>后台商品ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>optional</required>
<desc>店铺用户nick。 如果该参数为空则删除后端商品与当前调用人的商品映射关系;如果不为空则删除指定用户与后端商品的映射关系</desc>
</param>
</request>
<response>
<param>
<name>module</name>
<type>Number</type>
<level>Basic</level>
<desc>失效条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.map.query</name>
<desc>查找IC商品或分销商品与后端商品的关联信息。skuId如果不传就查找该itemId下所有的sku</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>map_type为1：前台ic商品id 
map_type为2：分销productid</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>map_type为1：前台ic商品skuid  
map_type为2：分销商品的skuid</desc>
</param>
</request>
<response>
<param>
<name>sc_item_maps</name>
<type>ScItemMap</type>
<level>Object Array</level>
<desc>后端商品映射列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.outercode.get</name>
<desc>根据outerCode查询商品</desc>
<request>
<param>
<name>outer_code</name>
<type>String</type>
<required>required</required>
<desc>商品编码</desc>
</param>
</request>
<response>
<param>
<name>sc_item</name>
<type>ScItem</type>
<level>Object</level>
<desc>后台商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.query</name>
<desc>查询后端商品</desc>
<request>
<param>
<name>bar_code</name>
<type>String</type>
<required>optional</required>
<desc>条形码</desc>
</param>
<param>
<name>item_name</name>
<type>String</type>
<required>optional</required>
<desc>商品名称</desc>
</param>
<param>
<name>item_type</name>
<type>Number</type>
<required>optional</required>
<desc>ITEM类型(只允许输入以下英文或空) NORMAL 0:普通商品; COMBINE 1:是否是组合商品 DISTRIBUTION</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>商家给商品的一个编码</desc>
</param>
<param>
<name>page_index</name>
<type>Number</type>
<required>optional</required>
<desc>当前页码数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>wms_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>page_index</name>
<type>Number</type>
<level>Basic</level>
<desc>当前所在页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>返回商品列表的页数</desc>
</param>
<param>
<name>query_pagination</name>
<type>QueryPagination</type>
<level>Object</level>
<desc>分页</desc>
</param>
<param>
<name>sc_item_list</name>
<type>ScItem</type>
<level>Object Array</level>
<desc>List&lt;ScItemDO&gt;</desc>
</param>
<param>
<name>total_page</name>
<type>Number</type>
<level>Basic</level>
<desc>商品条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.scitem.update</name>
<desc>根据商品ID或商家编码修改后端商品</desc>
<request>
<param>
<name>bar_code</name>
<type>String</type>
<required>optional</required>
<desc>条形码</desc>
</param>
<param>
<name>brand_id</name>
<type>Number</type>
<required>optional</required>
<desc>品牌id</desc>
</param>
<param>
<name>brand_name</name>
<type>String</type>
<required>optional</required>
<desc>brand_Name</desc>
</param>
<param>
<name>height</name>
<type>Number</type>
<required>optional</required>
<desc>高 单位：mm</desc>
</param>
<param>
<name>is_area_sale</name>
<type>Number</type>
<required>optional</required>
<desc>1表示区域销售，0或是空是非区域销售</desc>
</param>
<param>
<name>is_costly</name>
<type>Number</type>
<required>optional</required>
<desc>是否是贵重品 0:不是 1：是</desc>
</param>
<param>
<name>is_dangerous</name>
<type>Number</type>
<required>optional</required>
<desc>是否危险 0：不是  0：是</desc>
</param>
<param>
<name>is_friable</name>
<type>Number</type>
<required>optional</required>
<desc>是否易碎 0：不是  1：是</desc>
</param>
<param>
<name>is_warranty</name>
<type>Number</type>
<required>optional</required>
<desc>是否保质期：0:不是 1：是</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>后端商品ID，跟outer_code必须指定一个</desc>
</param>
<param>
<name>item_name</name>
<type>String</type>
<required>optional</required>
<desc>商品名称</desc>
</param>
<param>
<name>item_type</name>
<type>Number</type>
<required>optional</required>
<desc>0.普通供应链商品 1.供应链组合主商品</desc>
</param>
<param>
<name>length</name>
<type>Number</type>
<required>optional</required>
<desc>长度 单位：mm</desc>
</param>
<param>
<name>matter_status</name>
<type>Number</type>
<required>optional</required>
<desc>0:液体，1：粉体，2：固体</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>special</required>
<desc>商家编码，跟item_id必须指定一个</desc>
</param>
<param>
<name>price</name>
<type>Number</type>
<required>optional</required>
<desc>price</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>remark</desc>
</param>
<param>
<name>remove_properties</name>
<type>String</type>
<required>optional</required>
<desc>移除商品属性P列表,P由系统分配：p1；p2</desc>
</param>
<param>
<name>spu_id</name>
<type>Number</type>
<required>optional</required>
<desc>淘宝SKU产品级编码CSPU ID</desc>
</param>
<param>
<name>update_properties</name>
<type>String</type>
<required>optional</required>
<desc>需要更新的商品属性格式是  p1:v1,p2:v2,p3:v3</desc>
</param>
<param>
<name>volume</name>
<type>Number</type>
<required>optional</required>
<desc>体积：立方厘米</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>weight</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>optional</required>
<desc>宽 单位：mm</desc>
</param>
<param>
<name>wms_code</name>
<type>String</type>
<required>optional</required>
<desc>仓储商编码</desc>
</param>
</request>
<response>
<param>
<name>update_rows</name>
<type>Number</type>
<level>Basic</level>
<desc>更新商品数量,1表示成功更新了一条数据，0：表示未找到匹配的数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.abstract.addword</name>
<desc>增加关键词，只支持json返回</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>传入参数的字符集</desc>
</param>
<param>
<name>word</name>
<type>String</type>
<required>required</required>
<max_length>12</max_length>
<desc>关键词，长度大于0&lt;br /&gt; 支持最大长度为：12&lt;br /&gt; 支持的最大列表长度为：12</desc>
</param>
</request>
<response>
<param>
<name>error_msg</name>
<type>String</type>
<level>Basic</level>
<desc>例如单词长度太长等，当ret_code=-1时才有这项</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0或-1，表示错误或正确，错误时有错误信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.abstract.deleteword</name>
<desc>删除关键词，只支持json返回</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>传入参数的字符集</desc>
</param>
<param>
<name>word</name>
<type>String</type>
<required>required</required>
<max_length>12</max_length>
<desc>关键词，长度大于0&lt;br /&gt; 支持最大长度为：12&lt;br /&gt; 支持的最大列表长度为：12</desc>
</param>
</request>
<response>
<param>
<name>error_msg</name>
<type>String</type>
<level>Basic</level>
<desc>例如单词长度太长等</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0或-1，表示错误或正确，错误时有错误信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.abstract.getwordlist</name>
<desc>获取关键词列表，只支持json返回</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>传入参数的字符集</desc>
</param>
</request>
<response>
<param>
<name>error_msg</name>
<type>String</type>
<level>Basic</level>
<desc>例如单词长度太长等，ret_code=-1才有</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0或-1，表示错误或正确，错误时有错误信息</desc>
</param>
<param>
<name>word_lists</name>
<type>WordList</type>
<level>Object Array</level>
<desc>关键词列表，ret_code=0才有</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.abstract.initialize</name>
<desc>模糊查询服务初始化，只支持json返回</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>传入参数的字符集</desc>
</param>
</request>
<response>
<param>
<name>error_msg</name>
<type>String</type>
<level>Basic</level>
<desc>当ret_code=-1时这个变量才有</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0或-1表示成功或失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.abstract.logquery</name>
<desc>模糊聊天记录查询,仅支持json返回，仅提供近3个月内数据查询，开始和结束时间不能超过7天</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>传入参数的字符集</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>获取记录条数，默认值是1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>end_date</name>
<type>String</type>
<required>required</required>
<desc>东八区时间</desc>
</param>
<param>
<name>from_id</name>
<type>String</type>
<required>required</required>
<desc>卖家id，有cntaobao前缀</desc>
</param>
<param>
<name>next_key</name>
<type>String</type>
<required>optional</required>
<desc>设置了这个值，那么聊天记录就从这个点开始查询</desc>
</param>
<param>
<name>start_date</name>
<type>String</type>
<required>required</required>
<desc>东八区时间</desc>
</param>
<param>
<name>to_id</name>
<type>String</type>
<required>required</required>
<desc>买家id，有cntaobao前缀</desc>
</param>
</request>
<response>
<param>
<name>error_msg</name>
<type>String</type>
<level>Basic</level>
<desc>例如单词长度太长等。 
当ret_code不为0时这个值存在。</desc>
</param>
<param>
<name>from_id</name>
<type>String</type>
<level>Basic</level>
<desc>卖家id</desc>
</param>
<param>
<name>is_sliced</name>
<type>Number</type>
<level>Basic</level>
<desc>0或1 
其他返回时，是由于用户名等参数设置有误等引起的远端服务错误</desc>
</param>
<param>
<name>msg_lists</name>
<type>MsgList</type>
<level>Object Array</level>
<desc>消息列表</desc>
</param>
<param>
<name>next_key</name>
<type>String</type>
<level>Basic</level>
<desc>当is_sliced为1时有效</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0或-1，表示错误或正确，错误时有错误信息. 
为-1时就只有error_msg字段是有效的。</desc>
</param>
<param>
<name>to_id</name>
<type>String</type>
<level>Basic</level>
<desc>买家id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.accountstatus.get</name>
<desc>查询E客服账号的操作记录。如：登录，下线，挂起等。</desc>
<request>
<param>
<name>btime</name>
<type>String</type>
<required>required</required>
<max_length>19</max_length>
<desc>的起始时间。&lt;/br&gt; 
格式为： YYYY-mm-dd_HH:MM:SS &lt;/br&gt; 
注：&lt;/br&gt; 
1. 查询时间必须在30天之内。 
2. 起始时间和结束时间间隔不超过7天。&lt;br /&gt; 支持最大长度为：19&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>etime</name>
<type>String</type>
<required>required</required>
<max_length>19</max_length>
<desc>结束时间 。 &lt;/br&gt; 
格式为：YYYY-mm-dd_HH:MM:SS &lt;/br&gt; 
注：&lt;/br&gt; 
1. 查询时间必须在30天之内。 
2. 起始时间和结束时间间隔不超过7天。&lt;br /&gt; 支持最大长度为：19&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>uid</name>
<type>String</type>
<required>required</required>
<max_length>1920</max_length>
<max_list_size>30</max_list_size>
<desc>查询账号（序列）。 需要带前缀（如cntaobao）。&lt;/br&gt; 
 
注： &lt;/br&gt; 
1. uid中所有账号必须为授权店铺的店铺内账号。&lt;/br&gt; 
2. 如果传入多个账号，账号与账号之间以","分割。最多30个账号。每个账号的最大长度是64。&lt;/br&gt; 
3. 由于后端依然是顺序请求，所以该接口的响应时长是会随uid的数量线性增长，即uid数量越多，调用时间越长。请合理使用&lt;br /&gt; 支持最大长度为：1920&lt;br /&gt; 支持的最大列表长度为：1920</desc>
</param>
</request>
<response>
<param>
<name>account_infos</name>
<type>AccountInfo</type>
<level>Object Array</level>
<desc>账号操作记录列表。</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>接口调用返回码。 0：成功。100：部分成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.avgwaittime.get</name>
<desc>根据客服ID和日期，获取该客服"当日接待的所有客户的平均等待时长"。  &lt;br/&gt; 
备注：  &lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"当日接待的所有客户的平均等待时长"。  &lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日接待的所有客户的平均等待时长"。service_staff_id为所有子帐号，用 "," 隔开 &lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"当日接待的所有客户的平均等待时长"。  service_staff_id为所有子帐号，用 "," 隔开&lt;br/&gt; 
 4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。  &lt;br/&gt; 
 5、开始时间与结束时间之间的间隔不能超过7天  &lt;br/&gt; 
 6、不能查询90天以前的数据  &lt;br/&gt; 
 7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束时间</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
</request>
<response>
<param>
<name>waiting_time_list_on_days</name>
<type>WaitingTimesOnDay</type>
<level>Object Array</level>
<desc>平均等待时长</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.chatpeers.get</name>
<desc>获取聊天对象列表，只能获取最近1个月内的数据且查询时间段&lt;=7天,只支持xml返回 。</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>字符集</desc>
</param>
<param>
<name>chat_id</name>
<type>String</type>
<required>required</required>
<desc>聊天用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>end_date</name>
<type>String</type>
<required>required</required>
<desc>查询结束日期。如2010-03-24，与起始日期跨度不能超过7天</desc>
</param>
<param>
<name>start_date</name>
<type>String</type>
<required>required</required>
<desc>查询起始日期。如2010-02-01，与当前日期间隔小于1个月。</desc>
</param>
</request>
<response>
<param>
<name>chatpeers</name>
<type>Chatpeer</type>
<level>Object Array</level>
<desc>聊天对象ID列表</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>成员数目。</desc>
</param>
<param>
<name>ret</name>
<type>Number</type>
<level>Basic</level>
<desc>返回码： 
10000:成功； 

60000：时间非法，包括1)时间段超过7天,或2)起始时间距今超过30天，或3)时间格式不对； 

50000：聊天用户ID不是该店铺的帐号； 

40000：系统错误，包括必填参数为空。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.evals.get</name>
<desc>根据用户id查询用户对应的评价详细情况， 
主账号id可以查询店铺内子账号的评价 
组管理员可以查询组内账号的评价 
非管理员的子账号可以查自己的评价</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束时间</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>想要查询的账号列表</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
</request>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示成功</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
<param>
<name>staff_eval_details</name>
<type>EvalDetail</type>
<level>Object Array</level>
<desc>评价具体数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.evaluation.get</name>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"客服评价统计" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"客服评价统计"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"客服评价统计"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"客服评价统计"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询开始日期</desc>
</param>
</request>
<response>
<param>
<name>staff_eval_stat_on_days</name>
<type>StaffEvalStatOnDay</type>
<level>Object Array</level>
<desc>客服平均统计列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.groupmember.get</name>
<desc>用某个组管理员账号查询，返回该组组名、和该组所有组成员ID（E客服的分流设置）。 
 
用旺旺主帐号查询，返回所有组的组名和该组所有组成员ID。 
 
返回的组成员ID可以是多个，用 "," 隔开。 
 
被查者ID只能传入一个。 
 
组成员中排名最靠前的ID是组管理员ID</desc>
<request>
<param>
<name>manager_id</name>
<type>String</type>
<required>required</required>
<max_length>128</max_length>
<desc>主帐号ID：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：128&lt;br /&gt; 支持的最大列表长度为：128</desc>
</param>
</request>
<response>
<param>
<name>group_member_list</name>
<type>GroupMember</type>
<level>Object Array</level>
<desc>组及其成员列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.loginlogs.get</name>
<desc>通过用户id查询用户自己或者子账户的登录日志： 
主账号可以查询自己和店铺子账户的登录日志（查询时需要输入子账号，多个用，隔开） 
组管理员可以查询自己和组内子账号的登录日志（查询时需要输入子账号，多个用，隔开） 
非组管理员的子账户只能查询自己的登录日志 
注：目前sdk只能支持到body内容的返回，body内数据结构的解析需要开发者自己写代码</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询登录日志的结束时间，必须按示例的格式，否则会返回错误</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>需要查询登录日志的账号列表</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询登录日志的开始日期，必须按示例的格式，否则会返回错误</desc>
</param>
</request>
<response>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>在指定时间段登录日志的条数</desc>
</param>
<param>
<name>loginlogs</name>
<type>LoginLog</type>
<level>Object Array</level>
<desc>登录日志具体信息</desc>
</param>
<param>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>被查询的用户id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.newevals.get</name>
<desc>查询评价详细数据</desc>
<request>
<param>
<name>btime</name>
<type>String</type>
<required>required</required>
<desc>查询登录日志的开始日期，必须按示例的格式，否则会返回错误； 
开始时间不能在当前时间30天前，开始时间和结束时间的间隔不能超过7天； 
开始时间不能超过当前系统时间</desc>
</param>
<param>
<name>etime</name>
<type>String</type>
<required>required</required>
<desc>查询登录日志的结束时间，必须按示例的格式，否则会返回错误； 
结束时间不能小于开始时间，结束时间和开始时间的间隔不能超过7天</desc>
</param>
<param>
<name>query_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>需要查询登录日志的账号列表，多个id之间用逗号隔开，每次查询的id数不能超过30个</desc>
</param>
</request>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示成功</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
<param>
<name>staff_eval_details</name>
<type>EvalDetail</type>
<level>Object Array</level>
<desc>评价具体数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.newloginlogs.get</name>
<desc>查询登陆日志</desc>
<request>
<param>
<name>btime</name>
<type>String</type>
<required>required</required>
<desc>查询登录日志的开始日期，必须按示例的格式，否则会返回错误； 
开始时间不能在当前时间30天前，开始时间和结束时间的间隔不能超过7天； 
开始时间不能超过当前系统时间</desc>
</param>
<param>
<name>etime</name>
<type>String</type>
<required>required</required>
<desc>查询登录日志的结束时间，必须按示例的格式，否则会返回错误； 
结束时间不能小于开始时间，结束时间和开始时间的间隔不能超过7天</desc>
</param>
<param>
<name>query_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>需要查询登录日志的账号列表，多个id之间用逗号隔开，每次查询的id数不能超过30个</desc>
</param>
</request>
<response>
<param>
<name>userloginlogs</name>
<type>UserLoginlog</type>
<level>Object Array</level>
<desc>用户登录日志</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.noreplynum.get</name>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"未回复情况" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"未回复情况"（未回复人数、未回复的ID）。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"未回复情况"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"未回复情况"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>non_reply_stat_on_days</name>
<type>NonReplyStatOnDay</type>
<level>Object Array</level>
<desc>未回复统计列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.onlinetime.get</name>
<desc>描述：根据客服ID和日期，获取该客服"当日在线时长"。 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"当日在线时长"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日在线时长"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"当日在线时长"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、日累计在线时长定义：当日该用户累计的旺旺在线时长 
 
    6、开始时间与结束时间之间的间隔不能超过7天 
    7、不能查询90天以前的数据 
    8、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>online_times_list_on_days</name>
<type>OnlineTimesOnDay</type>
<level>Object Array</level>
<desc>客服在线时长（按天统计，排列）</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.receivenum.get</name>
<desc>根据操作者ID，返回被查者ID指定时间段内每个帐号的"已接待人数"&lt;br/&gt; 
备注：&lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"已接待人数"。&lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"已接待人数"。&lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"已接待人数"。&lt;br/&gt; 
（注意：这里说的是授权是主帐号，可以查询所有子帐号的数据，具体要查询哪些子账号的数据，需要在service_staff_id具体指定，而不是service_staff_id直接输入主帐号）&lt;br/&gt; 
 4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
 5、规则：某客服在1天内和同一个客户交流了多次，已回复人数算1。&lt;br/&gt; 
6、"已接待人数"定义：买家、卖家彼此发过至少1条消息 ，不论谁先发都可以。&lt;br/&gt; 
  7、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
  8、开始时间与结束时间之间的间隔不能超过7天&lt;br/&gt; 
  9、不能查询90天以前的数据&lt;br/&gt; 
  10、不能查询当天的记录&lt;br/&gt; 
   11、查询日期精确到日&lt;br/&gt;</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询接待人数的结束日期 时间精确到日 时分秒可以直接传00:00:00</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询接待人数的开始日期 时间精确到日 时分秒可直接传 00:00:00</desc>
</param>
</request>
<response>
<param>
<name>reply_stat_list_on_days</name>
<type>ReplyStatOnDay</type>
<level>Object Array</level>
<desc>客服回复列表，按天统计，排列</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.streamweigths.get</name>
<desc>获取当前登录用户自己的店铺内的分流权重设置，只支持xml 返回。</desc>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示返回正确</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>返回数据条数</desc>
</param>
<param>
<name>staff_stream_weights</name>
<type>StreamWeight</type>
<level>Object Array</level>
<desc>分流权重数据</desc>
</param>
<param>
<name>total_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>返回数据的总权重，返回数据为空的时候没有这个数字</desc>
</param>
</response>
</api>
<api>
<name>taobao.tbk.items.convert</name>
<desc>淘宝客商品转换。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:click_url</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>推广者的淘宝会员昵称.注：指的是淘宝的会员登录名</desc>
</param>
<param>
<name>num_iids</name>
<type>Number</type>
<required>special</required>
<max_list_size>50</max_list_size>
<desc>淘宝客商品数字id串.最大输入40个.格式如:"value1,value2,value3" 用" , "号分隔商品数字id</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>optional</required>
<desc>用户的pid,必须是mm_xxxx_0_0这种格式中间的"xxxx". 注意nick和pid至少需要传递一个,如果2个都传了,将以pid为准,且pid的最大长度是20。第一次调用接口的用户，推荐该入参不要填写，使用nick=（淘宝账号）的方式去获取，以免出错。</desc>
</param>
<param>
<name>refer_type</name>
<type>Number</type>
<required>optional</required>
<desc>点击串跳转类型，1：单品，2：单品中间页（无线暂无）</desc>
</param>
<param>
<name>track_iids</name>
<type>String</type>
<required>special</required>
<max_list_size>50</max_list_size>
<desc>商品track_iid串（带有追踪效果的商品id),最大输入40个,与num_iids必填其一</desc>
</param>
</request>
<response>
<param>
<name>tbk_items</name>
<type>TbkItem</type>
<level>Object Array</level>
<desc>淘宝客商品对象列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.tbk.items.detail.get</name>
<desc>查询淘宝客推广商品详细信息。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:num_iid,seller_id,nick,title,price,volume,pic_url,item_url,shop_url
;字段之间用","分隔.</desc>
</param>
<param>
<name>num_iids</name>
<type>Number</type>
<required>special</required>
<max_list_size>50</max_list_size>
<desc>淘宝客商品数字id串.最大输入40个.格式如:"value1,value2,value3" 用" , "号分隔商品数字id</desc>
</param>
<param>
<name>track_iids</name>
<type>String</type>
<required>special</required>
<max_list_size>50</max_list_size>
<desc>商品track_iid串（带有追踪效果的商品id),最大输入40个,与num_iids必填其一</desc>
</param>
</request>
<response>
<param>
<name>tbk_items</name>
<type>TbkItem</type>
<level>Object Array</level>
<desc>淘宝客商品对象列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.tbk.items.get</name>
<desc>查询淘宝客推广商品。</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<desc>商品所在地</desc>
</param>
<param>
<name>auto_send</name>
<type>String</type>
<required>optional</required>
<desc>是否自动发货</desc>
</param>
<param>
<name>cash_coupon</name>
<type>String</type>
<required>optional</required>
<desc>是否支持抵价券，设置为true表示该商品支持抵价券，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>cash_ondelivery</name>
<type>String</type>
<required>optional</required>
<desc>是否支持货到付款，设置为true表示该商品是支持货到付款，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<max_value>2147483647</max_value>
<desc>标准商品后台类目id。该ID可以通过taobao.itemcats.get接口获取到。&lt;br /&gt; 支持最大值为：2147483647</desc>
</param>
<param>
<name>end_commissionNum</name>
<type>String</type>
<required>optional</required>
<desc>30天累计推广量（与返回数据中的commission_num字段对应）上限.</desc>
</param>
<param>
<name>end_commissionRate</name>
<type>String</type>
<required>optional</required>
<desc>佣金比率上限，如：2345表示23.45%。注：start_commissionRate和end_commissionRate一起设置才有效。</desc>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<required>optional</required>
<desc>可选值和start_credit一样.start_credit的值一定要小于或等于end_credit的值。注：end_credit与start_credit一起使用才生效</desc>
</param>
<param>
<name>end_price</name>
<type>String</type>
<required>optional</required>
<desc>最高价格</desc>
</param>
<param>
<name>end_totalnum</name>
<type>String</type>
<required>optional</required>
<desc>商品总成交量（与返回字段volume对应）上限。</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:num_iid,seller_id,nick,title,volume,pic_url,item_url,shop_url;字段之间用","分隔</desc>
</param>
<param>
<name>guarantee</name>
<type>String</type>
<required>optional</required>
<desc>是否查询消保卖家</desc>
</param>
<param>
<name>is_mobile</name>
<type>Boolean</type>
<required>optional</required>
<desc>标识一个应用是否来在无线或者手机应用,如果是true则会使用其他规则加密点击串.如果不传值,则默认是false.</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>special</required>
<desc>商品标题中包含的关键字. 注意:查询时keyword,cid至少选择其中一个参数</desc>
</param>
<param>
<name>mall_item</name>
<type>String</type>
<required>optional</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>onemonth_repair</name>
<type>String</type>
<required>optional</required>
<desc>是否30天维修，设置为true表示该商品是支持30天维修，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>overseas_item</name>
<type>String</type>
<required>optional</required>
<desc>是否海外商品，设置为true表示该商品是属于海外商品，默认为false</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>10</max_value>
<desc>结果页数.1~10&lt;br /&gt; 支持最大值为：10</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>400</max_value>
<desc>每页返回结果数.最大每页40&lt;br /&gt; 支持最大值为：400</desc>
</param>
<param>
<name>real_describe</name>
<type>String</type>
<required>optional</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>sevendays_return</name>
<type>String</type>
<required>optional</required>
<desc>是否支持7天退换，设置为true表示该商品支持7天退换，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>默认排序:default

price_desc(价格从高到低) 
price_asc(价格从低到高) 
credit_desc(信用等级从高到低) 
commissionRate_desc(佣金比率从高到低) 
commissionRate_asc(佣金比率从低到高) 
commissionNum_desc(成交量成高到低) 
commissionNum_asc(成交量从低到高) 
commissionVolume_desc(总支出佣金从高到低) 
commissionVolume_asc(总支出佣金从低到高) 
delistTime_desc(商品下架时间从高到低) 
delistTime_asc(商品下架时间从低到高)</desc>
</param>
<param>
<name>start_commissionNum</name>
<type>String</type>
<required>optional</required>
<desc>30天累计推广量（与返回数据中的commission_num字段对应）下限.注：该字段要与end_commissionNum一起使用才生效</desc>
</param>
<param>
<name>start_commissionRate</name>
<type>String</type>
<required>optional</required>
<desc>佣金比率下限，如：1234表示12.34%</desc>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<required>optional</required>
<desc>卖家信用: 
 
1heart(一心)  
2heart (两心)  
3heart(三心)  
4heart(四心)  
5heart(五心)  
1diamond(一钻)  
2diamond(两钻)  
3diamond(三钻)  
4diamond(四钻)  
5diamond(五钻)  
1crown(一冠)  
2crown(两冠)  
3crown(三冠)  
4crown(四冠)  
5crown(五冠)  
1goldencrown(一黄冠)  
2goldencrown(二黄冠)  
3goldencrown(三黄冠)  
4goldencrown(四黄冠)  
5goldencrown(五黄冠)</desc>
</param>
<param>
<name>start_price</name>
<type>String</type>
<required>optional</required>
<desc>起始价格.传入价格参数时,需注意起始价格和最高价格必须一起传入,并且 start_price &lt;= end_price</desc>
</param>
<param>
<name>start_totalnum</name>
<type>String</type>
<required>optional</required>
<desc>商品总成交量（与返回字段volume对应）下限。</desc>
</param>
<param>
<name>vip_card</name>
<type>String</type>
<required>optional</required>
<desc>是否支持VIP卡，设置为true表示该商品支持VIP卡，设置为false或不设置表示不判断这个属性</desc>
</param>
</request>
<response>
<param>
<name>tbk_items</name>
<type>TbkItem</type>
<level>Object Array</level>
<desc>淘宝客商品对象列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.tbk.shops.convert</name>
<desc>淘客店铺转换。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:click_url.</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>optional</required>
<desc>用户的pid,必须是mm_xxxx_0_0这种格式中间的"xxxx". 注意nick和pid至少需要传递一个,如果2个都传了,将以pid为准,且pid的最大长度是20。第一次调用接口的用户，推荐该入参不要填写，使用nick=（淘宝账号）的方式去获取，以免出错。</desc>
</param>
<param>
<name>seller_nicks</name>
<type>String</type>
<required>special</required>
<max_list_size>10</max_list_size>
<desc>卖家昵称串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔。 
注意：sids和seller_nicks两个参数任意必须输入一个，如果同时输入，则以seller_nicks为准</desc>
</param>
<param>
<name>sids</name>
<type>Number</type>
<required>special</required>
<max_list_size>10</max_list_size>
<desc>店铺id串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔店铺id. 
注意：sids和seller_nicks两个参数任意必须输入一个，如果同时输入，则以seller_nicks为准</desc>
</param>
</request>
<response>
<param>
<name>tbk_shops</name>
<type>TbkShop</type>
<level>Object Array</level>
<desc>淘宝客店铺对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.tbk.shops.detail.get</name>
<desc>淘客店铺详情。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:user_id,seller_nick,shop_title,pic_url,shop_url;字段之间用","分隔.</desc>
</param>
<param>
<name>is_mobile</name>
<type>Boolean</type>
<required>optional</required>
<desc>标识一个应用是否来在无线或者手机应用,如果是true则会生成无线店铺URL.如果不传值,则默认是false.</desc>
</param>
<param>
<name>seller_nicks</name>
<type>String</type>
<required>special</required>
<max_list_size>10</max_list_size>
<desc>卖家昵称串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔。 
注意：sids和seller_nicks两个参数任意必须输入一个，如果同时输入，则以seller_nicks为准</desc>
</param>
<param>
<name>sids</name>
<type>Number</type>
<required>special</required>
<max_list_size>10</max_list_size>
<desc>店铺id串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔店铺id. 
注意：sids和seller_nicks两个参数任意必须输入一个，如果同时输入，则以seller_nicks为准</desc>
</param>
</request>
<response>
<param>
<name>tbk_shops</name>
<type>TbkShop</type>
<level>Object Array</level>
<desc>淘宝客店铺对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.tbk.shops.get</name>
<desc>提供对参加了淘客推广的店铺的搜索。</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>店铺前台展示类目id，可以通过taobao.shopcats.list.get获取。</desc>
</param>
<param>
<name>end_auctioncount</name>
<type>String</type>
<required>optional</required>
<desc>店铺商品数查询结束值。需要跟start_auctioncount同时设置才生效，只设置该值不生效。</desc>
</param>
<param>
<name>end_commissionrate</name>
<type>String</type>
<required>optional</required>
<desc>店铺佣金比例查询结束值</desc>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<required>optional</required>
<desc>店铺掌柜信用等级查询结束 
店铺的信用等级总共为20级 1-5:1heart-5heart;6-10:1diamond-5diamond;11-15:1crown-5crown;16-20:1goldencrown-5goldencrown</desc>
</param>
<param>
<name>end_totalaction</name>
<type>String</type>
<required>optional</required>
<desc>店铺累计推广数查询结束值</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段，目前包括如下字段user_id,seller_nick,shop_title,pic_url,shop_url</desc>
</param>
<param>
<name>is_mobile</name>
<type>Boolean</type>
<required>optional</required>
<desc>标识一个应用是否来在无线或者手机应用,如果是true则会使用其他规则加密点击串.如果不传值,则默认是false.</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>special</required>
<desc>店铺主题关键字查询</desc>
</param>
<param>
<name>only_mall</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否只显示商城店铺</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.结果页1~99</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.最大每页40</desc>
</param>
<param>
<name>sort_field</name>
<type>String</type>
<required>optional</required>
<desc>排序字段。目前支持的排序字段有： 
commission_rate，auction_count，total_auction。必须输入这三个任意值，否则排序无效</desc>
</param>
<param>
<name>sort_type</name>
<type>String</type>
<required>optional</required>
<desc>排序类型.必须输入desc,asc任一值，否则无效 
desc-降序,asc-升序</desc>
</param>
<param>
<name>start_auctioncount</name>
<type>String</type>
<required>optional</required>
<desc>店铺宝贝数查询开始值。需要跟end_auctioncount同时设置才生效，只设置该值不生效。</desc>
</param>
<param>
<name>start_commissionrate</name>
<type>String</type>
<required>optional</required>
<desc>店铺佣金比例查询开始值，注意佣金比例是x10000的整数.50表示0.5%</desc>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<required>optional</required>
<desc>店铺掌柜信用等级起始 
店铺的信用等级总共为20级 1-5:1heart-5heart;6-10:1diamond-5diamond;11-15:1crown-5crown;16-20:1goldencrown-5goldencrown</desc>
</param>
<param>
<name>start_totalaction</name>
<type>String</type>
<required>optional</required>
<desc>店铺累计推广量开始值</desc>
</param>
</request>
<response>
<param>
<name>tbk_shops</name>
<type>TbkShop</type>
<level>Object Array</level>
<desc>搜索结果列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的店铺总数</desc>
</param>
</response>
</api>
<api>
<name>alibaba.geoip.get</name>
<desc>API提供通过IP地址查询对应的国家、省、市、运营商等信息的服务</desc>
<request>
<param>
<name>ip</name>
<type>String</type>
<required>required</required>
<desc>要查询的IP地址,与language一起使用，与iplist二选一使用，提供单个IP查询</desc>
</param>
<param>
<name>language</name>
<type>String</type>
<required>required</required>
<desc>返回结果的文字语言，cn中文；en英文</desc>
</param>
</request>
<response>
<param>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市名称</desc>
</param>
<param>
<name>cityid</name>
<type>String</type>
<level>Basic</level>
<desc>城市id</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家</desc>
</param>
<param>
<name>countryid</name>
<type>String</type>
<level>Basic</level>
<desc>国家编码</desc>
</param>
<param>
<name>county</name>
<type>String</type>
<level>Basic</level>
<desc>县</desc>
</param>
<param>
<name>countyid</name>
<type>String</type>
<level>Basic</level>
<desc>县ID</desc>
</param>
<param>
<name>ip</name>
<type>String</type>
<level>Basic</level>
<desc>IP地址字符串</desc>
</param>
<param>
<name>isp</name>
<type>String</type>
<level>Basic</level>
<desc>运营商名称</desc>
</param>
<param>
<name>ispid</name>
<type>String</type>
<level>Basic</level>
<desc>运营商id</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<desc>语言</desc>
</param>
<param>
<name>latitude</name>
<type>String</type>
<level>Basic</level>
<desc>经度</desc>
</param>
<param>
<name>lip</name>
<type>Number</type>
<level>Basic</level>
<desc>IP地址的整数值</desc>
</param>
<param>
<name>longitude</name>
<type>String</type>
<level>Basic</level>
<desc>纬度</desc>
</param>
<param>
<name>region</name>
<type>String</type>
<level>Basic</level>
<desc>地区名称</desc>
</param>
<param>
<name>regionid</name>
<type>String</type>
<level>Basic</level>
<desc>地区编码</desc>
</param>
</response>
</api>
<api>
<name>taobao.appip.get</name>
<desc>获取ISV发起请求服务器IP</desc>
<response>
<param>
<name>ip</name>
<type>String</type>
<level>Basic</level>
<desc>ISV发起请求服务器IP</desc>
</param>
</response>
</api>
<api>
<name>taobao.feedback.add</name>
<desc>添加用户反馈信息</desc>
<request>
<param>
<name>info</name>
<type>String</type>
<required>required</required>
<desc>具体反馈的信息，一个json构成的字符串</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>反馈信息的类型，例如是同步服务的或者其他系统的</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Date</type>
<level>Basic</level>
<desc>返回记录的时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.kfc.keyword.search</name>
<desc>对输入的文本信息进行禁忌关键词匹配，返回匹配的结果</desc>
<request>
<param>
<name>apply</name>
<type>String</type>
<required>optional</required>
<desc>应用点，分为一级应用点、二级应用点。其中一级应用点通常是指某一个系统或产品，比如淘宝的商品应用（taobao_auction）；二级应用点，是指一级应用点下的具体的分类，比如商品标题(title)、商品描述(content)。不同的二级应用可以设置不同关键词。 
 
这里的apply参数是由一级应用点与二级应用点合起来的字符（一级应用点+"."+二级应用点），如taobao_auction.title。 
 
 
通常apply参数是不需要传递的。如有特殊需求（比如特殊的过滤需求，需要自己维护一套自己词库），需传递此参数。</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>需要过滤的文本信息</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>发布信息的淘宝会员名，可以不传</desc>
</param>
</request>
<response>
<param>
<name>kfc_search_result</name>
<type>KfcSearchResult</type>
<level>Object</level>
<desc>KFC关键词匹配返回的结果信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.time.get</name>
<desc>获取淘宝系统当前时间</desc>
<response>
<param>
<name>time</name>
<type>Date</type>
<level>Basic</level>
<desc>淘宝系统当前时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.result.get</name>
<desc>获取异步任务结果。 
&lt;br/&gt;异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt; 
&lt;br/&gt;1. 只能获取AppKey自身创建的异步任务结果 
&lt;br/&gt;2. 如果任务状态为done，则返回任务结果（如taobao.topats.trades.fullinfo.get）或下载地址（如taobao.topats.trades.sold.get） 
&lt;br/&gt;3. 任务结果下载地址只能使用一次，需要重复下载可重新调用此接口获取下载地址</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<required>required</required>
<desc>任务id号，创建任务时返回的task_id</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>任务结果信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.task.delete</name>
<desc>可用于取消已经创建的异步任务。&lt;/br&gt; 
条件限制：&lt;/br&gt; 
1)一次只可以取消一个任务&lt;/br&gt; 
2）只能取消自己创建的任务</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<required>required</required>
<desc>需要取消的任务ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示操作是否成功，是为true，否为false。</desc>
</param>
</response>
</api>
<api>
<name>taobao.inventory.ipc.inventorydetail.get</name>
<desc>查询库存明细</desc>
<request>
<param>
<name>biz_order_id</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>主订单号，可选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>biz_sub_order_id</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>子订单号，可选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_index</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>当前页数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<desc>一页显示多少条</desc>
</param>
<param>
<name>sc_item_id</name>
<type>Number</type>
<required>required</required>
<desc>仓储商品id</desc>
</param>
<param>
<name>status_query</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>1:查询预扣  4：查询占用&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>inventory_details</name>
<type>IpcInventoryDetailDo</type>
<level>Object Array</level>
<desc>库存明细列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.reachable</name>
<desc>根据输入的目标地址，判断服务是否可达</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>optional</required>
<desc>详细地址</desc>
</param>
<param>
<name>area_code</name>
<type>String</type>
<required>optional</required>
<desc>标准区域编码(三级行政区编码或是四级行政区)，可以通过taobao.areas.get获取，如北京市朝阳区为110105</desc>
</param>
<param>
<name>partner_ids</name>
<type>String</type>
<required>required</required>
<desc>物流公司编码ID，可以从这个接口获取所有物流公司的标准编码taobao.logistics.companies.get，可以传入多个值，以英文逗号分隔，如“1000000952,1000000953”</desc>
</param>
<param>
<name>service_type</name>
<type>Number</type>
<required>required</required>
<desc>服务对应的数字编码，如揽派范围对应88</desc>
</param>
<param>
<name>source_area_code</name>
<type>String</type>
<required>optional</required>
<desc>发货地，标准区域编码(四级行政)，可以通过taobao.areas.get获取，如浙江省杭州市余杭区闲林街道为 330110011</desc>
</param>
</request>
<response>
<param>
<name>reachable_result_list</name>
<type>AddressReachableResult</type>
<level>Object Array</level>
<desc>地址可达返回结果，每个TP对应一个</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.extorder.cancle</name>
<desc>取消物流宝外部订单TOP接口</desc>
<request>
<param>
<name>ext_order_code</name>
<type>String</type>
<required>required</required>
<desc>外部单据编号</desc>
</param>
</request>
<response>
<param>
<name>error_code_list</name>
<type>String</type>
<level>Basic</level>
<desc>错误编码列表</desc>
</param>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间，只有在取消成功的情况下，才有效</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.extorder.create</name>
<desc>创建物流宝外部订单（E链通等）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>expect_end_time</name>
<type>Date</type>
<required>optional</required>
<desc>期望结束时间，在入库单会使用到</desc>
</param>
<param>
<name>expect_start_time</name>
<type>Date</type>
<required>optional</required>
<desc>计划开始送达时间 在入库单中可能会使用</desc>
</param>
<param>
<name>ext_flag</name>
<type>String</type>
<required>optional</required>
<desc>用字符串格式来表示订单标记列表：比如COD^PRESELL^SPLIT^LIMIT 等，中间用“^”来隔开 ---------------------------------------- 订单标记list（所有字母全部大写）1:COD-货到付款,2:LIMIT-限时配送,3:PRESELL-预售,4:INVOICE-需要发票,5:COMPLAIN-已投诉,6:MERGE-合单,7:SPLIT-拆单,8: EXCHANGE-退换货， 9:VISIT-上门 ,10:MODIFYTRANSPORT-可改配送方式,11:CONSIGN-代理已发货通知, 12:SELLER_AFFORD-卖家承担运费,13:SYNC_RETURN_BILL-同时退回发票,14: FENXIAO-分销订单标志</desc>
</param>
<param>
<name>ext_order_code</name>
<type>String</type>
<required>required</required>
<desc>外部单据编号</desc>
</param>
<param>
<name>ext_order_source</name>
<type>String</type>
<required>required</required>
<desc>外部订单来源： （1）LC：推荐物流 （2）EXT：wlb_ext （3）ERP：erp （4）WMS： WMS盘点 （5）FENXIAO：分销  (6) OMS: OMS （7）ELINK： ELINK</desc>
</param>
<param>
<name>ext_prev_order_id</name>
<type>String</type>
<required>optional</required>
<desc>引起当前单据的前一个单据的编号</desc>
</param>
<param>
<name>invoince_info</name>
<type>String</type>
<required>optional</required>
<desc>{"invoince_info": [{"bill_type":"发票类型，必选", "bill_title":"发票抬头，必选", "bill_amount":"发票金额(单位是分)，必选","bill_content":"发票内容，可选"}]}</desc>
</param>
<param>
<name>op_main_type</name>
<type>String</type>
<required>optional</required>
<desc>1:NORM-正常订单,2:RETURN-退货订单,3:SWITCH-换货订单</desc>
</param>
<param>
<name>operate_code</name>
<type>String</type>
<required>optional</required>
<desc>外部交易号</desc>
</param>
<param>
<name>operate_type</name>
<type>String</type>
<required>required</required>
<desc>订单类型： （1）OTHER： 其他 （2）TBTRADE： 淘宝交易 （3）OTHER_TRADE：其他交易 （4）COORDINATE：调拨（5）ALLOCATION： 盘点 （6）STOCK:采购</desc>
</param>
<param>
<name>order_item_list</name>
<type>String</type>
<required>required</required>
<desc>订单商品列表： {"order_item_list":[{" sub_trade_code ":"可选,淘宝子交易号","item_id":"必须,商品Id","item_code":"必须,商家编码","item_name":"可选,物流宝商品名称","item_quantity":"必选,计划数量","item_price":"必选,物品价格,单位为分","owner_user_nick ":"可选,货主nick 代销模式下会存在","flag":"判断是否为赠品0 不是1是","picture_url":"图片Url","remarks":"可选,备注","inventory_type":"必须，库存类型1 可销售库存 101 类型用来定义残次品 201 冻结类型库存 301 在途库存"]}</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>required</required>
<desc>订单类型：（1）INBOUND：入库（2）OUTBOUND：出库（3）ALLOCATE：调拨（4）RETURN_IN:退货入库</desc>
</param>
<param>
<name>package_count</name>
<type>Number</type>
<required>optional</required>
<desc>包裹件数，入库单和出库单中会用到</desc>
</param>
<param>
<name>postage</name>
<type>Number</type>
<required>optional</required>
<desc>运费，以分为单位</desc>
</param>
<param>
<name>receiver_info</name>
<type>String</type>
<required>optional</required>
<desc>发收方发货方信息必须传 手机和电话必选其一 收货方信息 邮编^^^省^^^市^^^区^^^具体地址^^^收件方名称^^^手机^^^电话 如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>备注</desc>
</param>
<param>
<name>retailer</name>
<type>String</type>
<required>required</required>
<desc>零售商</desc>
</param>
<param>
<name>return_tms_code</name>
<type>String</type>
<required>optional</required>
<desc>退货时的运单号</desc>
</param>
<param>
<name>schedule_end</name>
<type>String</type>
<required>optional</required>
<desc>投递时间范围要求,格式'15:20'用分号隔开</desc>
</param>
<param>
<name>schedule_start</name>
<type>String</type>
<required>optional</required>
<desc>投递时间范围要求,格式'13:20'用分号隔开</desc>
</param>
<param>
<name>schedule_type</name>
<type>String</type>
<required>optional</required>
<desc>投递时延要求: （1）INSTANT_ARRIVED： 当日达 （2）TOMMORROY_MORNING_ARRIVED：次晨达 （3）TOMMORROY_ARRIVED：次日达 （4）工作日：WORK_DAY （5）节假日：WEEKED_DAY</desc>
</param>
<param>
<name>sender_info</name>
<type>String</type>
<required>optional</required>
<desc>发货方信息，发收方发货方信息必须传 手机和电话必选其一 邮编^^^省^^^市^^^区^^^具体地址^^^收件方名称^^^手机^^^电话 如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>service_fee</name>
<type>Number</type>
<required>optional</required>
<desc>服务费用，以分为单位</desc>
</param>
<param>
<name>shipping_type</name>
<type>String</type>
<required>optional</required>
<desc>物流运送方式: （1）MAIL:平邮 （2）EXPRESS :快递？ (3) EMS: EMS (4) OTHER:其他</desc>
</param>
<param>
<name>sub_ext_order_code</name>
<type>String</type>
<required>optional</required>
<desc>子订单外部订单编号</desc>
</param>
<param>
<name>tms_code</name>
<type>String</type>
<required>optional</required>
<desc>快递公司的代码</desc>
</param>
<param>
<name>tms_tp_code</name>
<type>String</type>
<required>optional</required>
<desc>卖家建议的物流公司编码,或者退货时的发货公司编码</desc>
</param>
<param>
<name>total_price</name>
<type>Number</type>
<required>optional</required>
<desc>物品总价，以分为单位</desc>
</param>
<param>
<name>trade_order_type</name>
<type>String</type>
<required>optional</required>
<desc>交易订单类型，1：MAIN-表示主订单，2：SUB-表示子订单</desc>
</param>
<param>
<name>wms_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库的代码</desc>
</param>
<param>
<name>wms_code_destination</name>
<type>String</type>
<required>optional</required>
<desc>调拨单目地仓库</desc>
</param>
</request>
<response>
<param>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</param>
<param>
<name>ext_order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝外部订单创建成功后，返回物流宝的外部订单编号；如果订单创建失败，该字段为空。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.extorder.page.get</name>
<desc>外部系统调用此接口来分页查询物流宝外部订单</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询截止时间</desc>
</param>
<param>
<name>ext_order_code</name>
<type>String</type>
<required>optional</required>
<desc>外部单据编号</desc>
</param>
<param>
<name>ext_order_source</name>
<type>String</type>
<required>optional</required>
<desc>外部订单来源： （1）EXT_LC：推荐物流 （2）EXT_WLB：wlb_ext （3）EXT_ERP：erp （4）EXT_WMS： WMS盘点 （5）EXT_FENXIAO：分销  (6) EXT_OMS: OMS （7）EXT_ELINK： ELINK</desc>
</param>
<param>
<name>ext_order_status</name>
<type>String</type>
<required>optional</required>
<desc>订单状态： DRAFT-订单已创建，CANCLE-订单已取消，CLOSED-订单关闭，SEND2WMS-下发中，WMS_RECEIVED-已下发，REJECT-接收方拒签，WMS_SEND-已发货，SIGNED-签收成功</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页的第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页多少条</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询开始时间</desc>
</param>
</request>
<response>
<param>
<name>ext_order_list</name>
<type>WlbExtOrder</type>
<level>Object Array</level>
<desc>分页查询返回结果</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.icitem.regionsale.operate</name>
<desc>前台宝贝区域化销售服务添加和删除接口</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>前台宝贝id</desc>
</param>
<param>
<name>op_type</name>
<type>Number</type>
<required>required</required>
<desc>1:表示添加区域化销售服务 
-1:表示去除区域化销售服务</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.inventory.detail.get</name>
<desc>查询库存详情，通过商品ID获取发送请求的卖家的库存详情</desc>
<request>
<param>
<name>inventory_type_list</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>库存类型列表，值包括： 
VENDIBLE--可销售库存 
FREEZE--冻结库存 
ONWAY--在途库存 
DEFECT--残次品库存 
ENGINE_DAMAGE--机损 
BOX_DAMAGE--箱损 
EXPIRATION--过保</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>inventory_list</name>
<type>WlbInventory</type>
<level>Object Array</level>
<desc>库存详情列表</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.inventory.sync</name>
<desc>将库存同步至IC</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>item_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型.存如下值  
IC_ITEM --表示IC商品;  
IC_SKU --表示IC最小单位商品; 
WLB_ITEM  --表示WLB商品. 
若值不在范围内，则按WLB_ITEM处理</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>库存数量</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.inventorylog.query</name>
<desc>通过商品ID等几个条件来分页查询库存变更记录</desc>
<request>
<param>
<name>gmt_end</name>
<type>Date</type>
<required>optional</required>
<desc>结束修改时间,小于等于该时间</desc>
</param>
<param>
<name>gmt_start</name>
<type>Date</type>
<required>optional</required>
<desc>起始修改时间,大于等于该时间</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品ID</desc>
</param>
<param>
<name>op_type</name>
<type>String</type>
<required>optional</required>
<desc>库存操作作类型(可以为空) 
CHU_KU 1-出库 
RU_KU 2-入库 
FREEZE 3-冻结 
THAW 4-解冻 
CHECK_FREEZE 5-冻结确认 
CHANGE_KU 6-库存类型变更 
若值不在范围内，则按CHU_KU处理</desc>
</param>
<param>
<name>op_user_id</name>
<type>Number</type>
<required>optional</required>
<desc>可指定授权的用户来查询</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<required>optional</required>
<desc>单号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>inventory_log_list</name>
<type>WlbItemInventoryLog</type>
<level>Object Array</level>
<desc>库存变更记录列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.add</name>
<desc>添加物流宝商品，支持物流宝子商品和属性添加</desc>
<request>
<param>
<name>color</name>
<type>String</type>
<required>optional</required>
<desc>商品颜色</desc>
</param>
<param>
<name>goods_cat</name>
<type>String</type>
<required>optional</required>
<desc>货类</desc>
</param>
<param>
<name>height</name>
<type>Number</type>
<required>optional</required>
<desc>商品高度，单位毫米</desc>
</param>
<param>
<name>is_dangerous</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否危险品</desc>
</param>
<param>
<name>is_friable</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否易碎品</desc>
</param>
<param>
<name>is_sku</name>
<type>String</type>
<required>required</required>
<desc>是否sku</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>required</required>
<desc>商品编码</desc>
</param>
<param>
<name>length</name>
<type>Number</type>
<required>optional</required>
<desc>商品长度，单位毫米</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>商品名称</desc>
</param>
<param>
<name>package_material</name>
<type>String</type>
<required>optional</required>
<desc>商品包装材料类型</desc>
</param>
<param>
<name>price</name>
<type>Number</type>
<required>optional</required>
<desc>商品价格，单位：分</desc>
</param>
<param>
<name>pricing_cat</name>
<type>String</type>
<required>optional</required>
<desc>计价货类</desc>
</param>
<param>
<name>pro_name_list</name>
<type>Field List</type>
<required>optional</required>
<desc>属性名列表,目前支持的属性： 
毛重:GWeight	 
净重:Nweight 
皮重: Tweight 
自定义属性： 
paramkey1 
paramkey2 
paramkey3 
paramkey4</desc>
</param>
<param>
<name>pro_value_list</name>
<type>Field List</type>
<required>optional</required>
<desc>属性值列表： 
10,8</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>商品备注</desc>
</param>
<param>
<name>support_batch</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否支持批次</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>商品标题</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>NORMAL--普通商品 
COMBINE--组合商品 
DISTRIBUTION--分销</desc>
</param>
<param>
<name>volume</name>
<type>Number</type>
<required>optional</required>
<desc>商品体积，单位立方厘米</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品重量，单位G</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>optional</required>
<desc>商品宽度，单位毫米</desc>
</param>
</request>
<response>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增的商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.authorization.add</name>
<desc>添加商品的授权规则：添加规则之后代销商可以增加商品代销关系</desc>
<request>
<param>
<name>auth_type</name>
<type>Number</type>
<required>required</required>
<desc>授权类型：1=全量授权，0=部分授权 
当部分授权时，需要指定授权数量quantity</desc>
</param>
<param>
<name>authorize_end_time</name>
<type>Date</type>
<required>required</required>
<desc>授权结束时间</desc>
</param>
<param>
<name>authorize_start_time</name>
<type>Date</type>
<required>required</required>
<desc>授权开始时间</desc>
</param>
<param>
<name>consign_user_nick</name>
<type>String</type>
<required>required</required>
<desc>被授权人用户id</desc>
</param>
<param>
<name>item_id_list</name>
<type>String</type>
<required>required</required>
<desc>商品id列表，以英文逗号,分隔，最多可放入50个商品ID。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>255</max_length>
<desc>规则名称&lt;br /&gt; 支持最大长度为：255&lt;br /&gt; 支持的最大列表长度为：255</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<desc>授权数量</desc>
</param>
<param>
<name>rule_code</name>
<type>String</type>
<required>required</required>
<desc>授权规则：目前只有GRANT_FIX，按照数量授权</desc>
</param>
</request>
<response>
<param>
<name>rule_id_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>授权规则ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.authorization.delete</name>
<desc>删除授权关系.若有建立代销关系，会将其代销关系冻结即将状态置为失效(代销关系)。</desc>
<request>
<param>
<name>authorize_id</name>
<type>Number</type>
<required>required</required>
<desc>授权关系ID</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.authorization.query</name>
<desc>查询授权关系,可由货主或被授权人查询。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>授权商品ID</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>255</max_length>
<desc>授权名称&lt;br /&gt; 支持最大长度为：255&lt;br /&gt; 支持的最大列表长度为：255</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>rule_code</name>
<type>String</type>
<required>optional</required>
<desc>授权编码</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>状态： 只能输入如下值,范围外的默认按VALID处理;不选则查询所有;  
VALID -- 1 有效； INVALIDATION -- 2 失效</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>类型：可由不同角色来查询，默认值OWNER, 
OWNER -- 授权人, 
ON_COMMISSION -- 被授权人</desc>
</param>
</request>
<response>
<param>
<name>authorization_list</name>
<type>WlbAuthorization</type>
<level>Object Array</level>
<desc>授权关系列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.batch.query</name>
<desc>根据用户id，item id list和store code来查询商品库存信息和批次信息</desc>
<request>
<param>
<name>item_ids</name>
<type>String</type>
<required>required</required>
<desc>需要查询的商品ID列表，以字符串表示，ID间以;隔开</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，指定查询页数，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，每页查询数量，默认20，最大值50,大于50时按照50条查询</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编号</desc>
</param>
</request>
<response>
<param>
<name>item_inventory_batch_list</name>
<type>WlbItemBatchInventory</type>
<level>Object Array</level>
<desc>商品库存及批次信息查询结果</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>返回结果记录的数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.combination.create</name>
<desc>创建商品组合关系</desc>
<request>
<param>
<name>dest_item_list</name>
<type>Field List</type>
<required>required</required>
<desc>组合商品的id列表</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要建立组合关系的商品id</desc>
</param>
<param>
<name>proportion_list</name>
<type>Field List</type>
<required>optional</required>
<desc>组成组合商品的比例列表，描述组合商品的组合比例，默认为1,1,1</desc>
</param>
</request>
<response>
<param>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>组合关系创建时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.combination.delete</name>
<desc>删除商品组合关系</desc>
<request>
<param>
<name>dest_item_list</name>
<type>Field List</type>
<required>required</required>
<desc>组合商品的id列表</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>组合关系的商品id</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.combination.get</name>
<desc>根据商品id查询商品组合关系</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要查询的组合商品id</desc>
</param>
</request>
<response>
<param>
<name>item_id_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>组合子商品id列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.create</name>
<desc>代销商创建商品代销关系：货主创建授权规则，获得授权规则后方可创建商品代销关系。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id</desc>
</param>
<param>
<name>number</name>
<type>Number</type>
<required>required</required>
<desc>代销数量</desc>
</param>
<param>
<name>owner_item_id</name>
<type>Number</type>
<required>required</required>
<desc>货主商品id</desc>
</param>
<param>
<name>owner_user_id</name>
<type>Number</type>
<required>required</required>
<desc>货主id</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>required</required>
<desc>通过taobao.wlb.item.authorization.add接口创建后得到的rule_id，规则中设定了代销商可以代销的商品数量</desc>
</param>
</request>
<response>
<param>
<name>consignment_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销关系唯一标识</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.delete</name>
<desc>删除商品的代销关系</desc>
<request>
<param>
<name>ic_item_id</name>
<type>Number</type>
<required>required</required>
<desc>代销商前台宝贝ID</desc>
</param>
<param>
<name>owner_item_id</name>
<type>Number</type>
<required>required</required>
<desc>货主的物流宝商品ID</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>required</required>
<desc>授权关系id</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.page.get</name>
<desc>代销商角度分页查询物流宝商品的代销关系</desc>
<request>
<param>
<name>ic_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>代销商宝贝id</desc>
</param>
<param>
<name>owner_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>供应商商品id</desc>
</param>
<param>
<name>owner_user_nick</name>
<type>String</type>
<required>optional</required>
<desc>供应商用户昵称</desc>
</param>
</request>
<response>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>条件查询结果总数</desc>
</param>
<param>
<name>wlb_consign_ments</name>
<type>WlbConsignMent</type>
<level>Object Array</level>
<desc>代销关系列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.query</name>
<desc>用于查询可代销的物流宝商品</desc>
<request>
<param>
<name>authorize_end_time</name>
<type>Date</type>
<required>optional</required>
<desc>授权结束时间</desc>
</param>
<param>
<name>authorize_start_time</name>
<type>Date</type>
<required>optional</required>
<desc>授权开始时间</desc>
</param>
<param>
<name>owner_user_nick</name>
<type>String</type>
<required>optional</required>
<desc>货主的用户昵称，未设置则查询全部</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>WlbItem</type>
<level>Object Array</level>
<desc>商品信息列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.delete</name>
<desc>通过ItemId,UserId来删除单个商品</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>商品所有人淘宝nick</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.get</name>
<desc>根据商品ID获取商品信息,除了获取商品信息外还可获取商品属性信息和库存信息。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>商品ID&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>WlbItem</type>
<level>Object</level>
<desc>商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.map.get</name>
<desc>根据物流宝商品ID查询商品映射关系</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要查询映射关系的物流宝商品id</desc>
</param>
</request>
<response>
<param>
<name>out_entity_item_list</name>
<type>OutEntityItem</type>
<level>Object Array</level>
<desc>外部商品实体列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.map.get.by.extentity</name>
<desc>根据外部实体类型和实体id查询映射的物流宝商品id</desc>
<request>
<param>
<name>ext_entity_id</name>
<type>Number</type>
<required>required</required>
<desc>外部实体类型对应的商品id</desc>
</param>
<param>
<name>ext_entity_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型： IC_ITEM--ic商品 IC_SKU--ic销售单元</desc>
</param>
</request>
<response>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝商品id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.query</name>
<desc>根据状态、卖家、SKU等信息查询商品列表</desc>
<request>
<param>
<name>is_sku</name>
<type>String</type>
<required>optional</required>
<desc>是否是最小库存单元，只有最小库存单元的商品才可以有库存,值只能给"true","false"来表示; 
若值不在范围内，则按true处理</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<max_length>64</max_length>
<desc>商家编码&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>item_type</name>
<type>String</type>
<required>optional</required>
<desc>ITEM类型(只允许输入以下英文或空) 
NORMAL  0:普通商品;  
COMBINE  1:是否是组合商品  
DISTRIBUTION  2:是否是分销商品(货主是别人) 
若值不在范围内，则按NORMAL处理</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>商品名称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>当前页&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>50</max_value>
<min_value>1</min_value>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录&lt;br /&gt; 支持最大值为：50&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>父ID,只有is_sku=1时才能有父ID，商品也可以没有付商品</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>只能输入以下值或空： 
ITEM_STATUS_VALID -- 1 表示 有效； 
ITEM_STATUS_LOCK  -- 2 表示锁住。 
若值不在范围内，按ITEM_STATUS_VALID处理</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>255</max_length>
<desc>商品前台销售名字&lt;br /&gt; 支持最大长度为：255&lt;br /&gt; 支持的最大列表长度为：255</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>WlbItem</type>
<level>Object Array</level>
<desc>商品信息列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.synchronize</name>
<desc>同步仓储商品与前台商品，建立仓储商品与前台商品的关系,并更新IC中的信息到仓储商品Item中</desc>
<request>
<param>
<name>ext_entity_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>外部实体ID&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>ext_entity_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型.存如下值 
IC_ITEM   --表示IC商品 
IC_SKU    --表示IC最小单位商品 
若输入其他值，则按IC_ITEM处理</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>商品ID&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>商品所有人淘宝nick&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.synchronize.delete</name>
<desc>通过物流宝商品ID和IC商品ID删除映射关系。</desc>
<request>
<param>
<name>ext_entity_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>外部实体ID&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>ext_entity_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型.存如下值 IC_ITEM --表示IC商品; IC_SKU --表示IC最小单位商品;若输入其他值，则按IC_ITEM处理</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>物流宝商品ID&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.update</name>
<desc>修改物流宝商品信息</desc>
<request>
<param>
<name>color</name>
<type>String</type>
<required>optional</required>
<desc>商品颜色</desc>
</param>
<param>
<name>delete_property_key_list</name>
<type>Field List</type>
<required>optional</required>
<desc>需要删除的商品属性key列表</desc>
</param>
<param>
<name>goods_cat</name>
<type>String</type>
<required>optional</required>
<desc>商品货类</desc>
</param>
<param>
<name>height</name>
<type>Number</type>
<required>optional</required>
<desc>商品高度，单位厘米</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>要修改的商品id</desc>
</param>
<param>
<name>is_dangerous</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否危险品</desc>
</param>
<param>
<name>is_friable</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否易碎品</desc>
</param>
<param>
<name>length</name>
<type>Number</type>
<required>optional</required>
<desc>商品长度，单位厘米</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>要修改的商品名称</desc>
</param>
<param>
<name>package_material</name>
<type>String</type>
<required>optional</required>
<desc>商品包装材料类型</desc>
</param>
<param>
<name>pricing_cat</name>
<type>String</type>
<required>optional</required>
<desc>商品计价货类</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>要修改的商品备注</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>要修改的商品标题</desc>
</param>
<param>
<name>update_property_key_list</name>
<type>Field List</type>
<required>optional</required>
<desc>需要修改的商品属性值的列表，如果属性不存在，则新增属性</desc>
</param>
<param>
<name>update_property_value_list</name>
<type>Field List</type>
<required>optional</required>
<desc>需要修改的属性值的列表</desc>
</param>
<param>
<name>volume</name>
<type>Number</type>
<required>optional</required>
<desc>商品体积，单位立方厘米</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品重量，单位G</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>optional</required>
<desc>商品宽度，单位厘米</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.notify.message.confirm</name>
<desc>确认物流宝可执行消息</desc>
<request>
<param>
<name>message_id</name>
<type>Number</type>
<required>required</required>
<desc>物流宝通知消息的id，通过taobao.wlb.notify.message.page.get接口得到的WlbMessage数据结构中的id字段</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>物流宝消息确认时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.notify.message.page.get</name>
<desc>物流宝提供的消息通知查询接口，消息内容包括;出入库单不一致消息，取消订单成功消息，盘点单消息</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询条件：记录截至时间</desc>
</param>
<param>
<name>msg_code</name>
<type>String</type>
<required>optional</required>
<desc>通知消息编码： 
STOCK_IN_NOT_CONSISTENT---入库单不一致 
CANCEL_ORDER_SUCCESS---取消订单成功 
INVENTORY_CHECK---盘点 
CANCEL_ORDER_FAILURE---取消订单失败 
ORDER_REJECT--wms拒单 
ORDER_CONFIRMED--订单处理成功</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询的每页页数</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询条件：记录开始时间</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>消息状态： 
不需要确认：NO_NEED_CONFIRM 
已确认：CONFIRMED 
待确认：TO_BE_CONFIRM</desc>
</param>
</request>
<response>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>条件查询结果总数量</desc>
</param>
<param>
<name>wlb_messages</name>
<type>WlbMessage</type>
<level>Object Array</level>
<desc>消息结果列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.cancel</name>
<desc>取消物流宝订单</desc>
<request>
<param>
<name>wlb_order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编号</desc>
</param>
</request>
<response>
<param>
<name>error_code_list</name>
<type>String</type>
<level>Basic</level>
<desc>错误编码列表</desc>
</param>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间，只有在取消成功的情况下，才可以做</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.consign</name>
<desc>如果erp导入淘宝交易订单到物流宝，当物流宝订单已发货的时候，erp需要调用该接口来通知物流订单和淘宝交易订单已发货</desc>
<request>
<param>
<name>wlb_order_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>物流宝订单编号&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.create</name>
<desc>创建物流宝订单，由外部ISV或者ERP，Elink，淘宝交易产生</desc>
<request>
<param>
<name>alipay_no</name>
<type>String</type>
<required>optional</required>
<desc>支付宝交易号</desc>
</param>
<param>
<name>attributes</name>
<type>String</type>
<required>optional</required>
<desc>该字段暂时保留</desc>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<max_length>64</max_length>
<desc>买家呢称&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>expect_end_time</name>
<type>Date</type>
<required>optional</required>
<desc>期望结束时间，在入库单会使用到</desc>
</param>
<param>
<name>expect_start_time</name>
<type>Date</type>
<required>optional</required>
<desc>计划开始送达时间  在入库单中可能会使用</desc>
</param>
<param>
<name>invoince_info</name>
<type>String</type>
<required>optional</required>
<desc>{"invoince_info": [{"bill_type":"发票类型，必选", "bill_title":"发票抬头，必选", "bill_amount":"发票金额(单位是分)，必选","bill_content":"发票内容，可选"}]}</desc>
</param>
<param>
<name>is_finished</name>
<type>Boolean</type>
<required>required</required>
<desc>该物流宝订单是否已完成，如果完成则设置为true，如果为false，则需要等待继续创建订单商品信息。</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<required>optional</required>
<desc>物流宝订单编号，该接口约定每次最多只能传50条order_item_list，如果一个物流宝订单超过50条商品的时候，需要批量来调用该接口，第一次调用的时候，wlb_order_code为空，如果第一次创建成功，该接口返回wlb_order_code，其后继续再该订单上添加商品条目，需要带上wlb_order_code，out_biz_code，order_item_list,is_finished四个字段。</desc>
</param>
<param>
<name>order_flag</name>
<type>String</type>
<required>optional</required>
<desc>用字符串格式来表示订单标记列表：比如COD^PRESELL^SPLIT^LIMIT 等，中间用“^”来隔开 ---------------------------------------- 订单标记list（所有字母全部大写）： 1: COD –货到付款 2: LIMIT-限时配送 3: PRESELL-预售 5:COMPLAIN-已投诉 7:SPLIT-拆单， 8:EXCHANGE-换货， 9:VISIT-上门 ， 10: MODIFYTRANSPORT-是否可改配送方式， 
: 是否可改配送方式  默认可更改 
11 CONSIGN 物流宝代理发货,自动更改发货状态 
12: SELLER_AFFORD 是否卖家承担运费 默认是，即没 13: SYNC_RETURN_BILL，同时退回发票</desc>
</param>
<param>
<name>order_item_list</name>
<type>String</type>
<required>required</required>
<desc>订单商品列表： {"order_item_list":[{"trade_code":"可选,淘宝交易订单，并且不是赠品，必须要传订单来源编号"," sub_trade_code ":"可选,淘宝子交易号","item_id":"必须,商品Id","item_code":"必须,商家编码","item_name":"可选,物流宝商品名称","item_quantity":"必选,计划数量","item_price":"必选,物品价格,单位为分","owner_user_nick
":"可选,货主nick 代销模式下会存在","flag":"判断是否为赠品0 不是1是","remarks":"可选,备注","batch_remark":"可选，批次描述信息会把这个信息带给WMS，但不会跟物流宝库存相关联"，"inventory_type":"库存类型1 可销售库存 101 类型用来定义残次品 201 冻结类型库存 301 在途库存","picture_url":"图片Url","distributor_user_nick": "分销商NICK",必选"ext_order_item_code":"可选，外部商品的商家编码"]} ======================================== 如果订单中的商品条目数大于50条的时候，我们会校验，不能创建成功，需要你按照50个一批的数量传，需要分批调用该接口，第二次传的时候，需要带上wlb_order_code和is_finished和order_item_list三个字段是必传的，is_finished为true表示传输完毕，为false表示还没完全传完。</desc>
</param>
<param>
<name>order_sub_type</name>
<type>String</type>
<required>required</required>
<desc>订单子类型： 
（1）OTHER： 其他 
（2）TAOBAO_TRADE： 淘宝交易 
（3）OTHER_TRADE：其他交易 
（4）ALLCOATE： 调拨 
（5）PURCHASE:采购</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>required</required>
<desc>订单类型: 
（1）NORMAL_OUT ：正常出库 
（2）NORMAL_IN：正常入库 
（3）RETURN_IN：退货入库 
（4）EXCHANGE_OUT：换货出库</desc>
</param>
<param>
<name>out_biz_code</name>
<type>String</type>
<required>required</required>
<max_length>128</max_length>
<desc>外部订单业务ID，该编号在isv中是唯一编号， 用来控制并发，去重用&lt;br /&gt; 支持最大长度为：128&lt;br /&gt; 支持的最大列表长度为：128</desc>
</param>
<param>
<name>package_count</name>
<type>Number</type>
<required>optional</required>
<desc>包裹件数，入库单和出库单中会用到</desc>
</param>
<param>
<name>payable_amount</name>
<type>Number</type>
<required>optional</required>
<desc>应收金额，cod订单必选</desc>
</param>
<param>
<name>prev_order_code</name>
<type>String</type>
<required>optional</required>
<desc>源订单编号</desc>
</param>
<param>
<name>receiver_info</name>
<type>String</type>
<required>optional</required>
<desc>收货方信息，必须传， 手机和电话必选其一。
收货方信息：
邮编^^^省^^^市^^^区^^^具体地址^^^收件方名称^^^手机^^^电话

如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<max_length>4000</max_length>
<desc>备注&lt;br /&gt; 支持最大长度为：4000&lt;br /&gt; 支持的最大列表长度为：4000</desc>
</param>
<param>
<name>schedule_end</name>
<type>String</type>
<required>optional</required>
<desc>投递时间范围要求,格式'15:20'用分号隔开</desc>
</param>
<param>
<name>schedule_start</name>
<type>String</type>
<required>optional</required>
<desc>投递时间范围要求,格式'13:20'用分号隔开</desc>
</param>
<param>
<name>schedule_type</name>
<type>String</type>
<required>optional</required>
<desc>投递时延要求:  
（1）INSTANT_ARRIVED： 当日达  
（2）TOMMORROY_MORNING_ARRIVED：次晨达 
（3）TOMMORROY_ARRIVED：次日达 
（4）工作日：WORK_DAY  
（5）节假日：WEEKED_DAY</desc>
</param>
<param>
<name>sender_info</name>
<type>String</type>
<required>optional</required>
<desc>发货方信息，发货方信息必须传， 手机和电话必选其一。 发货方信息：
邮编^^^省^^^市^^^区^^^具体地址^^^收件方名称^^^手机^^^电话
如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>service_fee</name>
<type>Number</type>
<required>optional</required>
<desc>cod服务费，只有cod订单的时候，才需要这个字段</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>仓库编码&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>tms_info</name>
<type>String</type>
<required>optional</required>
<desc>出库单中可能会用到 
运输公司名称^^^运输公司联系人^^^运输公司运单号^^^运输公司电话^^^运输公司联系人身份证号 
 
======================================== 
如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>tms_order_code</name>
<type>String</type>
<required>optional</required>
<desc>运单编号，退货单时可能会使用</desc>
</param>
<param>
<name>tms_service_code</name>
<type>String</type>
<required>optional</required>
<max_length>64</max_length>
<desc>物流公司编码&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>total_amount</name>
<type>Number</type>
<required>optional</required>
<desc>总金额</desc>
</param>
</request>
<response>
<param>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单创建成功后，返回物流宝的订单编号；如果订单创建失败，该字段为空。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.page.get</name>
<desc>分页查询物流宝订单</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询截止时间</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<required>optional</required>
<desc>物流订单编号</desc>
</param>
<param>
<name>order_status</name>
<type>Number</type>
<required>optional</required>
<desc>订单状态</desc>
</param>
<param>
<name>order_sub_type</name>
<type>String</type>
<required>optional</required>
<desc>订单子类型：  
（1）OTHER： 其他  
（2）TAOBAO_TRADE： 淘宝交易  
（3）OTHER_TRADE：其他交易 
（4）ALLCOATE： 调拨 
（5）CHECK:  盘点单 
（6）PURCHASE: 采购单</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>optional</required>
<desc>订单类型:  
（1）NORMAL_OUT ：正常出库  
（2）NORMAL_IN：正常入库  
（3）RETURN_IN：退货入库  
（4）EXCHANGE_OUT：换货出库</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页的第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页多少条</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询开始时间</desc>
</param>
</request>
<response>
<param>
<name>order_list</name>
<type>WlbOrder</type>
<level>Object Array</level>
<desc>分页查询返回结果</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.schedule.rule.add</name>
<desc>为订单的自动流转设置订单调度规则。规则设定之后，可以根据发货地区，精确路由订单至指定仓库处理。</desc>
<request>
<param>
<name>backup_store_id</name>
<type>Number</type>
<required>optional</required>
<desc>备用发货仓库服务id（通过taobao.wlb.subscription.query接口获得service_id）</desc>
</param>
<param>
<name>default_store_id</name>
<type>Number</type>
<required>required</required>
<desc>发货仓库服务id（通过taobao.wlb.subscription.query接口获得service_id）</desc>
</param>
<param>
<name>option</name>
<type>Field List</type>
<required>optional</required>
<desc>发货规则的额外规则设置： 
REMARK_STOP--有订单留言不自动下发 
COD_STOP--货到付款订单不自动下发 
CHECK_WAREHOUSE_DELIVER--检查仓库的配送范围</desc>
</param>
<param>
<name>prov_area_ids</name>
<type>String</type>
<required>required</required>
<desc>国家地区标准编码列表</desc>
</param>
</request>
<response>
<param>
<name>schedule_rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增成功的订单调度规则id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.schedule.rule.update</name>
<desc>修改物流宝订单调度规则</desc>
<request>
<param>
<name>backup_store_id</name>
<type>Number</type>
<required>optional</required>
<desc>备用发货仓库id</desc>
</param>
<param>
<name>default_store_id</name>
<type>Number</type>
<required>optional</required>
<desc>默认发货仓库id</desc>
</param>
<param>
<name>option</name>
<type>Field List</type>
<required>optional</required>
<desc>订单调度规则的额外规则设置： REMARK_STOP--有订单留言不自动下发 COD_STOP--货到付款订单不自动下发 CHECK_WAREHOUSE_DELIVER--检查仓库的配送范围</desc>
</param>
<param>
<name>prov_area_ids</name>
<type>String</type>
<required>optional</required>
<desc>国家地区标准编码列表</desc>
</param>
<param>
<name>schedule_rule_id</name>
<type>Number</type>
<required>required</required>
<desc>要修改的订单调度规则明细id</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderdetail.date.get</name>
<desc>外部ERP可通过该接口查询一段时间内的物流宝订单，以及订单详情</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>查询条件截止日期</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，指定查询页数，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，每页查询数量，默认20，最大值50,大于50时按照50条查询</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>查询起始日期</desc>
</param>
</request>
<response>
<param>
<name>order_detail_list</name>
<type>WlbOrderDetail</type>
<level>Object Array</level>
<desc>物流宝详细订单</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderitem.page.get</name>
<desc>分页查询物流宝订单商品详情</desc>
<request>
<param>
<name>order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编码</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，指定查询页数，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，每页查询数量，默认20，最大值50,大于50时按照50条查询</desc>
</param>
</request>
<response>
<param>
<name>order_item_list</name>
<type>WlbOrderItem</type>
<level>Object Array</level>
<desc>物流宝订单商品列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderschedulerule.delete</name>
<desc>删除单个订单调度规则</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>订单调度规则ID&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>商品userNick&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderschedulerule.query</name>
<desc>查询某个卖家的所有订单调度规则，提供分页查询。</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
</request>
<response>
<param>
<name>order_schedule_rule_list</name>
<type>WlbOrderScheduleRule</type>
<level>Object Array</level>
<desc>订单调度规则列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderstatus.get</name>
<desc>根据物流宝订单号查询物流宝订单至目前为止的流转状态列表</desc>
<request>
<param>
<name>order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编码</desc>
</param>
</request>
<response>
<param>
<name>wlb_order_status</name>
<type>WlbProcessStatus</type>
<level>Object Array</level>
<desc>订单流转信息状态列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.out.inventory.change.notify</name>
<desc>拥有自有仓的企业物流用户通过该接口把自有仓的库存通知到物流宝，由物流宝维护该库存，控制前台显示库存的准确性。</desc>
<request>
<param>
<name>change_count</name>
<type>Number</type>
<required>required</required>
<desc>库存变化数量</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>物流宝商品id或前台宝贝id（由type类型决定）</desc>
</param>
<param>
<name>op_type</name>
<type>String</type>
<required>required</required>
<desc>OUT--出库 
IN--入库</desc>
</param>
<param>
<name>order_source_code</name>
<type>String</type>
<required>optional</required>
<desc>订单号，如果source为TAOBAO_TRADE,order_source_code必须为淘宝交易号</desc>
</param>
<param>
<name>out_biz_code</name>
<type>String</type>
<required>required</required>
<desc>库存变化唯一标识，用于去重，一个外部唯一编码唯一标识一次库存变化。</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<required>required</required>
<desc>本次库存变化后库存余额</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>（1）OTHER： 其他  
（2）TAOBAO_TRADE： 淘宝交易  
（3）OTHER_TRADE：其他交易  
（4）ALLCOATE： 调拨  
（5）CHECK:盘点 
（6）PURCHASE:采购</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>目前非必须，系统会选择默认值</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>WLB_ITEM--物流宝商品 
IC_ITEM--淘宝商品 
IC_SKU--淘宝sku</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>库存变化通知成功时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.replenish.statistics</name>
<desc>查询BI的统计的补货统计数据</desc>
<request>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>商品编码</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>商品名称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页参数，默认第一页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>50</max_value>
<desc>分页每页页数，默认20，最大50&lt;br /&gt; 支持最大值为：50</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>replenish_list</name>
<type>WlbReplenish</type>
<level>Object Array</level>
<desc>补货统计列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>查询记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.subscription.query</name>
<desc>查询商家定购的所有服务,可通过入参状态来筛选</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>状态  
AUDITING 1-待审核;  
CANCEL 2-撤销 ; 
CHECKED 3-审核通过 ; 
FAILED 4-审核未通过 ; 
SYNCHRONIZING 5-同步中; 
只允许输入上面指定的值，且可以为空，为空时查询所有状态。若输错了，则按AUDITING处理。</desc>
</param>
</request>
<response>
<param>
<name>seller_subscription_list</name>
<type>WlbSellerSubscription</type>
<level>Object Array</level>
<desc>卖家定购的服务列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.tmsorder.query</name>
<desc>通过物流订单编号分页查询物流信息</desc>
<request>
<param>
<name>order_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>物流订单编号&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
</request>
<response>
<param>
<name>tms_order_list</name>
<type>WlbTmsOrder</type>
<level>Object Array</level>
<desc>物流订单运单信息列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.tradeorder.get</name>
<desc>根据交易类型和交易id查询物流宝订单详情</desc>
<request>
<param>
<name>sub_trade_id</name>
<type>String</type>
<required>optional</required>
<desc>子交易号</desc>
</param>
<param>
<name>trade_id</name>
<type>String</type>
<required>required</required>
<desc>指定交易类型的交易号</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>required</required>
<desc>交易类型: 
TAOBAO--淘宝交易 
OTHER_TRADE--其它交易</desc>
</param>
</request>
<response>
<param>
<name>wlb_order_list</name>
<type>WlbOrder</type>
<level>Object Array</level>
<desc>物流宝订单列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.waybill.get</name>
<desc>通过订单号获取面单号</desc>
<request>
<param>
<name>cp_code</name>
<type>String</type>
<required>required</required>
<desc>顺丰(SF)、EMS(标准快递：EMS；经济快件：EYB)、宅急送(ZJS)、圆通(YTO)、中通(ZTO)、百世汇通(HTKY)、优速(UC)、申通(STO)、天天快递 (TTKDEX)、全峰 (QFKD)、快捷(FAST)</desc>
</param>
<param>
<name>shipping_address</name>
<type>String</type>
<required>required</required>
<desc>发货 地址</desc>
</param>
<param>
<name>trade_order_info_cols</name>
<type>String</type>
<required>required</required>
<max_list_size>1000</max_list_size>
<desc>order_channels_type 订单来源：订单产生的电商平台
淘宝(TB)、天猫(TM)、京东(JD)、当当(DD)、拍拍(PP)、易讯(YX)、ebay(EBAY)、QQ网购(QQ)、亚马逊(AMAZON)、苏宁(SN)、国美(GM)、唯品会(WPH)、聚美(JM)、乐蜂(LF)、蘑菇街(MGJ)、聚尚(JS)、拍鞋(PX)、银泰(YT)、1号店(YHD)、凡客(VANCL)、邮乐(YL)、优购(YG)、阿里巴巴(1688)、其他(OTHERS)</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>WaybillApplyNewInfo</type>
<level>Object Array</level>
<desc>结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.waybill.search</name>
<desc>商家查询物流服务商的可用单号</desc>
<request>
<param>
<name>cp_code</name>
<type>String</type>
<required>optional</required>
<desc>顺丰(SF)、EMS(标准快递：EMS；经济快件：EYB)、宅急送(ZJS)、圆通(YTO)、中通(ZTO)、百世汇通(HTKY)、优速(UC)、申通(STO)、天天快递 (TTKDEX)、全峰 (QFKD)、快捷(FAST)、邮政小包(POSTB)</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>WaybillApplySubscriptionInfo</type>
<level>Object Array</level>
<desc>查询相关数据(cp_type 1是直营，2是加盟
)</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.waybill.update</name>
<desc>商家可更新单号的订单绑定关系</desc>
<request>
<param>
<name>cp_code</name>
<type>String</type>
<required>required</required>
<desc>顺丰(SF)、EMS(标准快递：EMS；经济快件：EYB)、宅急送(ZJS)、圆通(YTO)、中通(ZTO)、百世汇通(HTKY)、优速(UC)、申通(STO)、天天快递 (TTKDEX)、全峰 (QFKD)、快捷(FAST)</desc>
</param>
<param>
<name>trade_order_info</name>
<type>String</type>
<required>optional</required>
<desc>订单数据</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>WaybillApplyUpdateInfo</type>
<level>Object Array</level>
<desc>更新返回</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.waybillallocation.requestwaybillnum</name>
<desc>商家申请电子面单</desc>
<request>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<desc>申请号码数量</desc>
</param>
<param>
<name>out_biz_code</name>
<type>String</type>
<required>required</required>
<desc>外部去重号</desc>
</param>
<param>
<name>pool_type</name>
<type>String</type>
<required>required</required>
<desc>面单类型</desc>
</param>
<param>
<name>service_code</name>
<type>String</type>
<required>required</required>
<desc>服务编码</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<desc>用户ID&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
</request>
<response>
<param>
<name>service_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务编码</desc>
</param>
<param>
<name>tms_waybill_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>电子面单号码</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.wlborder.get</name>
<desc>根据物流宝订单编号查询物流宝订单概要信息</desc>
<request>
<param>
<name>wlb_order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编码</desc>
</param>
</request>
<response>
<param>
<name>wlb_order</name>
<type>WlbOrder</type>
<level>Object</level>
<desc>物流宝订单详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.account.balance.get</name>
<desc>获取实时余额，”元”为单位</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>balance</name>
<type>Price</type>
<level>Basic</level>
<desc>实时余额，”元”为单位</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.add</name>
<desc>创建一个推广组</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>default_price</name>
<type>Number</type>
<required>required</required>
<min_value>5</min_value>
<desc>推广组默认出价，单位为分，不能小于5 不能大于日最高限额&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>img_url</name>
<type>String</type>
<required>required</required>
<desc>创意图片地址，必须是商品的图片之一</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>创意标题，最多20个汉字&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>adgroup</name>
<type>ADGroup</type>
<level>Object</level>
<desc>新增加的推广组</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.adgroupcatmatchs.get</name>
<desc>根据一组推广组id获取推广组类目出价列表,</desc>
<request>
<param>
<name>adgroup_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>推广组Id列表</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_catmatch_list</name>
<type>ADGroupCatmatch</type>
<level>Object Array</level>
<desc>类目出价列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.campcatmatchs.get</name>
<desc>根据一个推广计划的id获取一页推广组类目出价列表</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码，从1开始</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>200</max_length>
<desc>页尺寸，最大200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
</request>
<response>
<param>
<name>adgroupcatmatchs</name>
<type>ADGroupCatMatchPage</type>
<level>Object</level>
<desc>一页推广组类目出价列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.catmatch.get</name>
<desc>取得一个推广组的类目出价</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroupcatmatch</name>
<type>ADGroupCatmatch</type>
<level>Object</level>
<desc>推广组的类目出价对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.catmatch.update</name>
<desc>更新一个推广组的类目出价，可以设置类目出价、是否使用默认出价、是否打开类目出价</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>catmatch_id</name>
<type>Number</type>
<required>required</required>
<desc>类目出价Id</desc>
</param>
<param>
<name>max_price</name>
<type>Number</type>
<required>required</required>
<min_value>5</min_value>
<desc>类目出价，单位为分，不能小于5。如果use_default_price字段为使用默认出价，则此max_price字段所传入的值不起作用。商品将会使用默认出价。&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>online_status</name>
<type>String</type>
<required>required</required>
<desc>是否启用类目出价； offline-不启用 online-启用,如果此字段状态为offline时，则max_price,use_default_price字段值不起作用</desc>
</param>
<param>
<name>use_default_price</name>
<type>Boolean</type>
<required>required</required>
<desc>是否使用推广组默认出价false为不使用，true为使用</desc>
</param>
</request>
<response>
<param>
<name>adgroupcatmatch</name>
<type>ADGroupCatmatch</type>
<level>Object</level>
<desc>推广组的类目出价对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.catmatchforecast.get</name>
<desc>获取指定推广组下给定出价的类目出价预估信息;</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>catmatch_price</name>
<type>Number</type>
<required>required</required>
<desc>类目出价,出价范围在5-9999之间,单位分</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_catmatch_forecast</name>
<type>ADGroupCatMatchForecast</type>
<level>Object</level>
<desc>类目出价预估结果信息 预测数据皆为估算结果，以实际发生为准</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.changedcatmatchs.get</name>
<desc>分页获取修改过的推广组类目出价ID , 推广组ID，修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>1000</max_length>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持的最大列表长度为：1000</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_catmatchs</name>
<type>ADGroupCatMatchPage</type>
<level>Object</level>
<desc>一页类目出价对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.delete</name>
<desc>删除一个推广组</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup</name>
<type>ADGroup</type>
<level>Object</level>
<desc>被删除的推广组</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.nonsearchprices.update</name>
<desc>修改通投出价</desc>
<request>
<param>
<name>adgroupid_price_json</name>
<type>String</type>
<required>required</required>
<desc>推广组id，通投位置价格，是否使用默认出价json 数组字符串，数组个数最多200个. 
json数组中的key必须和对应实体ADGroup中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值， 
adgroupId,isNonsearchDefaultPrice不能为空。nonsearchMaxPrice是整数，以“分”为单位，不能小于5，不能大于日限额,不能大于9999分。 启用非搜索默认出价时nonsearchMaxPrice为0</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_list</name>
<type>ADGroup</type>
<level>Object Array</level>
<desc>推广组列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.nonsearchstates.update</name>
<desc>更改通投状态（暂停或启动）</desc>
<request>
<param>
<name>adgroupid_nonsearchstate_json</name>
<type>String</type>
<required>required</required>
<desc>推广组ID通投状态json数组字符串，数组个数最多200个。json数组中的key必须和对应实体ADGroup 中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值推广组ID,通投状态不传默认为1</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_list</name>
<type>ADGroup</type>
<level>Object Array</level>
<desc>推广组列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.onlineitemsvon.get</name>
<desc>获取用户上架在线销售的全部宝贝</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>order_by</name>
<type>Boolean</type>
<required>optional</required>
<desc>排序，true:降序， false:升序</desc>
</param>
<param>
<name>order_field</name>
<type>String</type>
<required>optional</required>
<desc>排序字段，starts：按开始时间排序bidCount:按销量排序</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>50</max_value>
<desc>页码，从1开始,最大50。最大只能获取1W个宝贝&lt;br /&gt; 支持最大值为：50</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>页尺寸，最大200&lt;br /&gt; 支持最大值为：200</desc>
</param>
</request>
<response>
<param>
<name>page_item</name>
<type>SubwayItemPartition</type>
<level>Object</level>
<desc>带分页的淘宝商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.update</name>
<desc>更新一个推广组的信息，可以设置默认出价、是否上线、非搜索出价、非搜索是否使用默认出价</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>default_price</name>
<type>Number</type>
<required>special</required>
<min_value>5</min_value>
<desc>默认出价，单位是分，不能小于5&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>nonsearch_max_price</name>
<type>Number</type>
<required>special</required>
<min_value>5</min_value>
<desc>非搜索出价，单位是分，不能小于5，如果use_nonseatch_default_price为使用默认出价，则此nonsearch_max_price字段传入的数据不起作用，商品将使用默认非搜索出价&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>online_status</name>
<type>String</type>
<required>special</required>
<desc>用户设置的上下线状态 offline-下线(暂停竞价)； online-上线；默认为online</desc>
</param>
<param>
<name>use_nonsearch_default_price</name>
<type>Boolean</type>
<required>special</required>
<desc>非搜索是否使用默认出价，false-不用；true-使用；默认为true;</desc>
</param>
</request>
<response>
<param>
<name>adgroup</name>
<type>ADGroup</type>
<level>Object</level>
<desc>被修改的推广组</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupids.changed.get</name>
<desc>获取修改的推广组ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_adgroupids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>推广组ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupids.deleted.get</name>
<desc>获取删除的推广组ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_adgroup_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>推广组ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroups.changed.get</name>
<desc>分页获取修改的推广组ID和修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>adgroups</name>
<type>ADGroupPage</type>
<level>Object</level>
<desc>推广组分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroups.item.exist</name>
<desc>判断在一个推广计划中是否已经推广了一个商品</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>exist</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true表示已经被推广，false表示没有被推广</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupsbyadgroupids.get</name>
<desc>批量得到推广组</desc>
<request>
<param>
<name>adgroup_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>推广组Id列表</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码，从1开始&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>页尺寸，最大200，如果入参adgroup_ids有传入值，则page_size和page_no值不起作用。如果adgrpup_ids为空而campaign_id有值，此时page_size和page_no值才是返回的页数据大小和页码&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>adgroups</name>
<type>ADGroupPage</type>
<level>Object</level>
<desc>返回的推广组分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupsbycampaignid.get</name>
<desc>批量得到推广计划下的推广组</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>special</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码，从1开始&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>页尺寸，最大200，如果入参adgroup_ids有传入值，则page_size和page_no值不起作用。如果adgrpup_ids为空而campaign_id有值，此时page_size和page_no值才是返回的页数据大小和页码&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>adgroups</name>
<type>ADGroupPage</type>
<level>Object</level>
<desc>返回的推广组分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.add</name>
<desc>创建一个推广计划</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>推广计划名称，不能多余20个汉字，不能和客户其他推广计划同名。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>campaign</name>
<type>Campaign</type>
<level>Object</level>
<desc>创建的推广计划</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.area.get</name>
<desc>取得一个推广计划的投放地域设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_area</name>
<type>CampaignArea</type>
<level>Object</level>
<desc>推广计划的投放地域配置</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.area.update</name>
<desc>更新一个推广计划的投放地域</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>required</required>
<desc>值为：“all”；或者用“,”分割的数字，数字必须是直通车全国省市列表的AreaID；</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_area</name>
<type>CampaignArea</type>
<level>Object</level>
<desc>修改后的推广计划投放地域</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.areaoptions.get</name>
<desc>取得推广计划的可设置投放地域列表</desc>
<response>
<param>
<name>area_options</name>
<type>AreaOption</type>
<level>Object Array</level>
<desc>推广计划所有可设置的投放地域</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.budget.get</name>
<desc>取得一个推广计划的日限额</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_budget</name>
<type>CampaignBudget</type>
<level>Object</level>
<desc>推广计划日限额</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.budget.update</name>
<desc>更新一个推广计划的日限额</desc>
<request>
<param>
<name>budget</name>
<type>Number</type>
<required>optional</required>
<max_value>99999</max_value>
<min_value>30</min_value>
<desc>如果为空则取消限额；否则必须为整数，单位是元，不得小于30；&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：30</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>use_smooth</name>
<type>Boolean</type>
<required>required</required>
<desc>是否平滑消耗：false-否，true-是</desc>
</param>
</request>
<response>
<param>
<name>campaign_budget</name>
<type>CampaignBudget</type>
<level>Object</level>
<desc>修改后的推广计划日限额</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.channeloptions.get</name>
<desc>取得推广计划的可设置投放频道列表</desc>
<response>
<param>
<name>channel_options</name>
<type>ChannelOption</type>
<level>Object Array</level>
<desc>所有推广计划可投放的频道</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.platform.get</name>
<desc>取得一个推广计划的投放平台设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_platform</name>
<type>CampaignPlatform</type>
<level>Object</level>
<desc>取得的推广计划的投放平台设置</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.platform.update</name>
<desc>更新一个推广计划的平台设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>nonsearch_channels</name>
<type>Number</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<max_value>128</max_value>
<min_value>0</min_value>
<desc>非搜索投放频道代码数组，频道代码必须是直通车非搜索类频道列表中的值。&lt;br /&gt; 支持最大值为：128&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outside_discount</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>溢价的百分比，必须是大于等于 1小于等于200的整数&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_channels</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<max_value>128</max_value>
<min_value>0</min_value>
<desc>搜索投放频道代码数组，频道代码必须是直通车搜索类频道列表中的值，必须包含淘宝内网。&lt;br /&gt; 支持最大值为：128&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>campaign_platform</name>
<type>CampaignPlatform</type>
<level>Object</level>
<desc>修改后的推广计划投放平台设置</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.schedule.get</name>
<desc>取得一个推广计划的分时折扣设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_schedule</name>
<type>CampaignSchedule</type>
<level>Object</level>
<desc>修改后的推广计划分时折扣</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.schedule.update</name>
<desc>更新一个推广计划的分时折扣设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>schedule</name>
<type>String</type>
<required>required</required>
<desc>值为：“all”；或者用“;”分割的每天的设置字符串，该字符串为用“,”分割的时段折扣字符串，格式为：起始时间-结束时间:折扣，其中时间是24小时格式记录，折扣是1-150整数，表示折扣百分比；</desc>
</param>
</request>
<response>
<param>
<name>campaign_schedule</name>
<type>CampaignSchedule</type>
<level>Object</level>
<desc>修改后的推广计划分时折扣</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.update</name>
<desc>更新一个推广计划，可以设置推广计划名字，修改推广计划上下线状态。</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>online_status</name>
<type>String</type>
<required>required</required>
<desc>用户设置的上下限状态；offline-下线；online-上线；</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>推广计划名称，不能多余40个字符，不能和客户其他推广计划同名。&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>campaign</name>
<type>Campaign</type>
<level>Object</level>
<desc>修改后的推广计划</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaigns.get</name>
<desc>取得一个客户的推广计划；</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaigns</name>
<type>Campaign</type>
<level>Object Array</level>
<desc>推广计划列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.catmatchids.changed.get</name>
<desc>获取更改过的类目出价ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>返回的每页数据量大小,默认200最大1000</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_catmatch_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>类目出价ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.catmatchids.deleted.get</name>
<desc>获取删除的类目出价ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>返回的每页数据量大小,默认200最大1000</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_catmatch_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>类目出价ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creative.add</name>
<desc>创建一个创意</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>img_url</name>
<type>String</type>
<required>required</required>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>创意标题，最多20个汉字&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>creative</name>
<type>Creative</type>
<level>Object</level>
<desc>新增加的创意对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creative.delete</name>
<desc>删除一个创意</desc>
<request>
<param>
<name>creative_id</name>
<type>Number</type>
<required>required</required>
<desc>创意Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>creative</name>
<type>Creative</type>
<level>Object</level>
<desc>被删除的创意对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creative.update</name>
<desc>更新一个创意的信息，可以设置创意标题、创意图片</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>creative_id</name>
<type>Number</type>
<required>required</required>
<desc>创意Id</desc>
</param>
<param>
<name>img_url</name>
<type>String</type>
<required>required</required>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>创意标题，最多20个汉字&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>creativerecord</name>
<type>CreativeRecord</type>
<level>Object</level>
<desc>创意修改记录对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creativeids.changed.get</name>
<desc>获取修改的创意ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_creative_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>创意ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creativeids.deleted.get</name>
<desc>获取删除的创意ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到这个时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_creative_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>创意ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creatives.changed.get</name>
<desc>分页获取修改过的广告创意ID和修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>creatives</name>
<type>CreativePage</type>
<level>Object</level>
<desc>广告创意分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creatives.get</name>
<desc>取得一个推广组的所有创意或者根据一个创意Id列表取得一组创意； 
如果同时提供了推广组Id和创意id列表，则优先使用推广组Id；</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>special</required>
<desc>推广组Id</desc>
</param>
<param>
<name>creative_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>创意Id数组，最多200个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>creatives</name>
<type>Creative</type>
<level>Object Array</level>
<desc>创意对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creatives.record.get</name>
<desc>根据一个创意Id列表取得创意对应的修改记录</desc>
<request>
<param>
<name>creative_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>创意Id数组，最多200个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>creativerecords</name>
<type>CreativeRecord</type>
<level>Object Array</level>
<desc>创意修改对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.customers.authorized.get</name>
<desc>取得当前登录用户的授权账户列表</desc>
<response>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic Array</level>
<desc>授权当前登录账户为代理账户的昵称列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.cats.get</name>
<desc>获取类目信息</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询类目id数组，最大长度200</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>in_category_tops</name>
<type>INCategoryTop</type>
<level>Object Array</level>
<desc>类目对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsanalysis.get</name>
<desc>类目分析数据查询</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询类目id数组，最大长度200</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>stu</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。 
AREA：返回地域占比； 
SOURCE：返回来源占比； 
HPRICE：返回竞价分布。 
stu只能是AREA、SOURCE或HPRICE中的一个</desc>
</param>
</request>
<response>
<param>
<name>in_category_analyses</name>
<type>INCategoryAnalysis</type>
<level>Object Array</level>
<desc>词分析数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsbase.get</name>
<desc>类目基础数据查询</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询类目id数组，最大长度200</desc>
</param>
<param>
<name>filter</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。PV：返回展现量；CLICK：返回点击量；AVGCPC：返回平均出价；COMPETITION ：返回竞争宝贝数;CTR 点击率。filter可由,组合</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>time</name>
<type>String</type>
<required>required</required>
<desc>时间格式(DAY: 最近一天； WEEK：最近一周。MONTH：最近一个月。3MONTH：最近三个月)</desc>
</param>
</request>
<response>
<param>
<name>in_category_bases</name>
<type>INCategoryBase</type>
<level>Object Array</level>
<desc>类目基础数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsforecast.get</name>
<desc>类目属性预测</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词数组，最大长度200</desc>
</param>
</request>
<response>
<param>
<name>in_category_tops</name>
<type>INCategoryTop</type>
<level>Object Array</level>
<desc>类目对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsrelatedword.get</name>
<desc>类目相关词查询</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>result_num</name>
<type>Number</type>
<required>required</required>
<max_value>10</max_value>
<min_value>1</min_value>
<desc>最大返回数量(1-10)&lt;br /&gt; 支持最大值为：10&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词数组，最大长度200</desc>
</param>
</request>
<response>
<param>
<name>related_words</name>
<type>String</type>
<level>Basic Array</level>
<desc>类目相关词对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catstopword.get</name>
<desc>类目TOP词查询</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>类目id数组，最大长度200</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>result_num</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>最大返回数量(1-100)&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>top_words</name>
<type>String</type>
<level>Basic Array</level>
<desc>类目TOP词查询</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.toplevelcats.get</name>
<desc>获取一级类目</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>in_category_tops</name>
<type>INCategoryTop</type>
<level>Object Array</level>
<desc>得到一级类目</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.wordsanalysis.get</name>
<desc>词分析数据查询</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>stu</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。 
AREA：  返回地域占比； 
SOURCE：返回来源占比； 
HPRICE：返回竞价分布。 
stu只能是AREA、SOURCE或HPRICE中的一个</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词组，最大长度200</desc>
</param>
</request>
<response>
<param>
<name>in_word_analyses</name>
<type>INWordAnalysis</type>
<level>Object Array</level>
<desc>词分析列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.wordsbase.get</name>
<desc>词基础数据查询</desc>
<request>
<param>
<name>filter</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。PV：返回展现量；CLICK：返回点击量；AVGCPC：返回平均出价；COMPETITION ：返回竞争宝贝数;CTR 点击率。filter可由,组合</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>time</name>
<type>String</type>
<required>required</required>
<desc>时间格式(DAY: 最近一天； WEEK：最近一周。MONTH：最近一个月。3MONTH：最近三个月)</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>170</max_list_size>
<desc>查询词组，最大长度170</desc>
</param>
</request>
<response>
<param>
<name>in_word_bases</name>
<type>INWordBase</type>
<level>Object Array</level>
<desc>词基础数据对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.wordscats.get</name>
<desc>词和类目查询</desc>
<request>
<param>
<name>filter</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。PV：返回展现量；CLICK：返回点击量；AVGCPC：返回平均出价；COMPETITION ：返回竞争宝贝数;CTR 点击率。filter可由,组合</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>word_categories</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词和类目数组，最大长度200，每一个数组元素都是词+类目，以”^^”分割如下： 
词^^类目</desc>
</param>
</request>
<response>
<param>
<name>in_word_categories</name>
<type>INWordCategory</type>
<level>Object Array</level>
<desc>词和类目基础信息对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keyword.keywordforecast.get</name>
<desc>根据词ID和给定的出价获取词的预估信息</desc>
<request>
<param>
<name>bidword_price</name>
<type>Number</type>
<required>required</required>
<desc>词的出价,范围在5-9999之间,单位分</desc>
</param>
<param>
<name>keyword_id</name>
<type>Number</type>
<required>required</required>
<desc>词ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>经典名表行</desc>
</param>
</request>
<response>
<param>
<name>keyword_forecast</name>
<type>KeywordForecast</type>
<level>Object</level>
<desc>词预估结果信息 
 
预测数据皆为估算结果，以实际发生为准</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordids.changed.get</name>
<desc>获取修改的词ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_keyword_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>词的ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordids.deleted.get</name>
<desc>获取删除的词ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_keyword_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>词ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.changed.get</name>
<desc>分页获取修改过的关键词ID、宝贝id、修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>KeywordPage</type>
<level>Object</level>
<desc>关键词分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.delete</name>
<desc>删除一批关键词</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>keyword_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>关键词Id数组，最多100个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>成功删除的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.pricevon.set</name>
<desc>设置一批关键词的出价</desc>
<request>
<param>
<name>keywordid_prices</name>
<type>String</type>
<required>required</required>
<desc>关键词ID，出价和匹配方式json字符串，keywordId:词ID，整数。maxPrice：价格，是整数，以“分”为单位，不能小于5，不能大于日限额,当使用默认出价时必须将这个值设置为0。; isDefaultPrice：是否使用默认出价，只能是0，1(0代表不使用，1代表使用)。matchscope只能是1,2,4（1代表精确匹配，2代表子串匹配，4代表广泛匹配）</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>成功设置关键词价格的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.qscore.get</name>
<desc>取得一个推广组的所有关键词的质量得分列表</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keyword_qscore_list</name>
<type>KeywordQscore</type>
<level>Object Array</level>
<desc>取得的关键词质量得分列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.recommend.get</name>
<desc>取得一个推广组的推荐关键词列表</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式:  
搜索量 search_volume  
市场平均价格 average_price  
相关度 relevance  
不排序 non  
默认为 non</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,最大200&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>pertinence</name>
<type>String</type>
<required>optional</required>
<desc>相关度</desc>
</param>
<param>
<name>search</name>
<type>Number</type>
<required>optional</required>
<desc>搜索量,设置此值后返回的就是大于此搜索量的词列表</desc>
</param>
</request>
<response>
<param>
<name>recommend_words</name>
<type>RecommendWordPage</type>
<level>Object</level>
<desc>推荐词分页对象，当输入的页码大于最大数值时，将返回最大的page_no值，并且结果中的数据列表为空值</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordsbyadgroupid.get</name>
<desc>取得一个推广组的所有关键词</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>special</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>取得的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordsbykeywordids.get</name>
<desc>根据一个关键词Id列表取得一组关键词</desc>
<request>
<param>
<name>keyword_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>关键词Id数组，最多200个；</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>取得的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordscat.qscore.get</name>
<desc>取得一个推广组的所有关键词和类目出价的质量得分列表</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>qscore</name>
<type>Qscore</type>
<level>Object</level>
<desc>类目出价和词的质量得分对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordsvon.add</name>
<desc>创建一批关键词</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>keyword_prices</name>
<type>String</type>
<required>required</required>
<desc>关键词，出价和匹配方式json字符串，word:词，不能有一些特殊字符。maxPrice：价格，是整数，以“分”为单位，不能小于5，不能大于日限额,当使用默认出价时必须将这个值设置为0。; isDefaultPrice：是否使用默认出价，只能是0，1(0代表不使用，1代表使用)。matchscope只能是1,2,4（1代表精确匹配，2代表子串匹配，4代表广泛匹配）。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.login.authsign.get</name>
<desc>获取登陆权限签名</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>subway_token</name>
<type>String</type>
<level>Basic</level>
<desc>登陆签名</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.add</name>
<desc>批量推广组添加定向推广投放位置，出价使用默认出价</desc>
<request>
<param>
<name>adgroup_places_json</name>
<type>String</type>
<required>required</required>
<desc>宝贝id投放位置id json数组字符串，数组个数最多200个。其中json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>12345</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.delete</name>
<desc>批量删除推广组定向推广投放位置</desc>
<request>
<param>
<name>adgroup_places_json</name>
<type>String</type>
<required>required</required>
<desc>推广组id，投放位置id  json数组字符串，数组个数最多200个。其中json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广投放位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.get</name>
<desc>根据指定推广计划下推广组列表获取相应推广组投放位置包括通投位置和单独出价位置</desc>
<request>
<param>
<name>adgroup_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>推广组ID数组</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广位置关系列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.update</name>
<desc>批量修改推广组定向推广投放位置价格</desc>
<request>
<param>
<name>adgroup_places_json</name>
<type>String</type>
<required>required</required>
<desc>推广组id，投放位置id，出价，是否默认出价 json数组字符串，数组个数最多200个。是否默认出价不能为空, 出价以“分”为单位，不能小于5分，不能大于最高日限额，不能大于9999分。 
json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.alldemographics.get</name>
<desc>获取定向投放人群维度列表</desc>
<response>
<param>
<name>demographic_list</name>
<type>Demographic</type>
<level>Object Array</level>
<desc>定向投放人群维度列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.allplaces.get</name>
<desc>获取单独出价投放位置列表</desc>
<response>
<param>
<name>place_list</name>
<type>Place</type>
<level>Object Array</level>
<desc>定向推广投放位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.demographics.get</name>
<desc>获取给定campaign设置的投放人群维度列表</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>demographic_setting_list</name>
<type>DemographicSetting</type>
<level>Object Array</level>
<desc>人群维度设置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.demographics.update</name>
<desc>设置投放人群维度加价，如果给定的campagin没有设置给定的人群维度则添加给定的人群维度，如果给定的campaign已存在给定的人群维度则修改加价</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>demographic_id_price_json</name>
<type>String</type>
<required>required</required>
<desc>投放人群维度Id，加价json数组字符串。数组长度不能超过15，json数组中的key必须和相应实体DemographicSetting中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值 
incrementalPrice是整数，以“分”为单位，不能小于1，不能大于日限额,不能大于9999分; 可以为0表示不加价；投放人群维度ID必须有效</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>demographic_setting_list</name>
<type>DemographicSetting</type>
<level>Object Array</level>
<desc>人群维度设置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupbase.get</name>
<desc>推广组基础报表数据对象</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 
定向投放：NOSEARCH）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>广告组基础数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupcreativebase.get</name>
<desc>推广组下创意报表基础数据查询(汇总数据，不分类型)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupcreative_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广组下的创意基础数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupcreativeeffect.get</name>
<desc>推广组下的创意报表效果数据查询(汇总数据，不分类型)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupcreative_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广组下的创意效果数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupeffect.get</name>
<desc>推广组效果报表数据对象</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 
定向投放：NOSEARCH ）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广组效果报表数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupkeywordbase.get</name>
<desc>推广组下的词基础报表数据查询(明细数据不分类型查询)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH）可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupkeyword_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>词基础数据返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupkeywordeffect.get</name>
<desc>推广组下的词效果报表数据查询(明细数据不分类型查询)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH）可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupkeyword_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>词效果数据返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupnonsearchbase.get</name>
<desc>推广组下的定向推广基础数据查询</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_nonsearch_base</name>
<type>String</type>
<level>Basic</level>
<desc>非搜索推广组基础对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupnonsearcheffect.get</name>
<desc>推广组下的定向推广效果数据查询</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_nonsearch_effect</name>
<type>String</type>
<level>Basic</level>
<desc>非搜索推广组效果对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campadgroupbase.get</name>
<desc>推广计划下的推广组报表基础数据查询(只有汇总数据，无分类类型)</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期,格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期,格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_campadgroup_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划下推广组的基础数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campadgroupeffect.get</name>
<desc>推广计划下的推广组报表效果数据查询(只有汇总数据，无分类类型)</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_campadgroup_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划下推广组的效果数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campaignbase.get</name>
<desc>推广计划报表基础数据对象</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH 全部：ALL）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_campaign_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划查询结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campaigneffect.get</name>
<desc>推广计划效果报表数据对象</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 
定向投放：NOSEARCH 全部：ALL）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_campaign_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划效果报表数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.custbase.get</name>
<desc>客户账户报表基础数据对象</desc>
<request>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_cust_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>用户帐户结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.custeffect.get</name>
<desc>用户账户报表效果数据查询（只有汇总数据，无分类数据）</desc>
<request>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_cust_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>账户效果数据返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.demographicbase.get</name>
<desc>推广计划下的人群基础数据查询</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_demographic_base</name>
<type>String</type>
<level>Basic</level>
<desc>非搜索推广计划基础数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.demographiceffect.get</name>
<desc>推广计划下的人群维度效果数据查询</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_demographic_effect</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划下的人群维度效果数据查询</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.tools.items.top.get</name>
<desc>取得一个关键词的推广组排名列表</desc>
<request>
<param>
<name>ip</name>
<type>String</type>
<required>required</required>
<desc>输入的必须是一个符合ipv4或者ipv6格式的IP地址</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>required</required>
<desc>关键词</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>rankeditems</name>
<type>RankedItem</type>
<level>Object Array</level>
<desc>推广组信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.simba.campkeywordbase.get</name>
<desc>直通车推广计划下的词报表基础数据查询&lt;br/&gt; 
异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt;&lt;br/&gt;</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>查询的昵称</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型。可选值：SEARCH（搜索）、CAT（类目出价）、 NOSEARCH（定向投放），可多选，如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源。可选值：1（站内）、2（站外）、SUMMARY（汇总），其中SUMMARY必须单选，其它值可多选，如：1,2</desc>
</param>
<param>
<name>time_slot</name>
<type>String</type>
<required>required</required>
<desc>时间参数（昨天：DAY、 前一周：7DAY 、前15天：15DAY 、前30天：30DAY 、前90天：90DAY）单选</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.simba.campkeywordeffect.get</name>
<desc>推广计划下的词报表效果数据查询&lt;br/&gt; 
异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt;&lt;br/&gt;</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>查询的昵称</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型。可选值：SEARCH（搜索）、CAT（类目出价）、 NOSEARCH（定向投放），可多选，如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源。可选值：1（站内）、2（站外）、SUMMARY（汇总），其中SUMMARY必须单选，其它值可多选，如：1,2</desc>
</param>
<param>
<name>time_slot</name>
<type>String</type>
<required>required</required>
<desc>时间参数（昨天：DAY、 前一周：7DAY、 前15天：15DAY、 前30天：30DAY 、前90天：90DAY）单选</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.favorite.add</name>
<desc>添加商品或店铺到收藏夹</desc>
<request>
<param>
<name>collect_type</name>
<type>String</type>
<required>required</required>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>ITEM表示宝贝，SHOP表示店铺，只能传入这两者之一</desc>
</param>
<param>
<name>item_numid</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>1</min_value>
<desc>如果收藏的是商品，就传num_iid，如果是店铺，就传入sid&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>shared</name>
<type>Boolean</type>
<required>required</required>
<desc>该收藏是否公开</desc>
</param>
</request>
<response>
<param>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否收藏成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.favorite.search</name>
<desc>查询淘宝用户收藏的商品或店铺信息</desc>
<request>
<param>
<name>collect_type</name>
<type>String</type>
<required>required</required>
<max_length>4</max_length>
<max_value>99</max_value>
<min_value>0</min_value>
<desc>ITEM表示宝贝，SHOP表示商铺，collect_type只能为这两者之一&lt;br /&gt; 支持最大长度为：4&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1。一页20条记录。&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>collect_items</name>
<type>CollectItem</type>
<level>Object Array</level>
<desc>返回查询到的商品或店铺的数字id列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询到的宝贝的收藏总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.jipiao.agent.order.detail</name>
<desc>根据淘宝系统订单号获取订单详情信息</desc>
<request>
<param>
<name>order_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>1</max_list_size>
<desc>淘宝订单id列表，当前支持列表长度为1，即当前只支持单个订单详情查询</desc>
</param>
</request>
<response>
<param>
<name>error_message</name>
<type>String</type>
<level>Basic</level>
<desc>失败时的错误信息</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作成功失败信息</desc>
</param>
<param>
<name>orders</name>
<type>TripOrder</type>
<level>Object Array</level>
<desc>机票订单的详情列表，当前支持返回一个订单</desc>
</param>
</response>
</api>
<api>
<name>taobao.jipiao.agent.order.product.snapshot</name>
<desc>获取订单对应的产品快照信息</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>订单号</desc>
</param>
</request>
<response>
<param>
<name>data</name>
<type>String</type>
<level>Basic</level>
<desc>{ 
	"pnr_id": { 
		"passengers": ["用户姓名"], 
		"isAutoBook": false, 
		"segments": [{ 
			"depTime": "2014-04-04 15:25:00.0", 
			"filghtNO": "KN5856", 
			"flightSegment": "SZX-NAY" 
		}], 
		"pnr": "-", 
		"policyMemo": "-", 
		"fareMemo": "-", 
		"channel": "渠道" 
	} 
} 
 
pnr_id:淘宝内部pnr id 例如72749001 
isAutoBook：是否使用淘宝自动出票 
passengers：乘客姓名，可包含多个 
segments：航段信息 
pnr：pnr值 如果没有值，则返回"-" 
policyMemo：政策备注，如果没有值，则返回"-" 
fareMemo：运价备注，如果没有值，则返回"-" 
channel：渠道 例如51book:300001</desc>
</param>
<param>
<name>error_message</name>
<type>String</type>
<level>Basic</level>
<desc>失败时的错误信息</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作成功失败信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.jipiao.agent.order.search</name>
<desc>卖家根据条件查询淘宝订单id列表</desc>
<request>
<param>
<name>begin_time</name>
<type>Date</type>
<required>optional</required>
<desc>创建订单时间范围的开始时间，注意：当前搜索条件开始结束时间范围不能超过三天，默认开始时间为当前时间往前推三天 （具体天数可能调整）</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>创建订单时间范围的结束时间，注意：当前搜索条件开始结束时间范围不能超过三天，默认为当前时间 （具体天数可能调整）</desc>
</param>
<param>
<name>has_itinerary</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要行程单，true表示需要行程单；false表示不许要</desc>
</param>
<param>
<name>page</name>
<type>Number</type>
<required>optional</required>
<desc>页码，默认第一页；注意：页大小固定，搜索结果中返回页大小pageSize，和是否包含下一页hasNext</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>订单状态，默认为空，查询所有状态的订单 
1:待确认 
2:待出票 
3:强制成功 
4:未付款 
5:预订成功 
6:已失效</desc>
</param>
<param>
<name>trip_type</name>
<type>Number</type>
<required>optional</required>
<desc>航程类型： 0.单程；1.往返</desc>
</param>
</request>
<response>
<param>
<name>error_message</name>
<type>String</type>
<level>Basic</level>
<desc>失败时的错误信息</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作成功失败信息</desc>
</param>
<param>
<name>search_result</name>
<type>SearchOrderResult</type>
<level>Object</level>
<desc>机票订单搜索返回结果对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.jipiao.agent.order.ticket</name>
<desc>淘宝机票代理商回填票号/成功订单</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝系统订单id</desc>
</param>
<param>
<name>success_info</name>
<type>String</type>
<required>required</required>
<max_list_size>18</max_list_size>
<desc>成功订单参数：列表元素结构为—— 
1.航班号（注：是订单里的航班号，非实际承运航班号）; 
2.旧乘机人姓名; 
3.新乘机人姓名; 
4.票号 （乘机人、航段对应的票号） 
说明： 
1.往返订单，2段航班对应1个票号的，需要2条success_info记录，分别对应去程、回程； 
2.有时用户输入的乘机人姓名输入错误或者有生僻字，代理商必须输入新的名字以保证验真通过；即旧乘机人姓名和新乘机人姓名不需要变化时可以相同</desc>
</param>
</request>
<response>
<param>
<name>error_message</name>
<type>String</type>
<level>Basic</level>
<desc>失败时的错误信息</desc>
</param>
<param>
<name>is_order_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回接口调用完成后，整个订单是否成功</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作成功失败信息</desc>
</param>
<param>
<name>is_ticket_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回回填票号操作成功失败信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.jipiao.policiesstatus.update</name>
<desc>根据条件大批量更新产品，目前只支持删除,每十分钟只允许调用一次,更新记录数不能超过10W个</desc>
<request>
<param>
<name>airline</name>
<type>String</type>
<required>optional</required>
<max_length>5</max_length>
<desc>航空公司二字码&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>arr_airport</name>
<type>String</type>
<required>optional</required>
<max_length>3</max_length>
<desc>到达机场三字码,此项必需与出发机场同时为空或不为空&lt;br /&gt; 支持最大长度为：3&lt;br /&gt; 支持的最大列表长度为：3</desc>
</param>
<param>
<name>dep_airport</name>
<type>String</type>
<required>optional</required>
<max_length>3</max_length>
<desc>出发机场三字码,此项必需与到达机场同时为空或不为空&lt;br /&gt; 支持最大长度为：3&lt;br /&gt; 支持的最大列表长度为：3</desc>
</param>
<param>
<name>out_product_ids</name>
<type>String</type>
<required>optional</required>
<desc>外部产品id集,最多支持1000个,后续调大,其中的out_product_id含有空格将不会处理</desc>
</param>
<param>
<name>policy_ids</name>
<type>String</type>
<required>optional</required>
<desc>产品id集,最多支持1000个，后续调大，其中单个的policy_id含有留空格或不是数字将会忽略不处理</desc>
</param>
<param>
<name>publish_date</name>
<type>String</type>
<required>optional</required>
<desc>发布日期</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>发布来源, 通过接口taobao.jipiao.policy.process添加的政策会自动加上source为TOP,代理商后台页面录入的source为PC,excel上传的source为UPLOAD,通过接口taobao.jipiao.policies.fulladd,taobao.jipiao.policies.add的自定义source也可以&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<desc>0：按policy_ids更新；1：按out_product_ids更新；2:按其它条件更新</desc>
</param>
</request>
<response>
<param>
<name>invoke_id</name>
<type>String</type>
<level>Basic</level>
<desc>代理商核对接收处理信息的时间序号</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>机票政策状态更新任务提交结果，true，成功；false，失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.itinerary.send</name>
<desc>国内机票代理商行程单信息回填</desc>
<request>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>物流公司代码CODE，如不清楚，请找运营提供&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>express_code</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>邮寄单号，长度不能超过32字节&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>itinerary_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝系统行程单唯一键</desc>
</param>
<param>
<name>itinerary_no</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>行程单号&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>send_date</name>
<type>String</type>
<required>required</required>
<desc>邮寄日期，格式yyyy-mm-dd</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>成功或者失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.confirm</name>
<desc>国内机票代理商确认订单接口</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>国内机票订单id</desc>
</param>
<param>
<name>pnr_info</name>
<type>String</type>
<required>optional</required>
<max_list_size>9</max_list_size>
<desc>hk（占座）时需要的信息列表，元素结构：乘机人姓名;pnr (以分号进行分隔)</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>确认成功失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.fail</name>
<desc>国内机票代理商失败订单接口</desc>
<request>
<param>
<name>fail_memo</name>
<type>String</type>
<required>optional</required>
<max_length>200</max_length>
<desc>失败类型为0，说明备注原因&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>fail_type</name>
<type>Number</type>
<required>required</required>
<desc>失败原因：1．客户要求失败订单；2．此舱位已售完（经济舱或特舱）；3．剩余座位少于用户购买数量；4．特价管理里录入的特价票已经售完；5．假舱（请及时通过旺旺或者电话反馈给淘宝工作人员）；0．其它（请在备注中说明原因）</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>国内机票订单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>失败订单操作成功失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.find</name>
<desc>根据淘宝机票政策id搜索订单</desc>
<request>
<param>
<name>begin_time</name>
<type>Date</type>
<required>optional</required>
<desc>创建订单时间范围的开始时间，注意：当前搜索条件开始结束时间范围不能超过三天，默认开始时间为当前时间往前推三天 （具体天数可能调整）</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>创建订单时间范围的结束时间，注意：当前搜索条件开始结束时间范围不能超过三天，默认为当前时间 （具体天数可能调整）</desc>
</param>
<param>
<name>page</name>
<type>Number</type>
<required>optional</required>
<desc>页码，默认第一页；注意：页大小固定，搜索结果中返回页大小pageSize，和是否包含下一页hasNext</desc>
</param>
<param>
<name>policy_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝机票政策id</desc>
</param>
</request>
<response>
<param>
<name>search_result</name>
<type>SearchOrderResult</type>
<level>Object</level>
<desc>国内机票订单搜索返回结果对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.get</name>
<desc>根据淘宝系统订单号获取订单详情信息</desc>
<request>
<param>
<name>order_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>1</max_list_size>
<desc>淘宝政策id列表，当前支持列表长度为1，即当前只支持单个订单详情查询</desc>
</param>
</request>
<response>
<param>
<name>orders</name>
<type>AtOrder</type>
<level>Object Array</level>
<desc>返回订单详细列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.hk</name>
<desc>国内机票代理商手工hk订单（未付款前，手工填写pnr）</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>国内机票订单id</desc>
</param>
<param>
<name>pnr_info</name>
<type>String</type>
<required>required</required>
<max_list_size>9</max_list_size>
<desc>hk（占座）时需要的信息信息列表，元素结构：乘机人姓名;pnr (以分号进行分隔).</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>手工HK成功失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.search</name>
<desc>根据条件查询淘宝订单id列表</desc>
<request>
<param>
<name>begin_time</name>
<type>Date</type>
<required>optional</required>
<desc>创建订单时间范围的开始时间，注意：当前搜索条件开始结束时间范围不能超过三天，默认开始时间为当前时间往前推三天 （具体天数可能调整）</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>创建订单时间范围的结束时间，注意：当前搜索条件开始结束时间范围不能超过三天，默认为当前时间 （具体天数可能调整）</desc>
</param>
<param>
<name>has_itinerary</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要行程单，true表示需要行程单；false表示不许要 （必须设置，且不能为null）</desc>
</param>
<param>
<name>page</name>
<type>Number</type>
<required>optional</required>
<desc>页码，默认第一页；注意：页大小固定，搜索结果中返回页大小pageSize，和是否包含下一页hasNext</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>订单状态，默认为空，查询所有状态的订单</desc>
</param>
<param>
<name>trip_type</name>
<type>Number</type>
<required>optional</required>
<desc>航程类型： 0.单程和普通往返；2.多程（暂时没有使用）；3.特价往返</desc>
</param>
</request>
<response>
<param>
<name>search_result</name>
<type>SearchOrderResult</type>
<level>Object</level>
<desc>国内机票订单搜索返回结果对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.trip.jipiao.agent.order.success</name>
<desc>淘宝机票代理商成功/解冻订单</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝系统订单id</desc>
</param>
<param>
<name>success_info</name>
<type>String</type>
<required>required</required>
<max_list_size>9</max_list_size>
<desc>成功订单参数：列表元素结构为——旧乘机人姓名;新乘机人姓名;pnr;票号 (以分号进行分隔)。说明：有时用户输入的乘机人姓名输入错误或者有生僻字，代理商必须输入新的名字以保证验真通过；即旧乘机人姓名和新乘机人姓名不需要变化时可以相同</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作成功失败信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.promotion.kfc</name>
<desc>活动名称与描述违禁词检查</desc>
<request>
<param>
<name>promotion_desc</name>
<type>String</type>
<required>required</required>
<desc>活动描述</desc>
</param>
<param>
<name>promotion_title</name>
<type>String</type>
<required>required</required>
<desc>活动名称</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.promotions.get</name>
<desc>根据商品ID查询卖家使用该第三方工具对商品设置的所有优惠策略</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的优惠策略结构字段列表。可选值为Promotion中所有字段，如：promotion_id, promotion_title, item_id, status, tag_id等等</desc>
</param>
<param>
<name>is_new_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否新标签标识</desc>
</param>
<param>
<name>num_iid</name>
<type>String</type>
<required>required</required>
<desc>商品数字ID。根据该ID查询商品下通过第三方工具设置的所有优惠策略</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>优惠策略状态。可选值：ACTIVE(有效)，UNACTIVE(无效)，若不传或者传入其他值，则默认查询全部</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>optional</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>promotions</name>
<type>Promotion</type>
<level>Object Array</level>
<desc>商品对应的所有优惠列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.activity.get</name>
<desc>查询某个卖家的店铺优惠券领取活动 
返回，优惠券领取活动ID，优惠券ID，总领用量，每人限领量，已领取数量 
领取活动状态，优惠券领取链接 
最多50个优惠券</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>optional</required>
<desc>活动的id</desc>
</param>
</request>
<response>
<param>
<name>activitys</name>
<type>Activity</type>
<level>Object Array</level>
<desc>活动列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupon.add</name>
<desc>创建店铺优惠券。有效期内的店铺优惠券总数量不超过50张</desc>
<request>
<param>
<name>condition</name>
<type>Number</type>
<required>optional</required>
<desc>订单满多少元才能用这个优惠券，500就是满500元才能使用</desc>
</param>
<param>
<name>denominations</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>3</min_value>
<desc>优惠券的面额，必须是3，5，10，20，50，100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：3</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>优惠券的截止日期</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>优惠券的生效时间</desc>
</param>
</request>
<response>
<param>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券的id</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupon.send</name>
<desc>通过接口批量发放店铺优惠券（每次只能发送100张，只能发给当前授权卖家店铺的会员），发送成功则返回为空，发送失败则返回失败的买家列表和发送成功的买家和优惠券的number。注：如果所有买家都发放失败的话，is_success也为true，建议调用者根据返回的集合判断是否送入的买家都发放成功了</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>买家昵称用半角','号分割</desc>
</param>
<param>
<name>coupon_id</name>
<type>Number</type>
<required>required</required>
<desc>优惠券的id</desc>
</param>
</request>
<response>
<param>
<name>coupon_results</name>
<type>CouponResult</type>
<level>Object Array</level>
<desc>发送成功的买家的昵称和优惠券的number</desc>
</param>
<param>
<name>failure_buyers</name>
<type>ErrorMessage</type>
<level>Object Array</level>
<desc>没有发送成功的买家</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true 成功，false失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupon.sns.send</name>
<desc>通过接口批量发放店铺优惠券（每次只能发送100张，只能发给当前授权卖家店铺的微淘粉丝），发送成功则返回为空，发送失败则返回失败的买家列表和发送成功的买家和优惠券的number。注：如果所有买家都发放失败的话，is_success也为true，建议调用者根据返回的集合判断是否送入的买家都发放成功了</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>买家昵称用半角','号分割</desc>
</param>
<param>
<name>coupon_id</name>
<type>Number</type>
<required>required</required>
<desc>优惠券的id</desc>
</param>
</request>
<response>
<param>
<name>coupon_results</name>
<type>CouponResult</type>
<level>Object Array</level>
<desc>发送成功的买家的昵称和优惠券的number</desc>
</param>
<param>
<name>failure_buyers</name>
<type>ErrorMessage</type>
<level>Object Array</level>
<desc>没有发送成功的买家</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true 成功，false失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupons.get</name>
<desc>查询卖家已经创建的优惠券，接口返回信息：优惠券ID，面值，创建时间，有效期，使用条件，使用渠道，创建渠道，优惠券总数量</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<required>optional</required>
<desc>优惠券的id，唯一标识这个优惠券</desc>
</param>
<param>
<name>denominations</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>3</min_value>
<desc>优惠券的面额，必须是3，5，10，20，50,100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：3</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>优惠券的截止日期</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>查询的页号，结果集是分页返回的，每页20条&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>20</max_length>
<desc>每页条数&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>coupons</name>
<type>Coupon</type>
<level>Object Array</level>
<desc>优惠券列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询的总数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.limitdiscount.detail.get</name>
<desc>限时打折详情查询。查询出指定限时打折的对应商品记录信息。</desc>
<request>
<param>
<name>limit_discount_id</name>
<type>Number</type>
<required>required</required>
<desc>限时打折ID。这个针对查询唯一限时打折情况。</desc>
</param>
</request>
<response>
<param>
<name>item_discount_detail_list</name>
<type>LimitDiscountDetail</type>
<level>Object Array</level>
<desc>限时打折对应的商品详情列表。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.limitdiscount.get</name>
<desc>分页查询某个卖家的限时打折信息。每页20条数据，按照结束时间降序排列。也可指定某一个限时打折id查询唯一的限时打折信息。</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>限时打折结束时间。输入的时间会被截取，年月日有效，时分秒忽略。</desc>
</param>
<param>
<name>limit_discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>限时打折ID。这个针对查询唯一限时打折情况。若此字段不为空，则说明操作为单条限时打折记录查询，其他字段忽略。若想分页按条件查询，这个字段置为空。</desc>
</param>
<param>
<name>page_number</name>
<type>Number</type>
<required>optional</required>
<desc>分页页号。默认1。当页数大于最大页数时，结果为最大页数的数据。</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>限时打折开始时间。输入的时间会被截取，年月日有效，时分秒忽略。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>限时打折活动状态。ALL:全部状态;OVER:已结束;DOING:进行中;PROPARE:未开始(只支持大写)。当limit_discount_id为空时，为空时，默认为全部的状态。</desc>
</param>
</request>
<response>
<param>
<name>limit_discount_list</name>
<type>LimitDiscount</type>
<level>Object Array</level>
<desc>限时打折列表。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>满足该查询条件的限时打折总数量。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.meal.get</name>
<desc>搭配套餐查询。每个卖家最多创建50个搭配套餐，所以查询不会分页，会将所有的满足状态的搭配套餐全部查出。该接口不会校验商品的下架或库存为0，查询结果的状态表明搭配套餐在数据库中的状态，商品的状态请isv自己验证。在卖家后台页面点击查看会触发数据库状态的修改。</desc>
<request>
<param>
<name>meal_id</name>
<type>Number</type>
<required>optional</required>
<desc>搭配套餐id</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。默认时两种情况都会查询。</desc>
</param>
</request>
<response>
<param>
<name>meal_list</name>
<type>Meal</type>
<level>Object Array</level>
<desc>搭配套餐列表。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.add</name>
<desc>增加活动参与的商品，部分商品参与的活动，最大支持指定150个商品。</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>商品id,多个id用逗号隔开，一次不超过50个。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>增加商品范围是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.all.remove</name>
<desc>清空活动参与的商品</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>清空活动参与商品是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.list.get</name>
<desc>查询活动参与的商品</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>promotion_range_list</name>
<type>PromotionRange</type>
<level>Object Array</level>
<desc>活动参与的商品列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.remove</name>
<desc>去除活动参与的商品</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>商品id,多个id用逗号隔开。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>去除活动参与的商品是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.add</name>
<desc>创建无条件单品优惠活动。1、可以选择是全店参加或者部分商品参加：participate_range：0表示全部参与； 1表示部分商品参与。 
2、如果是部分商品参加，则需要通过taobao.promotionmisc.activity.range.add接口来指定需要参加的商品。 
3、该接口创建的优惠受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称，超过5个汉字时，商品详情中显示的优惠名称为：卖家优惠。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id。</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保存成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.delete</name>
<desc>删除无条件单品优惠活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功删除活动。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.get</name>
<desc>查询无条件单品优惠活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item_promotion</name>
<type>ItemPromotion</type>
<level>Object</level>
<desc>单品优惠活动信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.list.get</name>
<desc>查询无条件单品优惠活动列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码。&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>每页记录数，最大支持50 。&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>item_promotion_list</name>
<type>ItemPromotion</type>
<level>Object Array</level>
<desc>只包含活动的主要信息，如activity_id，name，description，start_time，end_time，participate_range。优惠的其他详细信息，请通过taobao.promotionmisc.item.activity.get获取。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总条数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.update</name>
<desc>修改无条件单品优惠活动。 
1、该接口只修改活动基本信息和打折信息，如需要增加、删除参与该活动的商品，请调用taobao.promotionmisc.activity.range.add和taobao.promotionmisc.activity.range.remove接口。  
2、使用该接口时需要同时把未做修改的字段值也传入。  
 
3、该接口受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>修改是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.add</name>
<desc>创建满就送活动。 
1、可以选择是全店参加或者部分商品参加：participate_range：0表示全部参与； 1表示部分商品参与。 2、如果是部分商品参加，则需要通过taobao.promotionmisc.activity.range.add接口来指定需要参加的商品。 3、该接口创建的优惠受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>exclude_area</name>
<type>String</type>
<required>optional</required>
<desc>免邮的排除地区，即，除指定地区外，其他地区包邮。当is_free_post为true时，该值才有意义。代码使用*链接，代码为行政区划代码。</desc>
</param>
<param>
<name>gift_id</name>
<type>Number</type>
<required>optional</required>
<desc>礼品id，当is_send_gift为true时，该值才有意义。 1）只有填写真实的淘宝商品id时，才能生成物流单，并且在确定订单的页面上可以点击该商品名称跳转到商品详情页面。2）当礼物为实物商品时(有宝贝id),礼物必须为上架商品,不能为虚拟商品,不能为拍卖商品,不能有sku,不符合条件的,不做为礼物。</desc>
</param>
<param>
<name>gift_name</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>礼品名称。当is_send_gift为true时，该值才有意义。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>gift_url</name>
<type>String</type>
<required>optional</required>
<desc>商品详情的url，当is_send_gift为true时，该值才有效。</desc>
</param>
<param>
<name>is_amount_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满元是否上不封顶。当is_amount_over为true时，该值才有意义。当该值为true时，表示满元上不封顶，例如满100元减10元，当满200时，则减20元。。。默认为false。</desc>
</param>
<param>
<name>is_amount_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满元条件。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_free_post</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有免邮行为。</desc>
</param>
<param>
<name>is_item_count_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满件条件。</desc>
</param>
<param>
<name>is_item_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满件是否上不封顶。当is_amount_multiple为true时，该值才有意义。当该值为true时，表示满件上不封顶，例如满10件减2元，当满20件时，则减4元。。。 默认为false。</desc>
</param>
<param>
<name>is_send_gift</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有送礼品行为。</desc>
</param>
<param>
<name>is_shop_member</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有店铺会员等级条件。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>item_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少件。当is_item_count_over为true时，该值才有意义。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>shop_member_level</name>
<type>Number</type>
<required>optional</required>
<max_value>9</max_value>
<min_value>0</min_value>
<desc>店铺会员等级，当is_shop_member为true时，该值才有意义。0：店铺客户；1：普通客户；2：高级会员；3：VIP会员； 4：至尊VIP会员。&lt;br /&gt; 支持最大值为：9&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>total_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少元。当is_amount_over为true时，该才字段有意义。注意：单位是分，即10000表示100元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>活动类型： 1表示商品级别的活动；2表示店铺级别的活动&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id。</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保存成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.delete</name>
<desc>删除满就送活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功删除活动。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.get</name>
<desc>查询满就送活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>mjs_promotion</name>
<type>MjsPromotion</type>
<level>Object</level>
<desc>满就送活动信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.list.get</name>
<desc>查询满就送活动列表。注意，该接口的返回值中，只包含活动的主要信息，如activity_id，name，description，start_time，end_time，type，participate_range。优惠的详细信息，请通过taobao.promotionmisc.mjs.activity.get获取。</desc>
<request>
<param>
<name>activity_type</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>活动类型： 1表示商品级别的活动；2表示店铺级别的活动。&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码。&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>每页记录数，最大支持50 。&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>mjs_promotion_list</name>
<type>MjsPromotion</type>
<level>Object Array</level>
<desc>只包含活动的主要信息，如activity_id，aame，description，start_time，end_time，type，participate_range。优惠的其他详细信息，请通过taobao.promotionmisc.mjs.activity.get获取。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总条数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.update</name>
<desc>修改满就送活动。  
1、该接口只修改活动基本信息和打折信息，如需要增加、删除参与该活动的商品，请调用taobao.promotionmisc.activity.range.add和taobao.promotionmisc.activity.range.remove接口。  
2、使用该接口时需要同时把未做修改的字段值也传入。  
3、该接口创建的优惠受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>exclude_area</name>
<type>String</type>
<required>optional</required>
<desc>免邮的排除地区，即，除指定地区外，其他地区包邮。当is_free_post为true时，该值才有意义。代码使用*链接，代码为行政区划代码。</desc>
</param>
<param>
<name>gift_id</name>
<type>Number</type>
<required>optional</required>
<desc>礼品id，当is_send_gift为true时，该值才有意义。 1）只有填写真实的淘宝商品id时，才能生成物流单，并且在确定订单的页面上可以点击该商品名称跳转到商品详情页面。2）当礼物为实物商品时(有宝贝id),礼物必须为上架商品,不能为虚拟商品,不能为拍卖商品,不能有sku,不符合条件的,不做为礼物。</desc>
</param>
<param>
<name>gift_name</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>礼品名称。当is_send_gift为true时，该值才有意义。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>gift_url</name>
<type>String</type>
<required>optional</required>
<desc>商品详情的url，当is_send_gift为true时，该值才有效。</desc>
</param>
<param>
<name>is_amount_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满元是否上不封顶。当is_amount_over为true时，该值才有意义。当该值为true时，表示满元上不封顶，例如满100元减10元，当满200时，则减20元。。。默认为false。</desc>
</param>
<param>
<name>is_amount_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满元条件。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_free_post</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有免邮行为。</desc>
</param>
<param>
<name>is_item_count_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满件条件。</desc>
</param>
<param>
<name>is_item_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满件是否上不封顶。当is_amount_multiple为true时，该值才有意义。当该值为true时，表示满件上不封顶，例如满10件减2元，当满20件时，则减4元。。。 默认为false。</desc>
</param>
<param>
<name>is_send_gift</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有送礼品行为。</desc>
</param>
<param>
<name>is_shop_member</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有店铺会员等级条件。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>item_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少件。当is_item_count_over为true时，该值才有意义。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>shop_member_level</name>
<type>Number</type>
<required>optional</required>
<max_value>9</max_value>
<min_value>0</min_value>
<desc>店铺会员等级，当is_shop_member为true时，该值才有意义。0：店铺客户；1：普通客户；2：高级会员；3：VIP会员； 4：至尊VIP会员。&lt;br /&gt; 支持最大值为：9&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>total_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少元。当is_amount_over为true时，该才字段有意义。注意：单位是分，即10000表示100元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>修改是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.tool.check</name>
<desc>UMP工具检测。ISV通过该接口检测（通过taobao.ump.tool.add）创建的UMP工具（tool）是否符合规范，如果不符合，则返回错误信息和对应的解决方案的；工具检测通过后才可以提交工具审核邮件，提交工具审核时，需提供该接口的返回值。</desc>
<request>
<param>
<name>meta_allow</name>
<type>String</type>
<required>optional</required>
<desc>可使用的元数据。PRD审核后，会告诉isv可使用的元数据。</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<min_value>10</min_value>
<desc>工具ID, taobao.ump.tool.add成功后返回的id。&lt;br /&gt; 支持最小值为：10</desc>
</param>
</request>
<response>
<param>
<name>check_tool_module</name>
<type>CheckToolModule</type>
<level>Object</level>
<desc>工具审核结果。</desc>
</param>
<param>
<name>error_message</name>
<type>String</type>
<level>Basic</level>
<desc>接口调用错误信息描述。</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>工具检测动作是否成功。检测是否通过请查看返回值default_model里的is_pass。</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activities.get</name>
<desc>查询活动列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页的页码&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>50</max_value>
<min_value>1</min_value>
<desc>每页的最大条数&lt;br /&gt; 支持最大值为：50&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具id</desc>
</param>
</request>
<response>
<param>
<name>contents</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销活动内容，可以通过ump sdk来进行处理</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activities.list.get</name>
<desc>按照营销活动id的列表ids，查询对应的营销活动列表。</desc>
<request>
<param>
<name>ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>40</max_list_size>
<desc>营销活动id列表。</desc>
</param>
</request>
<response>
<param>
<name>activities</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销活动列表！</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.add</name>
<desc>新增优惠活动。设置优惠活动的基本信息，比如活动时间，活动针对的对象（可以是满足某些条件的买家）</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>活动内容，通过ump sdk里面的MarkeitngTool来生成</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具id</desc>
</param>
</request>
<response>
<param>
<name>act_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.delete</name>
<desc>删除营销活动。对应的活动详情等将会被全部删除。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.get</name>
<desc>查询营销活动</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>营销活动的内容，可以通过ump sdk中的marketingTool来完成对该内容的处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.update</name>
<desc>修改营销活动</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>营销活动内容，json格式，通过ump sdk 的marketingTool来生成</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.add</name>
<desc>增加活动详情。活动详情里面包括活动的范围（店铺，商品），活动的参数（比如具体的折扣），参与类型（全部，部分，部分不参加）等信息。当参与类型为部分或部分不参加的时候需要和taobao.ump.range.add来配合使用。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>增加工具详情</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>活动详情内容，json格式，可以通过ump sdk中的MarketingTool来进行处理</desc>
</param>
</request>
<response>
<param>
<name>detail_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动详情的id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.delete</name>
<desc>删除活动详情</desc>
<request>
<param>
<name>detail_id</name>
<type>Number</type>
<required>required</required>
<desc>活动详情id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.get</name>
<desc>查询活动详情</desc>
<request>
<param>
<name>detail_id</name>
<type>Number</type>
<required>required</required>
<desc>活动详情的id</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>活动详情信息，可以通过ump sdk中的MarketingTool来进行处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.list.add</name>
<desc>批量添加营销活动。替代单条添加营销详情的的API。此接口适用针对某个营销活动的多档设置，会按顺序插入detail。若在整个事务过程中出现断点，会将已插入完成的detail_id返回，注意记录这些id，并将其删除，会对交易过程中的优惠产生影响。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>营销活动id。</desc>
</param>
<param>
<name>details</name>
<type>String</type>
<required>required</required>
<desc>营销详情的列表。此列表由detail的json字符串组成。最多插入为10个。</desc>
</param>
</request>
<response>
<param>
<name>detail_id_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回对应的营销详情的id列表！若有某一条插入失败，会将插入成功的detail_id放到errorMessage里面返回，此时errorMessage里面会包含格式为(id1,id2,id3)的插入成功id列表。这些ids会对交易产生影响，通过截取此信息，将对应detail删除！</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.update</name>
<desc>更新活动详情</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>活动详情内容，可以通过ump sdk中的MarketingTool来生成这个内容</desc>
</param>
<param>
<name>detail_id</name>
<type>Number</type>
<required>required</required>
<desc>活动详情id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.details.get</name>
<desc>分页查询优惠详情列表</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>营销活动id</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页的页码&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>50</max_value>
<min_value>1</min_value>
<desc>每页的最大条数&lt;br /&gt; 支持最大值为：50&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>contents</name>
<type>String</type>
<level>Basic Array</level>
<desc>活动详情的信息</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbb.getbycode</name>
<desc>根据营销积木块代码获取积木块。接口返回该代码最新版本的积木块。如果要查询某个非最新版本的积木块，可以使用积木块id查询接口。</desc>
<request>
<param>
<name>code</name>
<type>String</type>
<required>required</required>
<desc>营销积木块code</desc>
</param>
</request>
<response>
<param>
<name>mbb</name>
<type>String</type>
<level>Basic</level>
<desc>营销积木块的内容，通过ump sdk来进行处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbb.getbyid</name>
<desc>根据积木块id获取营销积木块。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>积木块的id</desc>
</param>
</request>
<response>
<param>
<name>mbb</name>
<type>String</type>
<level>Basic</level>
<desc>营销积木块定义信息，可以通过ump sdk里面的MBB.fromJson来处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbbs.get</name>
<desc>获取营销积木块列表，可以根据类型获取，也可以将该字段设为空，获取所有的</desc>
<request>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>积木块类型。如果该字段为空表示查出所有类型的 
现在有且仅有如下几种：resource,condition,action,target</desc>
</param>
</request>
<response>
<param>
<name>mbbs</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销积木块内容列表，内容为json格式的，可以通过ump sdk里面的MBB.fromJson来处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbbs.list.get</name>
<desc>通过营销积木id列表来获取营销积木块列表。</desc>
<request>
<param>
<name>ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>20</max_list_size>
<desc>营销积木块id组成的字符串。</desc>
</param>
</request>
<response>
<param>
<name>mbbs</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销积木块内容列表，内容为json格式的，可以通过ump sdk里面的MBB.fromJson来处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.range.add</name>
<desc>指定某项活动中，某个商家的某些类型物品（指定商品，指定类目或者别的）参加或者不参加活动。当活动详情的参与类型为部分或者部分不参加的时候，需要指定具体哪部分参加或者不参加，使用本接口完成操作。比如部分商品满就送，这里的range用来指定具体哪些商品参加满就送活动。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>id列表，当范围类型为商品时，该id为商品id；当范围类型为类目时，该id为类目id.多个id用逗号隔开，一次不超过50个</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<desc>范围的类型，比如是全店，商品，类目 
见：MarketingConstants.PARTICIPATE_TYPE_*</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.range.delete</name>
<desc>去指先前指定在某项活动中，某些类型的物品参加或者不参加活动的设置</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>id列表，当范围类型为商品时，该id为商品id；当范围类型为类目时，该id为类目id</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<desc>范围的类型，比如是全店，商品，类目见：MarketingConstants.PARTICIPATE_TYPE_*</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.range.get</name>
<desc>查询某个卖家所有参加或者不参加某项活动的物品</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
</request>
<response>
<param>
<name>ranges</name>
<type>Range</type>
<level>Object Array</level>
<desc>营销范围类列表！</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.add</name>
<desc>新增优惠工具。通过ump sdk来完成将积木块拼装成为工具的操作，再使用本接口上传优惠工具。</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>工具内容，由sdk里面的MarketingTool生成的json字符串</desc>
</param>
</request>
<response>
<param>
<name>tool_id</name>
<type>Number</type>
<level>Basic</level>
<desc>工具id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.delete</name>
<desc>删除营销工具。当工具正在被使用的时候，是不能被删除的。</desc>
<request>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>营销工具id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.get</name>
<desc>根据工具id获取一个工具对象</desc>
<request>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具的id</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>工具信息内容，格式为json，可以通过提供给的sdk里面的MarketingBuilder来处理这个内容</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.update</name>
<desc>修改工具</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>工具的内容，由sdk的marketingBuilder生成</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具id</desc>
</param>
</request>
<response>
<param>
<name>tool_id</name>
<type>Number</type>
<level>Basic</level>
<desc>更新后生成的新的工具id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tools.get</name>
<desc>查询工具列表</desc>
<request>
<param>
<name>tool_code</name>
<type>String</type>
<required>optional</required>
<desc>工具编码</desc>
</param>
</request>
<response>
<param>
<name>tools</name>
<type>String</type>
<level>Basic Array</level>
<desc>工具列表，单个内容为json格式，需要通过ump的sdk提供的MarketingBuilder来进行处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.upp.seller.pointrecord.get</name>
<desc>获取调用者的卖家积分明细数据</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>optional</required>
<desc>查询的页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>30</max_value>
<min_value>1</min_value>
<desc>每页记录数，最大30条，默认20&lt;br /&gt; 支持最大值为：30&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>记录状态 1成功 0冻结  -1失败</desc>
</param>
<param>
<name>transaction_id</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<desc>upp内部业务ID，由预扣或预发积分接口返回，ISV可以直接使用，或映射自己的业务ID。&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>transaction_time_begin</name>
<type>Date</type>
<required>optional</required>
<desc>业务发生的开始时间</desc>
</param>
<param>
<name>transaction_time_end</name>
<type>Date</type>
<required>optional</required>
<desc>业务发生的结束时间</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<max_length>1</max_length>
<desc>卖家积分活动的类型 
3：发送积分 
4：扣减积分&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否调用成功</desc>
</param>
<param>
<name>seller_point_record_list</name>
<type>SellerPointRecordModule</type>
<level>Object Array</level>
<desc>卖家积分明细记录列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.upp.shoppoint.deduct</name>
<desc>业务状态为成功的时候，会扣减掉买家店铺积分，及状态由预扣的冻结状态改为已使用状态；业务状态为失败的时候，会扣解冻买家店铺积分，及状态由预扣的冻结状态改为可使用状态；</desc>
<request>
<param>
<name>point_num</name>
<type>Number</type>
<required>required</required>
<desc>处理的店铺积分数量</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>required</required>
<desc>卖家NICK</desc>
</param>
<param>
<name>transaction_id</name>
<type>Number</type>
<required>required</required>
<max_length>32</max_length>
<desc>用于实际扣减的时候关联系统发放记录，由预扣减接口返回&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>transaction_status</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<desc>6:业务成功 
4:业务失败&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>transaction_time</name>
<type>Date</type>
<required>required</required>
<desc>业务发生的时间</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否调用成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.upp.shoppoint.prededuct</name>
<desc>预扣出买家的店铺积分，及买家店铺积分被冻结</desc>
<request>
<param>
<name>business_info</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>业务扩展信息 ，用于ISV描述积分记录的具体业务信息。 
禁止含有“:”或“;”或“~”禁用字符 或者淘宝违禁词库中的其他字符。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>point_num</name>
<type>Number</type>
<required>required</required>
<desc>处理的店铺积分数量</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>required</required>
<desc>卖家家nick</desc>
</param>
<param>
<name>transaction_time</name>
<type>Date</type>
<required>required</required>
<desc>业务发生的时间</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否调用成功</desc>
</param>
<param>
<name>transaction_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用于实际扣减的时候关联系统扣减记录,需要调用方保存。</desc>
</param>
</response>
</api>
<api>
<name>taobao.upp.shoppoint.presend</name>
<desc>卖家预发放店铺积分，卖家发放部分的店铺积分处于冻结状态。</desc>
<request>
<param>
<name>business_info</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>业务扩展信息 ，用于ISV描述积分记录的具体业务信息。 
禁止含有“:”或“;”或“~”禁用字符 或者淘宝违禁词库中的其他字符。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>买家nick</desc>
</param>
<param>
<name>point_num</name>
<type>Number</type>
<required>required</required>
<desc>处理的店铺积分数量</desc>
</param>
<param>
<name>transaction_time</name>
<type>Date</type>
<required>required</required>
<desc>业务发生的时间</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否调用成功</desc>
</param>
<param>
<name>transaction_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用于实际发放的时候关联系统发放记录,需要调用方保存</desc>
</param>
</response>
</api>
<api>
<name>taobao.upp.shoppoint.send</name>
<desc>业务状态为成功的时候，会发放店铺积分给买家,同时会卖家店铺积分冻结部分会变为以发放；业务状态为失败的时候，会扣解冻卖家发放的店铺积分，及状态由预扣的冻结状态改为可发放状态；</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>买家nick</desc>
</param>
<param>
<name>point_num</name>
<type>Number</type>
<required>required</required>
<desc>处理的店铺积分数量</desc>
</param>
<param>
<name>transaction_id</name>
<type>Number</type>
<required>required</required>
<max_length>32</max_length>
<desc>用于实际发放的时候关联系统发放记录，由预发放接口返回&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>transaction_status</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<desc>6:业务成功 
4:业务失败&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>transaction_time</name>
<type>Date</type>
<required>required</required>
<desc>业务发生的时间</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否调用成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.tag.apply</name>
<desc>创建优惠标签</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>标签结束时间</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>标签开始时间</desc>
</param>
<param>
<name>tag_desc</name>
<type>String</type>
<required>required</required>
<desc>标签用途描述</desc>
</param>
<param>
<name>tag_name</name>
<type>String</type>
<required>required</required>
<desc>标签名称。
注意在UMP中使用新人群标签top变成大写的“NEW_” 如：老标签是top1234，新标签是NEW_1234 。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否设置成功</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠标签ID</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.tag.find</name>
<desc>查询用户创建的所有标签</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<max_length>10</max_length>
<desc>当前页码&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示个数&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>optional</required>
<desc>标签ID</desc>
</param>
<param>
<name>tag_name</name>
<type>String</type>
<required>optional</required>
<desc>标签名称，查询时可选项</desc>
</param>
</request>
<response>
<param>
<name>query_result</name>
<type>PromotionTagQuery</type>
<level>Object</level>
<desc>查询结果类型</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.tag.removetag</name>
<desc>用于删除标签定义，但是要确保目前该标签没有人群在使用。</desc>
<request>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>需要删除的标签id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>删除操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.taguser.judge</name>
<desc>查询用户是否有标签</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>has_tag</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否有标签</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>服务调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.taguser.remove</name>
<desc>给用户载体去标</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>打标结果是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.taguser.save</name>
<desc>给用户载体打标</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>打标结果是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.add</name>
<desc>此接口用于新增一个酒店，酒店的发布者是当前会话的用户。 
该接口发出的是一个酒店申请，需要淘宝小二审核。</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>required</required>
<max_length>120</max_length>
<desc>酒店地址。长度不能超过120&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
<param>
<name>city</name>
<type>Number</type>
<required>required</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时，输入对应国家的海外城市编码，可调用海外城市查询接口获取&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>required</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的海外国家编码值。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>decorate_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>装修年份。长度不能超过4。&lt;br /&gt; 支持最大长度为：4&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>50000</max_length>
<desc>酒店介绍。不超过25000个汉字&lt;br /&gt; 支持最大长度为：50000&lt;br /&gt; 支持的最大列表长度为：50000</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>required</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>level</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>酒店级别。可选值：A,B,C,D,E,F。代表客栈公寓、经济连锁、二星级/以下、三星级/舒适、四星级/高档、五星级/豪华&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>酒店名称。不能超过60&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>opening_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>开业年份。长度不能超过4。&lt;br /&gt; 支持最大长度为：4&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>orientation</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>酒店定位。可选值：T,B。代表旅游度假、商务出行&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>酒店图片。最大长度:500K。支持的文件类型：gif,jpg,png&lt;br /&gt; 支持的文件类型为：jpg,png,gif&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>required</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时默认为0&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>rooms</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>房间数。长度不能超过4。&lt;br /&gt; 支持最大值为：9999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>交通距离与设施服务。JSON格式。cityCenterDistance、railwayDistance、airportDistance分别代表距离市中心、距离火车站、距离机场公里数，为不超过3位正整数，默认-1代表无数据。 
其他key值true代表有此服务，false代表没有。 
parking：停车场，airportShuttle：机场接送，rentCar：租车，meetingRoom：会议室，businessCenter：商务中心，swimmingPool：游泳池，fitnessClub：健身中心，laundry：洗衣服务，morningCall：叫早服务，bankCard：接受银行卡，creditCard：接受信用卡，chineseRestaurant：中餐厅，westernRestaurant：西餐厅，cafe：咖啡厅，bar：酒吧，ktv：KTV。</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>接入卖家数据主键&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>storeys</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>楼层数。长度不能超过4。&lt;br /&gt; 支持最大值为：9999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>tel</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>酒店电话。格式：国家代码（最长6位）#区号（最长4位）#电话（最长20位）。国家代码提示：中国大陆0086、香港00852、澳门00853、台湾00886&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.city.get</name>
<desc>根据国家编码查询该国家下的城市</desc>
<request>
<param>
<name>country</name>
<type>String</type>
<required>required</required>
<desc>国家编码</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.get</name>
<desc>此接口用于查询一个酒店，根据传入的酒店hid查询酒店信息。</desc>
<request>
<param>
<name>check_audit</name>
<type>Boolean</type>
<required>optional</required>
<desc>true表示查询酒店审核状态，false表示查询已审核通过酒店详细信息</desc>
</param>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>要查询的酒店id。必须为数字</desc>
</param>
<param>
<name>need_room_type</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该酒店的房型列表。可选值：true，false。</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.image.upload</name>
<desc>酒店图片上传</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>酒店id&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>上传的图片&lt;br /&gt; 支持的文件类型为：jpg,png,gif&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
</request>
<response>
<param>
<name>hotel_image</name>
<type>HotelImage</type>
<level>Object</level>
<desc>酒店图片</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.match.feedback</name>
<desc>用于回传hotel匹配结果(该接口即将废除请勿使用)</desc>
<request>
<param>
<name>haid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>需进行匹配的酒店id&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>hid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>匹配命中的酒店id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>match_result</name>
<type>Number</type>
<required>required</required>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>匹配结果 0:未匹配，1:匹配&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>succ</name>
<type>Boolean</type>
<level>Basic</level>
<desc>结果回传是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.name.get</name>
<desc>此接口用于查询一个酒店，根据传入的酒店名称/别名查询酒店信息。</desc>
<request>
<param>
<name>city</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的海外国家编码值，是必填项。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>required</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>酒店全部名称/别名。不能超过60字节&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.face.check</name>
<desc>此接口用户到店支付（前台面付）卖家处理订单的入住情况，包括核实买家已入住和核实买家未入住</desc>
<request>
<param>
<name>checked</name>
<type>Boolean</type>
<required>required</required>
<desc>核实已入住或者未入住，true：已入住，false：未入住</desc>
</param>
<param>
<name>checkin_date</name>
<type>Date</type>
<required>optional</required>
<desc>实际入住时间</desc>
</param>
<param>
<name>checkout_date</name>
<type>Date</type>
<required>optional</required>
<desc>实际离店时间</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>酒店订单id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>处理结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.face.deal</name>
<desc>该接口用于卖家确认到店支付订单或者取消订单。</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>酒店订单oid</desc>
</param>
<param>
<name>oper_type</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>操作类型，1：确认预订，2：取消订单&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>reason_text</name>
<type>String</type>
<required>optional</required>
<max_length>500</max_length>
<desc>取消订单时的取消原因备注信息&lt;br /&gt; 支持最大长度为：500&lt;br /&gt; 支持的最大列表长度为：500</desc>
</param>
<param>
<name>reason_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>取消订单时的取消原因，可选值：1,2,3,4； 
1：无房，2：价格变动，3：买家原因，4：其它原因&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>处理结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.get</name>
<desc>此接口用于查询一个酒店订单，根据传入的订单号查询订单信息。</desc>
<request>
<param>
<name>need_guest</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该订单的入住人列表。可选值：true，false。</desc>
</param>
<param>
<name>need_message</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否显示买家留言，可选值true、false</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>special</required>
<desc>酒店订单oid，必须为数字。oid，tid必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为oid，tid。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>special</required>
<desc>淘宝订单tid，必须为数字。oid，tid必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为oid，tid。</desc>
</param>
</request>
<response>
<param>
<name>hotel_order</name>
<type>HotelOrder</type>
<level>Object</level>
<desc>订单结构，是否返回入住人列表根据参数决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.orders.search</name>
<desc>此接口用于查询多个酒店订单，根据传入的查询条件查询订单信息。</desc>
<request>
<param>
<name>checkin_date_end</name>
<type>Date</type>
<required>optional</required>
<desc>入住时间查询结束时间，格式为：yyyy-MM-dd。不能早于checkin_date_start，间隔不能大于30</desc>
</param>
<param>
<name>checkin_date_start</name>
<type>Date</type>
<required>optional</required>
<desc>入住时间查询起始时间，格式为：yyyy-MM-dd</desc>
</param>
<param>
<name>checkout_date_end</name>
<type>Date</type>
<required>optional</required>
<desc>离店时间查询结束时间，格式为：yyyy-MM-dd。不能早于checkout_date_start，间隔不能大于30</desc>
</param>
<param>
<name>checkout_date_start</name>
<type>Date</type>
<required>optional</required>
<desc>离店时间查询起始时间，格式为：yyyy-MM-dd</desc>
</param>
<param>
<name>created_end</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间查询结束时间，格式为：yyyy-MM-dd。不能早于created_start，间隔不能大于30</desc>
</param>
<param>
<name>created_start</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间查询起始时间，格式为：yyyy-MM-dd</desc>
</param>
<param>
<name>gids</name>
<type>String</type>
<required>optional</required>
<desc>商品gid列表，多个gid用英文逗号隔开，一次不超过5个</desc>
</param>
<param>
<name>hids</name>
<type>String</type>
<required>optional</required>
<desc>酒店hid列表，多个hid用英文逗号隔开，一次不超过5个</desc>
</param>
<param>
<name>need_guest</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该订单的入住人列表。可选值：true，false。</desc>
</param>
<param>
<name>need_message</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否显示买家留言，可选值true、false</desc>
</param>
<param>
<name>oids</name>
<type>String</type>
<required>optional</required>
<desc>酒店订单oids列表，多个oid用英文逗号隔开，一次不超过20个。oids，tids，hids，rids，gids，（checkin_date_start，checkin_date_end），（checkout_date_start，checkout_date_end），（created_start，created_end）必须传入一项，括号表示需同时存在才做为查询条件。 
oids，tids，hids，rids，gids同时出现时，优先级按此顺序由高到低只取一项。其他同时出现时，并列使用。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。页面大小为20</desc>
</param>
<param>
<name>rids</name>
<type>String</type>
<required>optional</required>
<desc>房型rid列表，多个rid用英文逗号隔开，一次不超过5个</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>订单状态。A：等待买家付款。B：买家已付款待卖家发货。C：卖家已发货待买家确认。D：交易成功。E：交易关闭&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>tids</name>
<type>String</type>
<required>optional</required>
<desc>淘宝订单tid列表，多个tid用英文逗号隔开，一次不超过20个。</desc>
</param>
</request>
<response>
<param>
<name>hotel_orders</name>
<type>HotelOrder</type>
<level>Object Array</level>
<desc>多个订单结构，是否返回入住人列表根据参数决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.add</name>
<desc>此接口用于发布一个集市酒店商品，商品的发布者是当前会话的用户。如果该酒店、该房型、该用户所对应的商品在淘宝集市酒店系统中已经存在，则会返回错误提示。</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>面积。可选值：A,B,C,D。分别代表： 
A：15平米以下，B：16－30平米，C：31－50平米，D：50平米以上&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>bbn</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>宽带服务。A,B,C,D。分别代表： 
A：无宽带，B：免费宽带，C：收费宽带，D：部分收费宽带&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>bed_type</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>床型。可选值：A,B,C,D,E,F,G,H,I。分别代表：A：单人床，B：大床，C：双床，D：双床/大床，E：子母床，F：上下床，G：圆形床，H：多床，I：其他床型&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>breakfast</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>早餐。A,B,C,D,E。分别代表： 
A：无早，B：单早，C：双早，D：三早，E：多早&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>deposit</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>订金。0～99999900的正整数。在payment_type为订金时必须输入，存储的单位是分。不能带角分。&lt;br /&gt; 支持最大值为：99999900&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>50000</max_length>
<desc>商品描述。不能超过25000个汉字（50000个字符）。&lt;br /&gt; 支持最大长度为：50000&lt;br /&gt; 支持的最大列表长度为：50000</desc>
</param>
<param>
<name>fee</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>手续费。0～99999900的正整数。在payment_type为手续费或手续费/间夜时必须输入，存储的单位是分。不能带角分。&lt;br /&gt; 支持最大值为：99999900&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>guide</name>
<type>String</type>
<required>optional</required>
<max_length>300</max_length>
<desc>购买须知。不能超过300个字。&lt;br /&gt; 支持最大长度为：300&lt;br /&gt; 支持的最大列表长度为：300</desc>
</param>
<param>
<name>has_receipt</name>
<type>Boolean</type>
<required>optional</required>
<desc>酒店商品是否提供发票</desc>
</param>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>酒店id。必须为数字。</desc>
</param>
<param>
<name>multi_room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>为到店支付卖家特殊使用，代表多种支付类型的房态。room_quotas可选，如果有值，也会处理。</desc>
</param>
<param>
<name>payment_type</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>支付类型。可选值：A,B,C,D,E。分别代表： 
A：全额支付，B：手续费，C：订金，D：手续费/间夜，E：前台面付&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>酒店商品图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。发布的时候只能发布一张图片。如需再发图片，需要调用商品图片上传接口，1个商品最多5张图片。&lt;br /&gt; 支持的文件类型为：jpg,png,gif&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>price_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>价格类型。可选值：A,B。分别代表：A：参考预订价，B实时预订价 。未选该参数默认为参考预订价。选择实时预订价的情况下，支付类型必须选择为A(全额支付)&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>receipt_info</name>
<type>String</type>
<required>optional</required>
<desc>发票说明，不能超过100个汉字,200个字符。</desc>
</param>
<param>
<name>receipt_other_type_desc</name>
<type>String</type>
<required>optional</required>
<desc>发票类型为其他时的发票描述,不能超过30个汉字，60个字符。</desc>
</param>
<param>
<name>receipt_type</name>
<type>String</type>
<required>optional</required>
<desc>发票类型。A,B。分别代表： A:酒店住宿发票,B:其他</desc>
</param>
<param>
<name>refund_policy_info</name>
<type>String</type>
<required>optional</required>
<desc>1. 全额支付类型必填 
2. t代表类别(1表示任意退;2表示不能退;3表示阶梯退)，p代表退款规则（数组）， d代表天数，r代表扣除手续费比率。示例代表的意思就是"阶梯退:提前3天内退订，收取订单总额10%的违约金;提前2天内退订，收取订单总额20%的违约金，提前1天内退订，收取订单总额30%的违约金"。 
3. 任意退、不能退不能指定退款规则;阶梯退不能没有退款规则;阶梯退规则最多10条,且每条规则天数、费率不能相同;阶梯退遵循天数越短,违约金越大的业务规则;天数需为整数,且90&gt;天数&gt;=0;费率需为整数且100&lt;=费率&lt;=0;阶梯退规则只有一条时,费率不能设置为100%;阶梯退规则只有一条时,不能设定0天收取0%;</desc>
</param>
<param>
<name>rid</name>
<type>Number</type>
<required>required</required>
<desc>房型id。必须为数字。</desc>
</param>
<param>
<name>room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>房态信息。可以传今天开始90天内的房态信息。日期必须连续。JSON格式传递。 
date：代表房态日期，格式为YYYY-MM-DD， 
price：代表当天房价，0～99999999，存储的单位是分， 
num：代表当天可售间数，0～999。 
如： 
[{"date":2011-01-28,"price":10000, "num":10},{"date":2011-01-29,"price":12000,"num":10}]</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>设施服务。JSON格式。 
value值true有此服务，false没有。 
bar：吧台，catv：有线电视，ddd：国内长途电话，idd：国际长途电话，toilet：独立卫生间，pubtoliet：公共卫生间。 
如： 
{"bar":false,"catv":false,"ddd":false,"idd":false,"pubtoilet":false,"toilet":false}</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>接入卖家数据主键&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>size</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>床宽。可选值：A,B,C,D,E,F,G,H。分别代表：A：1米及以下，B：1.1米，C：1.2米，D：1.35米，E：1.5米，F：1.8米，G：2米，H：2.2米及以上&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>storey</name>
<type>String</type>
<required>optional</required>
<max_length>8</max_length>
<desc>楼层。长度不超过8&lt;br /&gt; 支持最大长度为：8&lt;br /&gt; 支持的最大列表长度为：8</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>90</max_length>
<desc>酒店商品名称。不能超过60字节&lt;br /&gt; 支持最大长度为：90&lt;br /&gt; 支持的最大列表长度为：90</desc>
</param>
</request>
<response>
<param>
<name>room</name>
<type>Room</type>
<level>Object</level>
<desc>商品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.get</name>
<desc>此接口用于查询一个商品，根据传入的gid查询商品信息。卖家只能查询自己的商品。</desc>
<request>
<param>
<name>gid</name>
<type>Number</type>
<required>special</required>
<desc>酒店房间商品gid。必须为数字。gid和item_id至少要传一个。</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>special</required>
<desc>酒店房间商品item_id。必须为数字。item_id和gid至少要传一个。</desc>
</param>
<param>
<name>need_hotel</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的酒店信息。可选值：true，false。</desc>
</param>
<param>
<name>need_room_desc</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的宝贝描述。可选值：true，false。</desc>
</param>
<param>
<name>need_room_quotas</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房态列表。可选值：true，false。</desc>
</param>
<param>
<name>need_room_type</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房型信息。可选值：true，false。</desc>
</param>
</request>
<response>
<param>
<name>room</name>
<type>Room</type>
<level>Object</level>
<desc>商品结构。是否返回酒店信息、房型信息、房态列表、宝贝描述根据参数决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.img.delete</name>
<desc>此接口用于为商品删除商品图片。</desc>
<request>
<param>
<name>gid</name>
<type>Number</type>
<required>required</required>
<desc>酒店房间商品gid。必须为数字。</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<desc>图片序号，可选值：1，2，3，4，5。 
如果原图片个数小于等于1，则报错，不能删除图片。 
如果原图片个数小于待删除的图片序号，则报错，图片序号错误。&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
</request>
<response>
<param>
<name>room_image</name>
<type>RoomImage</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.img.upload</name>
<desc>此接口用于为商品上传商品图片。</desc>
<request>
<param>
<name>gid</name>
<type>Number</type>
<required>required</required>
<desc>酒店房间商品gid。必须为数字。</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>酒店商品图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。 
如果原图片少于5张，若没传序号或序号大于原图片个数，则在原图片最后添加，否则按序号插入到原图片中去，自动后移。 
如果原图片大于5张，若没传序号，则替换最后一张图片，否则在序号位置插入，图片向后移，最后一张被删除。&lt;br /&gt; 支持的文件类型为：jpg,png,gif&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<max_length>1</max_length>
<desc>图片序号，可选值：1，2，3，4，5&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
</request>
<response>
<param>
<name>room_image</name>
<type>RoomImage</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.update</name>
<desc>此接口用于更新一个集市酒店商品，根据传入的gid更新商品信息，该商品必须为对应的发布者才能执行更新操作。如果对应的商品在淘宝集市酒店系统中不存在，则会返回错误提示。</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>面积。可选值：A,B,C,D。分别代表： 
A：15平米以下，B：16－30平米，C：31－50平米，D：50平米以上&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>bbn</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>宽带服务。A,B,C,D。分别代表： 
A：无宽带，B：免费宽带，C：收费宽带，D：部分收费宽带&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>bed_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>床型。可选值：A,B,C,D,E,F,G,H,I。分别代表：A：单人床，B：大床，C：双床，D：双床/大床，E：子母床，F：上下床，G：圆形床，H：多床，I：其他床型&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>breakfast</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>早餐。A,B,C,D,E。分别代表： 
A：无早，B：单早，C：双早，D：三早，E：多早&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>deposit</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>订金。0～99999900的正整数。在payment_type为订金时必须输入，存储的单位是分。不能带角分。&lt;br /&gt; 支持最大值为：99999900&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>50000</max_length>
<desc>商品描述。不能超过25000个汉字（50000个字符）。&lt;br /&gt; 支持最大长度为：50000&lt;br /&gt; 支持的最大列表长度为：50000</desc>
</param>
<param>
<name>fee</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>手续费。0～99999900的正整数。在payment_type为手续费或手续费/间夜时必须输入，存储的单位是分。不能带角分。&lt;br /&gt; 支持最大值为：99999900&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>gid</name>
<type>Number</type>
<required>required</required>
<desc>酒店房间商品gid。必须为数字。</desc>
</param>
<param>
<name>guide</name>
<type>String</type>
<required>optional</required>
<max_length>300</max_length>
<desc>购买须知。不能超过300个字。&lt;br /&gt; 支持最大长度为：300&lt;br /&gt; 支持的最大列表长度为：300</desc>
</param>
<param>
<name>has_receipt</name>
<type>Boolean</type>
<required>optional</required>
<desc>酒店商品是否提供发票</desc>
</param>
<param>
<name>multi_room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>为到店支付卖家特殊使用，代表多种支付类型的房态。room_quotas可选，如果有值，也会处理。</desc>
</param>
<param>
<name>payment_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>支付类型。可选值：A,B,C,D,E。分别代表： 
A：全额支付，B：手续费，C：订金，D：手续费/间夜，E：前台面付&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>酒店商品图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。更新的时候只能更新一张图片，此图片覆盖原有所有图片。如果不传则使用原有所有图片。 
如需再发图片，需要调用商品图片上传接口，1个商品最多5张图片。&lt;br /&gt; 支持的文件类型为：jpg,png,gif&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>price_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>价格类型。可选值：A,B。分别代表：A：参考预订价，B实时预订价 。未选该参数默认为参考预订价。选择实时预订价的情况下，支付类型必须选择为A(全额支付)&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>receipt_info</name>
<type>String</type>
<required>optional</required>
<desc>发票说明，不能超过100个汉字,200个字符。</desc>
</param>
<param>
<name>receipt_other_type_desc</name>
<type>String</type>
<required>optional</required>
<desc>发票类型为其他时的发票描述,不能超过30个汉字，60个字符。</desc>
</param>
<param>
<name>receipt_type</name>
<type>String</type>
<required>optional</required>
<desc>发票类型。A,B。分别代表： A:酒店住宿发票,B:其他</desc>
</param>
<param>
<name>refund_policy_info</name>
<type>String</type>
<required>optional</required>
<desc>1. 全额支付类型必填 2. t代表类别(1表示任意退;2表示不能退;3表示阶梯退)，p代表退款规则（数组）， d代表天数，r代表扣除手续费比率。示例代表的意思就是"阶梯退:提前3天内退订，收取订单总额10%的违约金;提前2天内退订，收取订单总额20%的违约金，提前1天内退订，收取订单总额30%的违约金"。 3. 任意退、不能退不能指定退款规则;阶梯退不能没有退款规则;阶梯退规则最多10条,且每条规则天数、费率不能相同;阶梯退遵循天数越短,违约金越大的业务规则;天数需为整数,且90&gt;天数&gt;=0;费率需为整数且100&lt;=费率&lt;=0;阶梯退规则只有一条时,费率不能设置为100%;阶梯退规则只有一条时,不能设定0天收取0%;</desc>
</param>
<param>
<name>room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>房态信息。可以传今天开始90天内的房态信息。日期必须连续。JSON格式传递。 
date：代表房态日期，格式为YYYY-MM-DD， 
price：代表当天房价，0～99999999，存储的单位是分, 
num：代表当天可售间数，0～999。 
如： 
[{"date":2011-01-28,"price":10000, "num":10},{"date":2011-01-29,"price":12000,"num":10}]</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>设施服务。JSON格式。 
value值true有此服务，false没有。 
bar：吧台，catv：有线电视，ddd：国内长途电话，idd：国际长途电话，toilet：独立卫生间，pubtoliet：公共卫生间。 
如： 
{"bar":false,"catv":false,"ddd":false,"idd":false,"pubtoilet":false,"toilet":false}</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<desc>商品的site_param</desc>
</param>
<param>
<name>size</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>床宽。可选值：A,B,C,D,E,F,G,H。分别代表：A：1米及以下，B：1.1米，C：1.2米，D：1.35米，E：1.5米，F：1.8米，G：2米，H：2.2米及以上&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<max_length>1</max_length>
<desc>状态。可选值1，2，3。1：上架。2：下架。3：删除。传入相应状态代表去执行相应的操作。&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>storey</name>
<type>String</type>
<required>optional</required>
<max_length>8</max_length>
<desc>楼层。长度不超过8&lt;br /&gt; 支持最大长度为：8&lt;br /&gt; 支持的最大列表长度为：8</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>90</max_length>
<desc>酒店商品名称。不能超过60字节&lt;br /&gt; 支持最大长度为：90&lt;br /&gt; 支持的最大列表长度为：90</desc>
</param>
</request>
<response>
<param>
<name>room</name>
<type>Room</type>
<level>Object</level>
<desc>商品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.rooms.search</name>
<desc>此接口用于查询多个酒店商品，根据传入的参数查询商品信息。卖家只能查询自己的商品。</desc>
<request>
<param>
<name>gids</name>
<type>String</type>
<required>special</required>
<desc>酒店房间商品gid列表，多个gid用英文逗号隔开，一次不超过20个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
<param>
<name>hids</name>
<type>String</type>
<required>special</required>
<desc>酒店hid列表，多个hid用英文逗号隔开，一次不超过5个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
<param>
<name>item_ids</name>
<type>String</type>
<required>special</required>
<desc>酒店房间商品item_id列表，多个item_id用英文逗号隔开，一次不超过20个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。当item_ids参数值为-1，gids项不传值时，会返回卖家所有商品列表</desc>
</param>
<param>
<name>need_hotel</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的酒店信息。可选值：true，false。</desc>
</param>
<param>
<name>need_room_desc</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的宝贝描述。可选值：true，false。</desc>
</param>
<param>
<name>need_room_quotas</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房态列表。可选值：true，false。</desc>
</param>
<param>
<name>need_room_type</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房型信息。可选值：true，false。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。页面大小为20</desc>
</param>
<param>
<name>rids</name>
<type>String</type>
<required>special</required>
<desc>房型rid列表，多个rid用英文逗号隔开，一次不超过20个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
</request>
<response>
<param>
<name>rooms</name>
<type>Room</type>
<level>Object Array</level>
<desc>多个商品结构。是否返回酒店信息、房型信息、房态列表、宝贝描述根据参数决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.rooms.update</name>
<desc>此接口用于更新多个集市酒店商品房态信息，根据传入的gids更新商品信息，该商品必须为对应的发布者才能执行更新操作。如果对应的商品在淘宝集市酒店系统中不存在，则会返回错误提示。是全量更新，非增量，会把之前的房态进行覆盖。</desc>
<request>
<param>
<name>gid_room_quota_map</name>
<type>String</type>
<required>optional</required>
<desc>多商品房态信息。json encode。每个商品房态参考单商品更新中的room_quota字段。反序列化后入：array(( 'gid'=&gt;1, 'roomQuota'=&gt;array(('date'=&gt;'2011-01-29', 'price'=&gt;100, 'num'=&gt;1),('date'=&gt;'2011-01-30', 'price'=&gt;100, 'num'=&gt;1)),( 'gid'=&gt;2, 'roomQuota'=&gt;array(('date'=&gt;'2011-01-29', 'price'=&gt;100, 'num'=&gt;1),('date'=&gt;'2011-01-30', 'price'=&gt;100, 'num'=&gt;1)))</desc>
</param>
<param>
<name>multi_room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>为到店支付卖家特殊使用，可传入多种支付类型的房态信息。 
该参数有值时，忽略gid_room_quota_map参数； 
该参数无值时，使用gid_room_quota_map参数</desc>
</param>
</request>
<response>
<param>
<name>gids</name>
<type>String</type>
<level>Basic Array</level>
<desc>成功的gid list</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.sold.hotels.increment.get</name>
<desc>1. 此接口用于查询该会话用户作为酒店发布者发布的酒店被审核通过的增量酒店信息。 
2. 查询提交的起始时间至今的增量酒店记录：start_modified：2011-7-1 16:00:00 
3. 返回数据结果为发布酒店时间的正序排列</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>【不推荐使用，现在总是返回从修改开始时间到目前为止的所有记录，与修改结束时间不再相关】查询修改结束时间，必须大于修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小，取值范围1-100，默认大小20</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>【不推荐使用，现在返回结果总会包含总记录数和是否存在下一页】是否使用has_next的分页方式，如果指定true，则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的字段，效率比总记录数高</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>hotels</name>
<type>Hotel</type>
<level>Object Array</level>
<desc>多个酒店结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.sold.orders.increment.get</name>
<desc>1. 搜索当前会话用户作为卖家已卖出的增量交易数据  
2. 只能查询时间跨度为一天的增量交易记录：start_modified：2011-7-1 16:00:00 end_modified： 2011-7-2 15:59:59（注意不能写成16:00:00）  
3. 返回数据结果为创建订单时间的倒序</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss。</desc>
</param>
<param>
<name>need_guest</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该订单的入住人列表。可选值：true，false。</desc>
</param>
<param>
<name>need_message</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否返回买家留言，可选值true、false</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小，取值范围1-100，默认大小20。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。可选值：A：等待买家付款。B：买家已付款待卖家发货。C：卖家已发货待买家确认。D：交易成功。E：交易关闭&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否使用has_next的分页方式，如果指定true，则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的字段，效率比总记录数高</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>hotel_orders</name>
<type>HotelOrder</type>
<level>Object Array</level>
<desc>多个订单结构，是否返回入住人列表根据参数决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.sold.types.increment.get</name>
<desc>1. 此接口用于查询该会话用户作为房型发布者发布的房型的审核情况。 
2. 查询提交的起始时间至今的增量房型记录：start_modified：2011-7-1 16:00:00 
3. 返回数据结果为发布房型时间正序排列</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>【不推荐使用，现在总是返回从修改开始时间到目前为止的所有记录，与修改结束时间不再相关】查询修改结束时间，必须大于修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小，取值范围1-100，默认大小20。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>【不推荐使用，现在返回结果总会包含总记录数和是否存在下一页】是否使用has_next的分页方式，如果指定true，则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的字段，效率比总记录数高</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>room_types</name>
<type>RoomType</type>
<level>Object Array</level>
<desc>多个房型结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.type.add</name>
<desc>此接口用于发布一个房型，房型的发布者是当前会话的用户。如果该房型在淘宝集市酒店下已经存在，则会返回错误提示。 
该接口发布的是一个新增房型申请，需要淘宝小二审核</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>酒店id。必须为数字&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>房型名称。长度不能超过30&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>接入卖家数据主键,格式为“接入方酒店id-接入方房型id”&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>room_type</name>
<type>RoomType</type>
<level>Object</level>
<desc>房型结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.type.name.get</name>
<desc>此接口用于查询一个房型，根据传入的酒店hid，房型名称/别名查询房型信息。</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>要查询的酒店id。必须为数字</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>房型全部名称/别名。不能超过60字节&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
</request>
<response>
<param>
<name>room_type</name>
<type>RoomType</type>
<level>Object</level>
<desc>房型结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.update</name>
<desc>此接口用于更新一个酒店的信息，根据用户传入的hid更新酒店数据。如果该酒店在淘宝集市酒店不存在，则会返回错误提示。 
该接口发出的是一个更新酒店信息的申请，需要淘宝小二审核。</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>optional</required>
<max_length>120</max_length>
<desc>酒店地址。长度不能超过120&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
<param>
<name>city</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时，输入对应国家的海外城市编码，可调用海外城市查询接口获取&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>domestic为true时，固定China； 
domestic为false时，传海外国家编码。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>decorate_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>装修时间。长度不能超过4。&lt;br /&gt; 支持最大长度为：4&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>50000</max_length>
<desc>酒店介绍。不超过25000个汉字&lt;br /&gt; 支持最大长度为：50000&lt;br /&gt; 支持的最大列表长度为：50000</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>酒店id。必须为数字。</desc>
</param>
<param>
<name>level</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>酒店级别。可选值：A,B,C,D,E,F。代表客栈公寓、经济连锁、二星级/以下、三星级/舒适、四星级/高档、五星级/豪华&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>酒店名称。不能超过60字节&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>opening_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>开业时间。长度不能超过4。&lt;br /&gt; 支持最大长度为：4&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>orientation</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>酒店定位。可选值：T,B。代表旅游度假、商务出行&lt;br /&gt; 支持最大长度为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>酒店图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。 
图片没有传，则代表不更新图片，使用原来的图片&lt;br /&gt; 支持的文件类型为：jpg,png,gif&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时默认为0&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>rooms</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>房间数。长度不能超过4。&lt;br /&gt; 支持最大值为：9999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>交通距离与设施服务。JSON格式。cityCenterDistance、railwayDistance、airportDistance分别代表距离市中心、距离火车站、距离机场公里数，为不超过3位正整数，默认-1代表无数据。 
其他key值true代表有此服务，false代表没有。 
parking：停车场，airportShuttle：机场接送，rentCar：租车，meetingRoom：会议室，businessCenter：商务中心，swimmingPool：游泳池，fitnessClub：健身中心，laundry：洗衣服务，morningCall：叫早服务，bankCard：接受银行卡，creditCard：接受信用卡，chineseRestaurant：中餐厅，westernRestaurant：西餐厅，cafe：咖啡厅，bar：酒吧，ktv：KTV。 
如： 
{"airportShuttle":true,"parking":false,"fitnessClub":false,"chineseRestaurant":false,"rentCar":false,"laundry":false,"bankCard":false,"cityCenterDistance":-1,"creditCard":false,"westernRestaurant":false,"ktv":false,"railwayDistance":-1,"swimmingPool":false,"cafe":false,"businessCenter":false,"morningCall":false,"bar":false,"meetingRoom":false,"airportDistance":-1}</desc>
</param>
<param>
<name>storeys</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>楼层数。长度不能超过4。&lt;br /&gt; 支持最大值为：9999&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：4</desc>
</param>
<param>
<name>tel</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>酒店电话。格式：国家代码（最长6位）#区号（最长4位）#电话（最长20位）。国家代码提示：中国大陆0086、香港00852、澳门00853、台湾00886&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotels.search</name>
<desc>此接口用于查询多个酒店，根据传入的参数查询酒店信息。</desc>
<request>
<param>
<name>city</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的海外国家编码值，是必填项。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>required</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>酒店名称。不能超过60字节&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。页面大小为20</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
</request>
<response>
<param>
<name>hotels</name>
<type>Hotel</type>
<level>Object Array</level>
<desc>多个酒店结构&lt;br&gt;&lt;/br&gt;&lt;font color = red&gt;不返回房型信息，需要查看房型信息，请调用taobao.hotel.get&lt;/font&gt;</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.catitemids.get</name>
<desc>根据类目获取商品列表</desc>
<request>
<param>
<name>child_categoryid</name>
<type>Number</type>
<required>optional</required>
<desc>商品子类目ID。男装:100001,女装:100002。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>查询本地生活团商品时需要用city进行过滤，如果city是all的话，则查询所有城市的本地生活团商品。如果为空，则查询普通商品</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取商品信息页序号，代表第几页。page_no=0代表第一页。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取商品列表的数量。最大是100个，如果超出则报41错。&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>parent_categoryid</name>
<type>Number</type>
<required>required</required>
<desc>商品父类目ID。服装:100000,保险:1000000。</desc>
</param>
<param>
<name>platform_id</name>
<type>Number</type>
<required>optional</required>
<desc>平台ID。搜狗:1008,聚划算:1001,商城:1002,无线WAP:1007,支付宝:1003,淘宝天下:1004,嗨淘:1006</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>optional</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
</request>
<response>
<param>
<name>item_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回的商品ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.cities.get</name>
<desc>获取今日有生活服务商品的城市列表</desc>
<response>
<param>
<name>cities</name>
<type>String</type>
<level>Basic Array</level>
<desc>返回城市名称列表类似 "上海","成都"</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.citygroup.get</name>
<desc>根据城市获取该城市当天的生活服务类商品</desc>
<request>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>需要获取生活服务商品的城市名称（中文）</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用“,”分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
</request>
<response>
<param>
<name>group</name>
<type>GroupData</type>
<level>Object</level>
<desc>生活服务团信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.cityitems.get</name>
<desc>根据城市，获取对应的生活服务团商品接口</desc>
<request>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>需要获取生活服务商品的城市名称（中文）</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用","分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取商品信息页序号，代表第几页&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取商品列表的数量&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.group.assign</name>
<desc>根据终端类型，和终端的唯一标识，随机分配一个组</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用“,”分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>required</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
<param>
<name>uuid</name>
<type>String</type>
<required>required</required>
<desc>终端的唯一标识，web可以用cookie，手机使用手机号码等，确保唯一性即可，用于分配商品组</desc>
</param>
</request>
<response>
<param>
<name>group</name>
<type>GroupData</type>
<level>Object</level>
<desc>返回单个组信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.group.get</name>
<desc>获取单个聚划算组的信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用“,”分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<max_length>22</max_length>
<min_value>1</min_value>
<desc>聚划算组的编号&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：22</desc>
</param>
</request>
<response>
<param>
<name>group</name>
<type>GroupData</type>
<level>Object</level>
<desc>组信息的返回对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.groupids.get</name>
<desc>根据终端类型，分页获取组id列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取团信息页序号，代表第几页&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取团id列表的数量&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>required</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
</request>
<response>
<param>
<name>group_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>获得商品组id列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.itemids.get</name>
<desc>根据终端类型和平台ID，分页获取聚划算商品id列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取商品信息页序号，代表第几页&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取商品列表的数量&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>platform_id</name>
<type>Number</type>
<required>optional</required>
<desc>平台ID。搜狗:1008,聚划算:1001,商城:1002,无线WAP:1007,支付宝:1003,淘宝天下:1004,嗨淘:1006</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>optional</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
</request>
<response>
<param>
<name>item_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回的商品ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.items.get</name>
<desc>根据商品id列表获取商品列表，目前一次最多返回6条。传入的参数id列表超过6条也只返回前6条的商品</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用","分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>ids</name>
<type>Field List</type>
<required>required</required>
<desc>商品ID列表。id列表超过6条也只返回前6条的商品</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.todayitems.get</name>
<desc>根据终端类型，随机分配一个聚划算今天的商品列表</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用","分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>required</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
<param>
<name>uuid</name>
<type>String</type>
<required>required</required>
<desc>终端的唯一标识，web可以用cookie，手机使用手机号码等，确保唯一性即可，用于分配商品组</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grade.get</name>
<desc>卖家查询等级规则，包括店铺客户、普通会员、高级会员、VIP会员、至尊VIP会员四个等级的信息</desc>
<response>
<param>
<name>grade_promotions</name>
<type>GradePromotion</type>
<level>Object Array</level>
<desc>等级信息集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grade.set</name>
<desc>设置等级信息，可以设置层级等级，也可以单独设置一个等级。出于安全原因，折扣现最低只能设置到700即7折。</desc>
<request>
<param>
<name>amount</name>
<type>Number</type>
<required>optional</required>
<max_list_size>4</max_list_size>
<min_value>0</min_value>
<desc>只对设置的层级等级有效，必须要在amount和count参数中选择一个&lt;br&gt; 
amount参数的填写规范：升级到下一个级别的需要的交易额，单位为分,必须全部填写.例如10000,20000,30000，其中10000表示非会员升级到普通的所需的交易额，20000表示普通升级到高级所需的交易额，层级等级中最高等级的下一个等级默认为0。会员等级越高，所需交易额必须越高。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<required>optional</required>
<max_list_size>4</max_list_size>
<min_value>0</min_value>
<desc>只对设置的层级等级有效，必须要在amount和count参数中选择一个&lt;br&gt; 
count参数的填写规范： 
升级到下一个级别的需要的交易量,必须全部填写. 以逗号分隔,例如100,200,300，其中100表示非会员升级到普通会员交易量。层级等级中最高等级的下一个等级的交易量默认为0。会员等级越高，交易量必须越高。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount</name>
<type>Number</type>
<required>required</required>
<max_list_size>4</max_list_size>
<max_value>1000</max_value>
<min_value>700</min_value>
<desc>会员级别折扣率。会员等级越高，折扣必须越低。 
950即9.5折，888折即8.88折。出于安全原因，折扣现最低只能设置到700即7折。&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：700</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>required</required>
<max_list_size>4</max_list_size>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，用逗号分隔。买家会员级别0：店铺客户 1：普通会员 2 ：高级会员 3：VIP会员 4：至尊VIP&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>hierarchy</name>
<type>Boolean</type>
<required>required</required>
<max_list_size>4</max_list_size>
<desc>是否设置达到某一会员等级的交易量和交易额，必填。4个级别都需要设置，如入参为true,true,true,false时，表示设置达到高级会员、VIP会员的交易量或者交易额，不设置达到至尊会员的交易量和交易额</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true：成功 false：失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grademkt.member.add</name>
<desc>商家通过该接口吸纳线上店铺会员。</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>会员nick</desc>
</param>
<param>
<name>feather</name>
<type>String</type>
<required>required</required>
<desc>系统属性，json格式</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>required</required>
<desc>会员属性-json format 
生成方法见http://open.taobao.com/doc/detail.htm?id=101281</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grademkt.member.detail.create</name>
<desc>创建商品等级营销明细</desc>
<request>
<param>
<name>feather</name>
<type>String</type>
<required>required</required>
<desc>扩展字段</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>required</required>
<desc>创建营销详情，生成方法见http://open.taobao.com/doc/detail.htm?id=101281</desc>
</param>
</request>
<response>
<param>
<name>module</name>
<type>Boolean</type>
<level>Basic</level>
<desc>json格式</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grademkt.member.detail.delete</name>
<desc>删除商品等级营销明细</desc>
<request>
<param>
<name>feather</name>
<type>String</type>
<required>required</required>
<desc>扩展字段</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>required</required>
<desc>创建营销详情，生成方法见http://open.taobao.com/doc/detail.htm?id=101281</desc>
</param>
</request>
<response>
<param>
<name>module</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grademkt.member.detail.query</name>
<desc>商家通过该接口查询等级营销活动</desc>
<request>
<param>
<name>feather</name>
<type>String</type>
<required>required</required>
<desc>扩展字段</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>required</required>
<desc>创建营销详情，生成方法见http://open.taobao.com/doc/detail.htm?id=101281</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>String</type>
<level>Basic</level>
<desc>totalCount为记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grademkt.member.gradeactivity.init</name>
<desc>商家通过该接口设置等级活动</desc>
<request>
<param>
<name>feather</name>
<type>String</type>
<required>required</required>
<desc>扩展字段</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>optional</required>
<desc>活动名称，不传默认为“等级营销”</desc>
</param>
</request>
<response>
<param>
<name>module</name>
<type>Boolean</type>
<level>Basic</level>
<desc>json格式</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grademkt.member.query</name>
<desc>商家通过该接口查询线上店铺会员。</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>会员nick</desc>
</param>
<param>
<name>feather</name>
<type>String</type>
<required>required</required>
<desc>系统属性，json格式</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>required</required>
<desc>会员属性-json format 
生成方法见http://open.taobao.com/doc/detail.htm?id=101281</desc>
</param>
</request>
<response>
<param>
<name>module</name>
<type>String</type>
<level>Basic</level>
<desc>json格式</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.add</name>
<desc>卖家创建一个新的分组，接口返回一个创建成功的分组的id</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<max_length>15</max_length>
<desc>分组名称，每个卖家最多可以拥有100个分组&lt;br /&gt; 支持最大长度为：15&lt;br /&gt; 支持的最大列表长度为：15</desc>
</param>
</request>
<response>
<param>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增分组的id</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>添加分组是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.append</name>
<desc>将某分组下的所有会员添加到另一个分组,注：1.该操作为异步任务，建议先调用taobao.crm.grouptask.check 确保涉及分组上没有任务；2.若分组下某会员分组数超最大限额，则该会员不会被添加到新分组，同时不影响其余会员添加分组，接口调用依然返回成功。</desc>
<request>
<param>
<name>from_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>添加的来源分组&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>to_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>添加的目标分组&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务请求成功，添加任务是否完成通过taobao.crm.grouptask.check检测</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.delete</name>
<desc>将该分组下的所有会员移除出该组，同时删除该分组。注：删除分组为异步任务，必须先调用taobao.crm.grouptask.check 确保涉及属性上没有任务。</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>要删除的分组id&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务请求成功，是否执行完毕需要通过taobao.crm.grouptask.check检测</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.move</name>
<desc>将一个分组下的所有会员移动到另一个分组，会员从原分组中删除 
注：移动属性为异步任务建议先调用taobao.crm.grouptask.check 确保涉及属性上没有任务。</desc>
<request>
<param>
<name>from_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>需要移动的分组&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>to_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>目的分组&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务请求成功，是否执行完毕需要通过taobao.crm.grouptask.check检测</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.update</name>
<desc>修改一个已经存在的分组，接口返回分组的修改是否成功</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>分组的id&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>new_group_name</name>
<type>String</type>
<required>required</required>
<max_length>15</max_length>
<desc>新的分组名，分组名称不能包含|或者：&lt;br /&gt; 支持最大长度为：15&lt;br /&gt; 支持的最大列表长度为：15</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>分组修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.groups.get</name>
<desc>查询卖家的分组，返回查询到的分组列表，分页返回分组</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_length>3</max_length>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>显示第几页的分组，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页码为1&lt;br /&gt; 支持最大值为：1000000&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：3</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>3</max_length>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示的记录数，其最大值不能超过100条，最小值为1，默认20条&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：3</desc>
</param>
</request>
<response>
<param>
<name>groups</name>
<type>Group</type>
<level>Object Array</level>
<desc>查询到的当前卖家的当前页的会员</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grouptask.check</name>
<desc>检查一个分组上是否有异步任务,异步任务包括1.将一个分组下的所有用户添加到另外一个分组2.将一个分组下的所有用户移动到另外一个分组3.删除某个分组 
若分组上有任务则该属性不能被操作。</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<desc>分组id</desc>
</param>
</request>
<response>
<param>
<name>is_finished</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务是否完成，true表示完成</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.member.group.get</name>
<desc>获取买家身上的标签，不返回标签的总人数</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>会员Nick</desc>
</param>
</request>
<response>
<param>
<name>groups</name>
<type>Group</type>
<level>Object Array</level>
<desc>查询到的当前卖家的当前页的会员</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.membergrade.set</name>
<desc>设置会员等级</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>required</required>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>买家会员级别有四种1：普通会员。2：高级会员。 3VIP会员。 4：至尊VIP&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保存成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.memberinfo.update</name>
<desc>编辑会员的基本资料，接口返回会员信息修改是否成功</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>买家昵称&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>城市. 
请注意:从2014.4.15之后,省市将采用地区标准码,请通过物流API taobao.areas.get接口获取,参考:http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.nOOF9g&amp;path=cid:7-apiId:59.API对于老的省市代码兼容会逐步下线</desc>
</param>
<param>
<name>close_trade_amount</name>
<type>Number</type>
<required>optional</required>
<desc>交易关闭金额，单位：分</desc>
</param>
<param>
<name>close_trade_count</name>
<type>Number</type>
<required>optional</required>
<desc>交易关闭次数</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，1：普通客户，2：高级会员，3：高级会员 ，4：至尊vip 
 
只有正常会员才给予升级，对于status blacklist的会员升级无效&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>group_ids</name>
<type>String</type>
<required>optional</required>
<desc>分组的id集合字符串</desc>
</param>
<param>
<name>item_num</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝件数</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>optional</required>
<max_value>36</max_value>
<min_value>1</min_value>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区=26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35，约定36为清除Province设置. 
请注意:从2014.4.15之后,省市将采用地区标准码,请通过物流API taobao.areas.get接口获取,参考:http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.nOOF9g&amp;path=cid:7-apiId:59.API对于老的省市代码兼容会逐步下线.</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>用于描述会员的状态，normal表示正常，blacklist表示黑名单(不享受会员折扣).&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>trade_amount</name>
<type>Number</type>
<required>optional</required>
<desc>交易金额，单位：分</desc>
</param>
<param>
<name>trade_count</name>
<type>Number</type>
<required>optional</required>
<desc>交易笔数</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>会员信息修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.get</name>
<desc>查询卖家的会员，进行基本的查询，返回符合条件的会员列表</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<max_length>1000</max_length>
<desc>买家的昵称&lt;br /&gt; 支持最大长度为：1000&lt;br /&gt; 支持的最大列表长度为：1000</desc>
</param>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>显示第几页的会员，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页数为1，最大页数为1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>-1</min_value>
<desc>会员等级，0：店铺客户，1：普通会员，2：高级会员，3：VIP会员， 4：至尊VIP会员。如果不传入值则默认为全部等级。&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：-1&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>max_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最迟上次交易时间</desc>
</param>
<param>
<name>max_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易额，单位为元</desc>
</param>
<param>
<name>max_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易量&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>min_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最早上次交易时间</desc>
</param>
<param>
<name>min_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易额,单位为元</desc>
</param>
<param>
<name>min_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易量&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>表示每页显示的会员数量,page_size的最大值不能超过100条,最小值不能低于1，&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>members</name>
<type>BasicMember</type>
<level>Object Array</level>
<desc>根据一定条件查询到卖家的会员</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.group.batchadd</name>
<desc>为一批会员添加分组，接口返回添加是否成功,如至少有一个会员的分组添加成功，接口就返回成功，否则返回失败，如果当前会员已经拥有当前分组，则直接跳过</desc>
<request>
<param>
<name>buyer_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>会员的id（一次最多传入10个）&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>group_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>分组id&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>添加操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.groups.batchdelete</name>
<desc>批量删除多个会员的公共分组，接口返回删除是否成功，该接口只删除多个会员的公共分组，不是公共分组的，不进行删除。如果入参只输入一个会员，则表示删除该会员的某些分组。</desc>
<request>
<param>
<name>buyer_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>买家的Id集合&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>group_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>会员需要删除的分组&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>删除是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.increment.get</name>
<desc>增量获取会员列表，接口返回符合查询条件的所有会员。任何状态更改都会返回,最大允许100</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>显示第几页的会员，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页数为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>end_modify</name>
<type>Date</type>
<required>optional</required>
<desc>卖家修改会员信息的时间终点.如果不填写此字段,默认为当前时间.</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>-1</min_value>
<desc>会员等级，0：店铺客户，1：普通会员，2：高级会员，3：VIP会员， 4：至尊VIP会员&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：-1&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示的会员数，page_size的值不能超过100，最小值要大于1&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_modify</name>
<type>Date</type>
<required>optional</required>
<desc>卖家修改会员信息的时间起点.</desc>
</param>
</request>
<response>
<param>
<name>members</name>
<type>BasicMember</type>
<level>Object Array</level>
<desc>返回当前页的会员列表</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录的总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.search</name>
<desc>会员列表的高级查询，接口返回符合条件的会员列表.&lt;br&gt; 
注：建议获取09年以后的数据，09年之前的数据不是很完整</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<max_length>1000</max_length>
<desc>买家昵称&lt;br /&gt; 支持最大长度为：1000&lt;br /&gt; 支持的最大列表长度为：1000</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>城市. 
请注意:该字段从2014-4-23之后不再支持作为搜索条件检索.</desc>
</param>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>显示第几页的会员，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页数为1.最大1000页&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>-1</min_value>
<desc>会员等级，0：店铺客户，1：普通客户，2：高级会员，3：VIP会员, 4：至尊VIP会员&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：-1&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>group_id</name>
<type>Number</type>
<required>optional</required>
<max_length>19</max_length>
<desc>分组id&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>max_avg_price</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大平均客单价，单位为元. 
请注意:该字段从2014-4-23之后不再支持作为搜索条件检索.</desc>
</param>
<param>
<name>max_close_trade_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易关闭笔数. 
请注意:该字段从2014-4-23之后不再支持作为搜索条件检索.&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>max_item_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易宝贝件数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>max_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最迟上次交易时间</desc>
</param>
<param>
<name>max_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易额，单位为元</desc>
</param>
<param>
<name>max_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易量&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>min_avg_price</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最少平均客单价，单位为元. 
请注意:该字段从2014-4-23之后不再支持作为搜索条件检索.</desc>
</param>
<param>
<name>min_close_trade_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易关闭的笔数. 
请注意:该字段从2014-4-23之后不再支持作为搜索条件检索.&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>min_item_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易宝贝件数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>min_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最早上次交易时间</desc>
</param>
<param>
<name>min_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易额，单位为元</desc>
</param>
<param>
<name>min_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易量&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示的会员数量，page_size的最大值不能超过100，最小值不能小于1&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35. 
注:请注意:从2014.4.23之后,省市将采用地区标准码,请通过物流API taobao.areas.get接口获取,参考:http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.nOOF9g&amp;path=cid:7-apiId:59.API对于老的省市代码兼容会逐步下线.&lt;br /&gt; 支持最大值为：1000000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>relation_source</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>3</max_value>
<min_value>1</min_value>
<desc>关系来源，1交易成功，2未成交，3卖家手动吸纳&lt;br /&gt; 支持最大值为：3&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>members</name>
<type>CrmMember</type>
<level>Object Array</level>
<desc>根据一定条件查询的卖家会员</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录的总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.qn.labels.seller.get</name>
<desc>给千牛旺旺插件单独接口获取卖家设置的标签</desc>
<response>
<param>
<name>groups</name>
<type>Group</type>
<level>Object Array</level>
<desc>查询到的当前卖家的当前页的会员</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.shopvip.cancel</name>
<desc>此接口用于取消VIP优惠</desc>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.crm.equity.get</name>
<desc>获取天猫卖家设置的等级权益</desc>
<response>
<param>
<name>grade_equitys</name>
<type>GradeEquity</type>
<level>Object Array</level>
<desc>天猫卖家设置的等级权益</desc>
</param>
</response>
</api>
<api>
<name>tmall.crm.equity.set</name>
<desc>天猫卖家设置权益</desc>
<request>
<param>
<name>exclude_area</name>
<type>String</type>
<required>optional</required>
<max_list_size>4</max_list_size>
<desc>不免邮区域，只在包邮条件设置的时候生效。要和等级一一对应。包邮条件为false的时候不起作用。</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>required</required>
<max_list_size>4</max_list_size>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，用逗号分隔。买家会员级别0：店铺客户 1：普通会员 2 ：高级会员 3：VIP会员 4：至尊VIP&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>point</name>
<type>Number</type>
<required>optional</required>
<max_list_size>4</max_list_size>
<desc>返几倍天猫积分，可以不设置。如果设置则要和等级一一对应。不设置代表清空。</desc>
</param>
<param>
<name>postage</name>
<type>Boolean</type>
<required>optional</required>
<max_list_size>4</max_list_size>
<desc>是否包邮，可以不设置，如果设置则要和等级一一对应。不设置代表清空</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true：成功 false：失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.auction.rule.add</name>
<desc>商品规则添加</desc>
<request>
<param>
<name>day_end</name>
<type>Number</type>
<required>optional</required>
<desc>每天的结束时间 ， 格式：10000*hh+100*mm+ss</desc>
</param>
<param>
<name>day_start</name>
<type>Number</type>
<required>optional</required>
<desc>每天的开始时间， 格式：10000*hh+100*mm+ss</desc>
</param>
<param>
<name>features</name>
<type>String</type>
<required>optional</required>
<desc>扩展属性</desc>
</param>
<param>
<name>is_diandian</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是点点商品规则</desc>
</param>
<param>
<name>is_takeout</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是外卖商品规则</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>商户规则名称</desc>
</param>
<param>
<name>rule_end</name>
<type>Date</type>
<required>optional</required>
<desc>规则结束时间</desc>
</param>
<param>
<name>rule_start</name>
<type>Date</type>
<required>optional</required>
<desc>规则开始时间</desc>
</param>
<param>
<name>sort</name>
<type>Number</type>
<required>optional</required>
<desc>排序</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>状态</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>required</required>
<desc>商户ID</desc>
</param>
<param>
<name>weeklys</name>
<type>String</type>
<required>optional</required>
<desc>周期轮询0,1,2,3通过逗号间隔</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>新增add规则ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.auction.rule.delete</name>
<desc>添加商品规则</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>规则ID</desc>
</param>
<param>
<name>is_takeout</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是外卖</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>required</required>
<desc>店铺id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.auction.rule.query</name>
<desc>查询商品规则</desc>
<request>
<param>
<name>current_date</name>
<type>Date</type>
<required>optional</required>
<desc>当前日期时间</desc>
</param>
<param>
<name>day_time</name>
<type>Number</type>
<required>optional</required>
<desc>时间</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>规则id</desc>
</param>
<param>
<name>is_diandian</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是到店</desc>
</param>
<param>
<name>is_takeout</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是外卖</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>规则名</desc>
</param>
<param>
<name>status_array</name>
<type>String</type>
<required>optional</required>
<desc>状态数组string</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>optional</required>
<desc>商铺ID</desc>
</param>
<param>
<name>weekly</name>
<type>String</type>
<required>optional</required>
<desc>轮询周期</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>DdTopAuctionRuleVO</type>
<level>Object Array</level>
<desc>auction rule vo</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.auction.rule.update</name>
<desc>修改商品规则</desc>
<request>
<param>
<name>day_end</name>
<type>Number</type>
<required>optional</required>
<desc>每天的结束时间 ， 格式：10000*hh+100*mm+ss</desc>
</param>
<param>
<name>day_start</name>
<type>Number</type>
<required>optional</required>
<desc>每天的开始时间， 格式：10000*hh+100*mm+ss</desc>
</param>
<param>
<name>features</name>
<type>String</type>
<required>optional</required>
<desc>扩展属性</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>规则ID</desc>
</param>
<param>
<name>is_diandian</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是点点商品规则</desc>
</param>
<param>
<name>is_takeout</name>
<type>Boolean</type>
<required>required</required>
<desc>是否是外卖商品规则</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>商户规则名称</desc>
</param>
<param>
<name>rule_end</name>
<type>Date</type>
<required>optional</required>
<desc>规则结束时间</desc>
</param>
<param>
<name>rule_start</name>
<type>Date</type>
<required>optional</required>
<desc>规则开始时间</desc>
</param>
<param>
<name>sort</name>
<type>Number</type>
<required>optional</required>
<desc>排序</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>状态</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>required</required>
<desc>商户ID</desc>
</param>
<param>
<name>weeklys</name>
<type>String</type>
<required>optional</required>
<desc>周期轮询0,1,2,3通过逗号间隔</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>规则id</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.menu.detail</name>
<desc>淘点点点菜单详情</desc>
<request>
<param>
<name>menu_id</name>
<type>Number</type>
<required>required</required>
<desc>菜单编号</desc>
</param>
<param>
<name>out_store_id</name>
<type>String</type>
<required>optional</required>
<desc>外部门店编码</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>optional</required>
<desc>淘宝商户id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>DdTopMenuDetailVO</type>
<level>Object</level>
<desc>点菜单订单详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.reserved.list</name>
<desc>点菜订单列表查询接口</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家称呼</desc>
</param>
<param>
<name>buyer_phone</name>
<type>String</type>
<required>optional</required>
<desc>买家预定手机号</desc>
</param>
<param>
<name>ends</name>
<type>Date</type>
<required>optional</required>
<desc>预定结束时间</desc>
</param>
<param>
<name>option</name>
<type>Number</type>
<required>special</required>
<desc>打印状态 
	 * 0 : 未打印 
	 * 1 : 已打印 
	 * 2 : 已处理</desc>
</param>
<param>
<name>pn</name>
<type>Number</type>
<required>optional</required>
<desc>翻页游码</desc>
</param>
<param>
<name>ps</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小</desc>
</param>
<param>
<name>starts</name>
<type>Date</type>
<required>optional</required>
<desc>预定开始时间</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>optional</required>
<desc>淘宝商户id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>DdTopPagination</type>
<level>Object</level>
<desc>订单列表翻页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.dd.reserved.update</name>
<desc>预定订单修改接口</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>预定订单编号</desc>
</param>
<param>
<name>mark</name>
<type>Number</type>
<required>special</required>
<desc>0-未标注 1-已到店 2-未到店 3-不来了</desc>
</param>
<param>
<name>option</name>
<type>Number</type>
<required>special</required>
<desc>打印状态 
	 * 0 : 未打印 
	 * 1 : 已打印 
	 * 2 : 已处理</desc>
</param>
<param>
<name>store_id</name>
<type>String</type>
<required>required</required>
<desc>淘宝店铺id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否更新成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.waimai.confirm</name>
<desc>商家确认订单，进行发货</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>未确认发货的订单编号</desc>
</param>
</request>
<response>
<param>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>0:失败 1:成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.waimai.get</name>
<desc>可以按商家或是店铺维度的进行查询买家付款卖家未确认订单，一次返回不大于20条订单</desc>
<request>
<param>
<name>is_all</name>
<type>Boolean</type>
<required>required</required>
<desc>true-查询仅按商家维度 
false-查询按商家下所属店铺维度</desc>
</param>
<param>
<name>max_size</name>
<type>Number</type>
<required>required</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>返回记录数，超过20按20条返回数据&lt;br /&gt; 支持最大值为：20&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>store_id</name>
<type>Number</type>
<required>required</required>
<desc>外卖分店ID</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>ListResult</type>
<level>Object</level>
<desc>查询到的订单列表对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.waimai.orders.get</name>
<desc>获取淘宝外卖全部订单</desc>
<request>
<param>
<name>is_all_order</name>
<type>Boolean</type>
<required>optional</required>
<desc>true 仅有支付宝订单,false 包括所有类型订单(货到付款,支付券等)</desc>
</param>
<param>
<name>is_all_shop</name>
<type>Boolean</type>
<required>required</required>
<desc>true-查询仅按商家维度 
false-查询按商家下所属店铺维度</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称/订单ID 搜索</desc>
</param>
<param>
<name>order_status</name>
<type>Number</type>
<required>optional</required>
<desc>订单状态 待确认订单2 , 退款中订单4 , 已发货12 关闭20 交易成功21</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_length>100</max_length>
<desc>页码&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>返回记录数，超过20按20条返回数据&lt;br /&gt; 支持最大值为：20&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>shop_id</name>
<type>Number</type>
<required>required</required>
<desc>外卖分店ID</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>ListResult</type>
<level>Object</level>
<desc>查询到的订单列表对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.waimai.refuse</name>
<desc>商家拒绝订单，产生退款操作</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>买家付款未发货订单号</desc>
</param>
<param>
<name>reason</name>
<type>String</type>
<required>required</required>
<desc>拒单理由</desc>
</param>
</request>
<response>
<param>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>0:失败 1:成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.address.get</name>
<desc>用于获取外卖地址</desc>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.address.operate</name>
<desc>外卖地址操作接口</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>optional</required>
<desc>详细地址</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>城市汉字名称</desc>
</param>
<param>
<name>defaulted</name>
<type>Number</type>
<required>optional</required>
<desc>是否是默认地址</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>地址ID</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>optional</required>
<desc>电话</desc>
</param>
<param>
<name>x</name>
<type>Number</type>
<required>optional</required>
<desc>经度保留8位有效整数</desc>
</param>
<param>
<name>y</name>
<type>Number</type>
<required>optional</required>
<desc>纬度保留7位有效整数</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>是一个JSON</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.bcategory.get</name>
<desc>查询外卖后台类目，二级结构</desc>
<response>
<param>
<name>result</name>
<type>CategoryResult</type>
<level>Object</level>
<desc>类目对象集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.category.operate</name>
<desc>外卖自定义类目操作接口</desc>
<request>
<param>
<name>data</name>
<type>String</type>
<required>optional</required>
<desc>2，新增 
	参数：storeId ; 0=1 ; d=json数组 
	 
	如：{"cates":[{"name":"test1","cid":111,"order":2,"user":"test","pid":111,"rid":1111,"bid":12346}]} 
	 
	 
{ 
  "cates": [ 
    { 
      "name": "test1",   // 类目名， 必选 
      "order": 2				// 排序值，升序,可选 
    } 
  ] 
} 
 
3, 修改 
 
{ 
  "cates": [ 
    { 
      "name": "test1", 
      "cid": 111,			// 类目id，必须 
      "order": 2			// 排序值，升序 
    } 
  ] 
} 
 
4, 删除 
{ 
  "cates": [ 
    { 
      "cid": 111,			// 类目id，必须 
    } 
  ] 
}</desc>
</param>
<param>
<name>operate</name>
<type>Number</type>
<required>required</required>
<desc>0 查询 1 创建 2 更新 3 删除</desc>
</param>
<param>
<name>shop_id</name>
<type>Number</type>
<required>required</required>
<desc>店铺ID</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>是一个JSON</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.item.add</name>
<desc>上传一个外卖宝贝</desc>
<request>
<param>
<name>auctiondesc</name>
<type>String</type>
<required>required</required>
<desc>商品描述，至少输入5个字</desc>
</param>
<param>
<name>auctionstatus</name>
<type>Number</type>
<required>required</required>
<desc>商品状态(0立即出售,-2放入仓库)</desc>
</param>
<param>
<name>categoryid</name>
<type>Number</type>
<required>required</required>
<desc>宝贝所属后台类目</desc>
</param>
<param>
<name>categoryids</name>
<type>String</type>
<required>optional</required>
<desc>自定义类目,一个商品对应一个自定义类目</desc>
</param>
<param>
<name>goodsno</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，没有则为空</desc>
</param>
<param>
<name>limitbuy</name>
<type>Number</type>
<required>optional</required>
<desc>限购数量,不输入则表示该宝贝无限购数</desc>
</param>
<param>
<name>oriprice</name>
<type>String</type>
<required>optional</required>
<desc>宝贝原价，最多两位小数</desc>
</param>
<param>
<name>picurl</name>
<type>String</type>
<required>required</required>
<desc>宝贝图片</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>required</required>
<max_length>8</max_length>
<desc>宝贝现在价格,最多两位小数&lt;br /&gt; 支持最大长度为：8&lt;br /&gt; 支持的最大列表长度为：8</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<max_length>6</max_length>
<desc>菜品库存(范围1-999999)&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品规则ID</desc>
</param>
<param>
<name>shopids</name>
<type>String</type>
<required>required</required>
<desc>外卖店铺id，多个以英文逗号分隔</desc>
</param>
<param>
<name>sku_info</name>
<type>String</type>
<required>optional</required>
<desc>[{"pv":[{"pText":"颜色","vText":"红色"},{"pText":"尺寸","vText":"8寸"},{"pText":"辣度","vText":"重辣"}], 
       "quantity":"10","price":"100.00","outSkuId":"XXXXXID"}]</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>菜名&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>viceimage</name>
<type>String</type>
<required>optional</required>
<desc>宝贝副图，最多可上传4张</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>CreateResult</type>
<level>Object</level>
<desc>返回新增成功的宝贝id</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.item.get</name>
<desc>查询宝贝详情，可根据入参获取需要的字段</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<required>required</required>
<desc>只返回对应的字段信息，可输入(itemid,title,price,oriprice,goods_no,auction_status,quantity,auction_desc,pic_url,category_id,limit_buy,viceImage,sku,recommend,create_time,modify_time)，多个以英文逗号分隔</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>外卖宝贝数字id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>TopAuction</type>
<level>Object</level>
<desc>外卖宝贝详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.item.operate</name>
<desc>商品上下架、删除接口</desc>
<request>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>待操作宝贝id，多个以英文逗号分隔</desc>
</param>
<param>
<name>o</name>
<type>Number</type>
<required>required</required>
<desc>操作类型(1上架2下架3删除)</desc>
</param>
</request>
<response>
<param>
<name>batch_operate_result</name>
<type>BatchOperateResult</type>
<level>Object</level>
<desc>批量操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.item.pic.upload</name>
<desc>外卖单张图片上传接口</desc>
<request>
<param>
<name>picbytes</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>图片文件字节数组&lt;br /&gt; 支持的最大列表长度为：512000</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>CreateResult</type>
<level>Object</level>
<desc>返回图片地址及提示信息及code. 
返回结果result_data为完整图片地址,例如: 
http://img.taobaocdn.com/bao/uploaded/i1/T1uTCUXExiXXcK5RZ8</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.item.update</name>
<desc>更新单条外卖宝贝</desc>
<request>
<param>
<name>auctiondesc</name>
<type>String</type>
<required>required</required>
<desc>商品描述，至少输入5个字</desc>
</param>
<param>
<name>auctionstatus</name>
<type>Number</type>
<required>required</required>
<desc>商品状态(0立即出售,-2放入仓库)</desc>
</param>
<param>
<name>categoryid</name>
<type>Number</type>
<required>required</required>
<desc>宝贝所属后台类目</desc>
</param>
<param>
<name>categoryids</name>
<type>String</type>
<required>optional</required>
<desc>商品自定义分类</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>目前个字段为空，以后需要更新sku的话传sku</desc>
</param>
<param>
<name>goodsno</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，没有则为空</desc>
</param>
<param>
<name>in_shop_id</name>
<type>Number</type>
<required>required</required>
<desc>当前外卖店铺id</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>宝贝id</desc>
</param>
<param>
<name>limitbuy</name>
<type>Number</type>
<required>optional</required>
<desc>限购数量,不输入则表示该宝贝无限购数</desc>
</param>
<param>
<name>oriprice</name>
<type>String</type>
<required>optional</required>
<desc>宝贝原价，最多两位小数</desc>
</param>
<param>
<name>picurl</name>
<type>String</type>
<required>required</required>
<desc>宝贝图片</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>required</required>
<max_length>8</max_length>
<desc>宝贝现在价格,最多两位小数&lt;br /&gt; 支持最大长度为：8&lt;br /&gt; 支持的最大列表长度为：8</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<max_length>6</max_length>
<desc>菜品库存(范围1-999999)&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品规则ID</desc>
</param>
<param>
<name>sku_info</name>
<type>String</type>
<required>optional</required>
<desc>[{"pv":[{"pText":"颜色","vText":"红色"},{"pText":"尺寸","vText":"8寸"},{"pText":"辣度","vText":"重辣"}], 
       "quantity":"10","price":"100.00","outSkuId":"XXXXXID"}]</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>菜名&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>viceimage</name>
<type>String</type>
<required>optional</required>
<desc>宝贝副图，最多可上传4张</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>CreateResult</type>
<level>Object</level>
<desc>返回新增成功的宝贝id</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.itemlist.get</name>
<desc>暂时是打算提供给淘宝助手用，将来打算支持top的各种对外卖宝贝的查询</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>optional</required>
<max_length>11</max_length>
<desc>外卖前台类目id&lt;br /&gt; 支持的最大列表长度为：11</desc>
</param>
<param>
<name>end_modified</name>
<type>String</type>
<required>optional</required>
<desc>商品截止修改时间格式如(2013-10-25 00:00：00)</desc>
</param>
<param>
<name>fields</name>
<type>String</type>
<required>required</required>
<desc>只返回对应的字段信息，可输入(itemid,title,price,oriprice,goods_no,auction_status,quantity,auction_desc,pic_url,category_id,limit_buy,viceImage,sku,recommend,create_time,modify_time)，多个以英文逗号分隔</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>optional</required>
<desc>外卖宝贝标题关键字</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>格式为column:asc/desc ，column可选值:modify_time(修改时间),price(宝贝价格); 默认修改降序(即最新上架及修改的排在前面)。如按照上架时间降序排序方式为modify_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<max_length>3</max_length>
<max_value>500</max_value>
<min_value>1</min_value>
<desc>查询菜品的页码。1则为第一页&lt;br /&gt; 支持最大值为：500&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：3</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>500</max_value>
<min_value>1</min_value>
<desc>每一次查询返回的条数&lt;br /&gt; 支持最大值为：500&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>sales_status</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>2</max_value>
<min_value>0</min_value>
<desc>出售中宝贝1,仓库中宝贝2,所有宝贝0&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<max_length>9</max_length>
<desc>外卖数字型店铺id&lt;br /&gt; 支持的最大列表长度为：9</desc>
</param>
<param>
<name>start_modified</name>
<type>String</type>
<required>optional</required>
<desc>商品起始的修改时间格式如(2013-10-22 00:00：00)</desc>
</param>
</request>
<response>
<param>
<name>data_list</name>
<type>TopAuction</type>
<level>Object Array</level>
<desc>返回外卖宝贝列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的外卖宝贝总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.order.index.get</name>
<desc>获取订单索引接口</desc>
<request>
<param>
<name>end_time</name>
<type>String</type>
<required>optional</required>
<desc>订单创建时间的结束时间,格式为 yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>interval</name>
<type>Number</type>
<required>optional</required>
<desc>获取最近一定秒数的订单</desc>
</param>
<param>
<name>order_status</name>
<type>Number</type>
<required>optional</required>
<desc>订单状态 待确认订单2 , 退款中订单4 , 已发货12 关闭20 交易成功21</desc>
</param>
<param>
<name>order_type</name>
<type>Number</type>
<required>optional</required>
<desc>订单类型</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_length>100</max_length>
<desc>页码&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>返回记录数，超过200按200条返回数据&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>shop_id</name>
<type>Number</type>
<required>optional</required>
<desc>外卖分店ID</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>optional</required>
<desc>订单创建时间的起点时间,格式为 yyyy-MM-dd HH:mm:ss</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>ListResult</type>
<level>Object</level>
<desc>查询到的订单列表对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.order.single.get</name>
<desc>获取订单详情</desc>
<request>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>订单ID</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>TakeoutThirdOrder</type>
<level>Object</level>
<desc>订单详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.businessrules.get</name>
<desc>查询店铺营业规则</desc>
<request>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<desc>外卖店铺id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>TakeoutOption</type>
<level>Object</level>
<desc>外卖店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.businessrules.update</name>
<desc>更新外卖店营业规则</desc>
<request>
<param>
<name>area_range</name>
<type>String</type>
<required>required</required>
<desc>配送范围地图标注</desc>
</param>
<param>
<name>delivery_amount</name>
<type>Price</type>
<required>required</required>
<desc>配送费</desc>
</param>
<param>
<name>delivery_area</name>
<type>String</type>
<required>required</required>
<desc>配送范围文字说明</desc>
</param>
<param>
<name>delivery_time</name>
<type>String</type>
<required>required</required>
<desc>配送时间</desc>
</param>
<param>
<name>early_minutes</name>
<type>Number</type>
<required>required</required>
<desc>送货预留时间</desc>
</param>
<param>
<name>full_amount</name>
<type>Price</type>
<required>required</required>
<desc>满多少就免配送费</desc>
</param>
<param>
<name>minimum_amount</name>
<type>Price</type>
<required>required</required>
<desc>起送金额</desc>
</param>
<param>
<name>mobile</name>
<type>String</type>
<required>required</required>
<desc>外卖商家电话</desc>
</param>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<desc>店铺id</desc>
</param>
<param>
<name>support_days</name>
<type>Number</type>
<required>required</required>
<desc>支持预定, 当天：1，三天内：3，七天内：7</desc>
</param>
</request>
<response>
<param>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>成功：0，失败：1</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.close</name>
<desc>外卖店铺歇业</desc>
<request>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<desc>外卖店铺id</desc>
</param>
</request>
<response>
<param>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>成功：0,失败：1</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.get</name>
<desc>获取外卖店信息</desc>
<request>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<desc>外卖店铺id</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>TakeoutShop</type>
<level>Object</level>
<desc>外卖店信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.list</name>
<desc>查询卖家外卖店列表</desc>
<request>
<param>
<name>keywords</name>
<type>String</type>
<required>optional</required>
<desc>查询关键字</desc>
</param>
<param>
<name>page</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>每页条数&lt;br /&gt; 支持最大值为：20&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>店铺状态，歇业：0，营业：1，所有：-1</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>TakeoutShopPage</type>
<level>Object</level>
<desc>数据结果集</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.open</name>
<desc>外卖店开启营业</desc>
<request>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<desc>外卖店铺id</desc>
</param>
</request>
<response>
<param>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>成功：0，失败：1</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shop.update</name>
<desc>更新外卖店基本信息</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>required</required>
<desc>店铺地址</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>外卖店名称</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>required</required>
<desc>店铺电话号码</desc>
</param>
<param>
<name>pic_url</name>
<type>String</type>
<required>optional</required>
<desc>店铺标志 
 
注意：这里传递的图片url是通过taobao.waimai.item.pic.upload接口上传获得的</desc>
</param>
<param>
<name>posx</name>
<type>Number</type>
<required>required</required>
<desc>店铺坐标x 
注意：这里是大坐标，即是乘以100000后的值</desc>
</param>
<param>
<name>posy</name>
<type>Number</type>
<required>required</required>
<desc>店铺坐标y 
注意：这里是大坐标，即是乘以100000后的值</desc>
</param>
<param>
<name>shopid</name>
<type>Number</type>
<required>required</required>
<desc>外卖店铺id</desc>
</param>
<param>
<name>shopoutid</name>
<type>String</type>
<required>optional</required>
<desc>店铺与ISV的关联关系</desc>
</param>
</request>
<response>
<param>
<name>ret_code</name>
<type>String</type>
<level>Basic</level>
<desc>成功：0，失败：1</desc>
</param>
</response>
</api>
<api>
<name>taobao.waimai.shopbycity.get</name>
<desc>以城市为单位返回登陆用户店铺列表</desc>
<response>
<param>
<name>result</name>
<type>ShopCityResult</type>
<level>Object</level>
<desc>以city维度分的店铺list</desc>
</param>
</response>
</api>
<api>
<name>taobao.media.file.add</name>
<desc>用户通过top上传文件到多媒体平台</desc>
<request>
<param>
<name>biz_code</name>
<type>String</type>
<required>required</required>
<desc>接入多媒体平台的业务code
每个应用有一个特有的业务code</desc>
</param>
<param>
<name>dir_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>文件属于的那个目录的目录编号&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>ext</name>
<type>Number</type>
<required>optional</required>
<desc>额外信息</desc>
</param>
<param>
<name>file_data</name>
<type>byte[]</type>
<required>required</required>
<desc>文件</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>上传文件的名称&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
</request>
<response>
<param>
<name>file</name>
<type>File</type>
<level>Object</level>
<desc>上传到多媒体平台的文件</desc>
</param>
</response>
</api>
<api>
<name>taobao.media.file.delete</name>
<desc>多媒体平台文件的删除，支持批量</desc>
<request>
<param>
<name>biz_code</name>
<type>String</type>
<required>required</required>
<desc>接入多媒体平台的业务code 每个应用有一个特有的业务code</desc>
</param>
<param>
<name>file_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>50</max_list_size>
<desc>文件ID字符串,可以一个也可以一组,用英文逗号间隔,如450,120,155</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>全部删除成功返回“”，部分删除成功返回没有删除成功的id</desc>
</param>
</response>
</api>
<api>
<name>taobao.media.file.get</name>
<desc>多媒体平台文件查询</desc>
<request>
<param>
<name>biz_code</name>
<type>String</type>
<required>required</required>
<desc>多媒体应用接入biz_code</desc>
</param>
<param>
<name>dir_id</name>
<type>Number</type>
<required>optional</required>
<max_value>9223372036854775807</max_value>
<desc>分类id&lt;br /&gt; 支持最大值为：9223372036854775807</desc>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>file_id</name>
<type>Number</type>
<required>optional</required>
<max_value>9223372036854775807</max_value>
<desc>文件id&lt;br /&gt; 支持最大值为：9223372036854775807</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>文件名称查询，like查询</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值40</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>urls</name>
<type>String</type>
<required>optional</required>
<desc>图片url查询接口</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>File</type>
<level>Object Array</level>
<desc>查询分页数据对象</desc>
</param>
<param>
<name>total</name>
<type>Number</type>
<level>Basic</level>
<desc>文件总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.add</name>
<desc>同一卖家最多添加500个图片分类，图片分类名称长度最大为20个字符</desc>
<request>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类的父分类,一级分类的parent_id为0,二级分类的则为其父分类的picture_category_id</desc>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<required>required</required>
<desc>图片分类名称，最大长度20字符，中文字符算2个字符，不能为空</desc>
</param>
</request>
<response>
<param>
<name>picture_category</name>
<type>PictureCategory</type>
<level>Object</level>
<desc>图片分类信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.get</name>
<desc>获取图片分类信息</desc>
<request>
<param>
<name>modified_time</name>
<type>Date</type>
<required>optional</required>
<desc>图片分类的修改时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片分类。</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>取二级分类时设置为对应父分类id 
取一级分类时父分类id设为0 
取全部分类的时候不设或设为-1</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类ID</desc>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<required>optional</required>
<desc>图片分类名，不支持模糊查询</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>分类类型,fixed代表店铺装修分类类别，auction代表宝贝分类类别，user-define代表用户自定义分类类别</desc>
</param>
</request>
<response>
<param>
<name>picture_categories</name>
<type>PictureCategory</type>
<level>Object Array</level>
<desc>图片分类</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.update</name>
<desc>更新图片分类的名字，或者更新图片分类的父分类（即分类移动）。只能移动2级分类到非2级分类，默认分类和1级分类不可移动。</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>要更新的图片分类的id</desc>
</param>
<param>
<name>category_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>图片分类的新名字，最大长度20字符，不能为空&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类的新父分类id</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新图片分类是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.delete</name>
<desc>删除图片空间图片</desc>
<request>
<param>
<name>picture_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>图片ID字符串,可以一个也可以一组,用英文逗号间隔,如450,120,155.限制数量是100</desc>
</param>
</request>
<response>
<param>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.get</name>
<desc>获取图片信息</desc>
<request>
<param>
<name>client_type</name>
<type>String</type>
<required>optional</required>
<desc>图片使用，如果是pc宝贝detail使用，设置为client:computer，查询出来的图片是符合pc的宝贝detail显示的 
如果是手机宝贝detail使用，设置为client:phone，查询出来的图片是符合手机的宝贝detail显示的,默认值是全部</desc>
</param>
<param>
<name>deleted</name>
<type>String</type>
<required>optional</required>
<desc>是否删除,unfroze代表没有删除</desc>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>modified_time</name>
<type>Date</type>
<required>optional</required>
<desc>图片被修改的时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片。</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值40</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类ID</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片ID</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>图片标题,最大长度50字符,中英文都算一字符</desc>
</param>
<param>
<name>urls</name>
<type>String</type>
<required>optional</required>
<desc>图片url查询接口</desc>
</param>
</request>
<response>
<param>
<name>pictures</name>
<type>Picture</type>
<level>Object Array</level>
<desc>图片信息列表</desc>
</param>
<param>
<name>totalResults</name>
<type>Number</type>
<level>Basic</level>
<desc>总的结果数</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.isreferenced.get</name>
<desc>查询图片是否被引用，被引用返回true，未被引用返回false</desc>
<request>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>图片id</desc>
</param>
</request>
<response>
<param>
<name>is_referenced</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片是否被引用</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.replace</name>
<desc>替换一张图片，只替换图片数据，图片名称，图片分类等保持不变。</desc>
<request>
<param>
<name>image_data</name>
<type>byte[]</type>
<required>required</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>要替换的图片的id，必须大于0</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片替换是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.update</name>
<desc>修改指定图片的图片名</desc>
<request>
<param>
<name>new_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>新的图片名，最大长度50字符，不能为空&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>要更改名字的图片的id</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.upload</name>
<desc>上传单张图片</desc>
<request>
<param>
<name>client_type</name>
<type>String</type>
<required>optional</required>
<desc>图片上传的来源，有电脑版本宝贝发布，手机版本宝贝发布 
client:computer电脑版本宝贝使用 
client:phone手机版本宝贝使用</desc>
</param>
<param>
<name>image_input_title</name>
<type>String</type>
<required>required</required>
<desc>包括后缀名的图片标题,不能为空，如Bule.jpg,有些卖家希望图片上传后取图片文件的默认名</desc>
</param>
<param>
<name>img</name>
<type>byte[]</type>
<required>required</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式,3M以内。</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>0</min_value>
<desc>图片分类ID，设置具体某个分类ID或设置0上传到默认分类，只能传入一个分类&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>图片标题,如果为空,传的图片标题就取去掉后缀名的image_input_title,超过50字符长度会截取50字符,重名会在标题末尾加"(1)";标题末尾已经有"(数字)"了，则数字加1</desc>
</param>
</request>
<response>
<param>
<name>picture</name>
<type>Picture</type>
<level>Object</level>
<desc>当前上传的一张图片信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.userinfo.get</name>
<desc>查询用户的图片空间使用信息，包括：订购量，已使用容量，免费容量，总的可使用容量，订购有效期，剩余容量</desc>
<response>
<param>
<name>user_info</name>
<type>UserInfo</type>
<level>Object</level>
<desc>用户使用图片空间的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.video.add</name>
<desc>此api添加一个视频，视频发布后需要转码，审核等操作步骤，表示添加完成之后并不是立马能播放该视频，需要等后台转码成功，审核通过之后。线上视频转码审核过程比较快</desc>
<request>
<param>
<name>cover_url</name>
<type>String</type>
<required>required</required>
<max_length>512</max_length>
<desc>视频封面url,不能为空且不能超过512个英文字母&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>required</required>
<max_length>512</max_length>
<desc>视频描述信息，不能为空且不能超过256个汉字&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<max_list_size>25</max_list_size>
<desc>视频标签，以','隔开，不能为空且总长度不超过128个汉字&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<desc>视频标题，不能为空且不超过128个汉字&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>upload_id</name>
<type>String</type>
<required>required</required>
<desc>上传唯一识别符,上传id</desc>
</param>
<param>
<name>uploader_id</name>
<type>Number</type>
<required>required</required>
<desc>视频上传者数字id</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Number</type>
<level>Basic</level>
<desc>发布成功返回视频id</desc>
</param>
</response>
</api>
<api>
<name>taobao.video.update</name>
<desc>此api用于更新一个视频的基本信息，包括视频标题，标签，描述，封面等，不包括是否允许他人观看，更新是否允许他人观看详见taobao.videos.open</desc>
<request>
<param>
<name>cover_url</name>
<type>String</type>
<required>special</required>
<max_length>512</max_length>
<desc>视频封面url,不能超过512个英文字母&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>special</required>
<max_length>512</max_length>
<desc>视频描述信息，不能超过256个汉字&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>special</required>
<max_length>256</max_length>
<max_list_size>25</max_list_size>
<desc>视频标签，以','隔开，且总长度不超过128个汉字&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>special</required>
<max_length>256</max_length>
<desc>视频标题，不超过128个汉字。title, tags,cover_url和description至少必须传一个&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
<param>
<name>video_id</name>
<type>Number</type>
<required>required</required>
<desc>视频id</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新视频成功返回true</desc>
</param>
</response>
</api>
<api>
<name>taobao.videos.delete</name>
<desc>此api用于批量删除视频，删除后的视频无法被搜索，全部删除成功返回成功，不支持部分删除</desc>
<request>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
<param>
<name>video_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>视频id列表</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Boolean</type>
<level>Basic</level>
<desc>全部删除成功返回true，不支持部分删除</desc>
</param>
</response>
</api>
<api>
<name>taobao.videos.query</name>
<desc>此api用于批量查询指定视频，不返回已经被用户删除掉的视频，全部查询成功返回成功，不支持部分查询</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的视频对象字段。VideoItem结构体中所有字段均可返回；多个字段用“,”分隔；其中video_play_info中的播放url可选择性返回，其余属性全部返回；如果想返回整个子对象中所有url，那字段为video_play_info，如果是想返回子对象里面的字段，那字段为video_play_info.web_url。</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
<param>
<name>video_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>视频id列表</desc>
</param>
</request>
<response>
<param>
<name>video_items</name>
<type>VideoItem</type>
<level>Object Array</level>
<desc>批量查询返回的视频列表，返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.videos.search</name>
<desc>此api用于搜索应用上传的所有视频，应用由appKey 唯一识别，搜索条件包含视频标题，标签，状态，关键字（标题or标签，不能同时设置），上传者数字id</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>optional</required>
<desc>页码。默认返回的数据是从第一页开始</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的视频对象字段。VideoItem结构体中所有字段均可返回；多个字段用“,”分隔；其中video_play_info中的播放url可选择性返回，其余属性全部返回；如果想返回整个子对象中所有url，那字段为video_play_info，如果是想返回子对象里面的字段，那字段为video_play_info.web_url。</desc>
</param>
<param>
<name>keywords</name>
<type>String</type>
<required>optional</required>
<desc>关键字(标题or标签，不能同时设置title,tag，否则冲突)</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数，默认值是12</desc>
</param>
<param>
<name>states</name>
<type>Number</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>视频状态列表；视频状态：等待转码（1），转码中（2），转码失败（3），等待审核（4），未通过审核（5），通过审核（6）</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>视频标签&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>视频标题&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>uploader_id</name>
<type>Number</type>
<required>required</required>
<desc>视频上传者数字id</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
</request>
<response>
<param>
<name>search_result</name>
<type>TOPSearchResult</type>
<level>Object</level>
<desc>搜索返回类，返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.role.add</name>
<desc>给指定的卖家创建新的子账号角色&lt;br/&gt; 
如果需要授权的权限点有下级权限点或上级权限点，把该权限点的父权限点和该权限点的所有子权限都一并做赋权操作，并递归处理&lt;br/&gt;例如：权限点列表如下&lt;br/&gt; 
code=sell 宝贝管理&lt;br/&gt; 
---------|code=sm 店铺管理&lt;br/&gt; 
---------|---------|code=sm-design 如店铺装修&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-visit内店装修入口&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-publish内店装修发布&lt;br/&gt; 
---------|---------|code=phone 手机淘宝店铺&lt;br/&gt; 
调用改接口给code=sm-design店铺装修赋权时，同时会将下列权限点都赋予默认角色&lt;br/&gt; 
code=sell 宝贝管理&lt;br/&gt; 
---------|code=sm 店铺管理&lt;br/&gt; 
---------|---------|code=sm-design 如店铺装修&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-visit内店装修入口&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-publish内店装修发布&lt;br/&gt;</desc>
<request>
<param>
<name>description</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>角色描述&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>角色名&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>500</max_length>
<desc>表示卖家昵称&lt;br /&gt; 支持最大长度为：500&lt;br /&gt; 支持的最大列表长度为：500</desc>
</param>
<param>
<name>permission_codes</name>
<type>String</type>
<required>optional</required>
<max_list_size>2000</max_list_size>
<desc>需要授权的权限点permission_code列表,以","分割.其code值可以通过调用taobao.sellercenter.user.permissions.get返回，其中permission.is_authorize=1的权限点可以通过本接口授权给对应角色。</desc>
</param>
</request>
<response>
<param>
<name>role</name>
<type>Role</type>
<level>Object</level>
<desc>子账号角色</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.role.info.get</name>
<desc>获取指定角色的信息。只能查询属于自己的角色信息 (主账号或者某个主账号的子账号登陆，只能查询属于该主账号的角色信息)</desc>
<request>
<param>
<name>role_id</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<desc>角色id&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>role</name>
<type>Role</type>
<level>Object</level>
<desc>角色具体信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.rolemembers.get</name>
<desc>获取指定卖家的角色下属员工列表，只能获取属于登陆者自己的信息。</desc>
<request>
<param>
<name>role_id</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<desc>角色id&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>subusers</name>
<type>SubUserInfo</type>
<level>Object Array</level>
<desc>子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.roles.get</name>
<desc>获取指定卖家的角色列表，只能获取属于登陆者自己的信息。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>500</max_length>
<desc>卖家昵称(只允许查询自己的信息：当前登陆者)&lt;br /&gt; 支持最大长度为：500&lt;br /&gt; 支持的最大列表长度为：500</desc>
</param>
</request>
<response>
<param>
<name>roles</name>
<type>Role</type>
<level>Object Array</level>
<desc>卖家子账号角色列表。&lt;br/&gt;返回对象为 role数据对象中的role_id，role_name，description，seller_id，create_time，modified_time。不包含permissions(权限点)</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.subuser.permissions.roles.get</name>
<desc>查询指定的子账号的被直接赋予的权限信息和角色信息。&lt;br/&gt;返回对象中包括直接赋予子账号的权限点信息、被赋予的角色以及角色的对应权限点信息。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>子账号昵称(子账号标识)&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>subuser_permission</name>
<type>SubUserPermission</type>
<level>Object</level>
<desc>子账号被所拥有的权限</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.subusers.get</name>
<desc>根据主账号nick查询该账号下所有的子账号列表，只能查询属于自己的账号信息 (主账号以及所属子账号)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>表示卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>subusers</name>
<type>SubUserInfo</type>
<level>Object Array</level>
<desc>子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.user.permissions.get</name>
<desc>获取指定用户的权限集合，并不组装成树。如果是主账号，返回所有的权限列表；如果是子账号，返回所有已授权的权限。只能查询属于自己的账号信息 (如果是主账号，则是主账号以及所属子账号，如果是子账号则是对应主账号以及所属子账号)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户标识，次入参必须为子账号比如zhangsan:cool。如果只输入主账号zhangsan，将报错。</desc>
</param>
</request>
<response>
<param>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>权限列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.department.add</name>
<desc>根据主账号ID以及部门名称、父部门ID创建新的部门信息（通过主账号登陆只能新建属于该主账号的部门信息）</desc>
<request>
<param>
<name>department_name</name>
<type>String</type>
<required>required</required>
<desc>部门名称</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>required</required>
<desc>父部门ID 如果是最高部门则传入0</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.department.delete</name>
<desc>根据主账号Nick和部门ID删除该主账号下的该部门信息，如果待删除部门下有子账号则无法删除该部门（通过主账号登陆只能删除属于该主账号下的部门信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>required</required>
<desc>部门ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.department.update</name>
<desc>通过指定主账号ID和部门ID来修改该部门的名称或该部门的父部门ID。（通过主账号登陆只能修改属于该主账号的部门信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>required</required>
<desc>部门ID</desc>
</param>
<param>
<name>department_name</name>
<type>String</type>
<required>optional</required>
<desc>部门名称</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>父部门ID 如果是最高部门则传入0</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.departments.get</name>
<desc>获取指定账户的所有部门列表，其实包括有每个部门的ID、父部门ID、部门名称（通过主账号登陆只能查询属于该主账号下的所有部门信息）。</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>departments</name>
<type>Department</type>
<level>Object Array</level>
<desc>部门信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.duty.add</name>
<desc>通过主账号ID来增加指定账户的职务信息，职务信息中包括职务名称以及职务级别（通过主账号登陆只能新建属于该主账号的职务信息）</desc>
<request>
<param>
<name>duty_level</name>
<type>Number</type>
<required>required</required>
<desc>职务级别</desc>
</param>
<param>
<name>duty_name</name>
<type>String</type>
<required>required</required>
<desc>职务名称</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.duty.delete</name>
<desc>通过主账号ID和职务ID来删除主账号下的该职务信息。使用此职务的员工中职务一栏将变为空（通过主账号登陆只能删除属于该主账号下的职务信息）</desc>
<request>
<param>
<name>duty_id</name>
<type>Number</type>
<required>required</required>
<desc>职务ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.duty.update</name>
<desc>通过主账号ID和职务ID来修改该职务信息中的职务名称及职务级别信息（通过主账号登陆只能修改属于该主账号下的职务信息）</desc>
<request>
<param>
<name>duty_id</name>
<type>Number</type>
<required>required</required>
<desc>职务ID</desc>
</param>
<param>
<name>duty_level</name>
<type>Number</type>
<required>optional</required>
<desc>职务级别</desc>
</param>
<param>
<name>duty_name</name>
<type>String</type>
<required>optional</required>
<desc>职务名称</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.dutys.get</name>
<desc>通过主账号Nick获取该账户下的所有职务信息，职务信息中包括职务ID、职务名称以及职务等级（通过主账号登陆只能获取属于该主账号下的职务信息）</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>dutys</name>
<type>Duty</type>
<level>Object Array</level>
<desc>职务信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.employee.add</name>
<desc>给指定子账号新增一个员工信息（通过主账号登陆只能新建属于该主账号的员工信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>required</required>
<desc>当前员工所属部门ID</desc>
</param>
<param>
<name>duty_id</name>
<type>Number</type>
<required>optional</required>
<desc>当前员工担任职务ID</desc>
</param>
<param>
<name>employee_name</name>
<type>String</type>
<required>required</required>
<desc>员工姓名</desc>
</param>
<param>
<name>employee_nickname</name>
<type>String</type>
<required>optional</required>
<desc>员工花名</desc>
</param>
<param>
<name>employee_num</name>
<type>String</type>
<required>optional</required>
<desc>员工工号(可以用大小写英文字母和数字)</desc>
</param>
<param>
<name>entry_date</name>
<type>Date</type>
<required>optional</required>
<desc>员工入职时间</desc>
</param>
<param>
<name>id_card_num</name>
<type>String</type>
<required>optional</required>
<desc>员工身份证号码</desc>
</param>
<param>
<name>leader_id</name>
<type>Number</type>
<required>optional</required>
<desc>直接上级的员工ID</desc>
</param>
<param>
<name>office_phone</name>
<type>String</type>
<required>optional</required>
<desc>办公电话</desc>
</param>
<param>
<name>personal_email</name>
<type>String</type>
<required>optional</required>
<desc>员工私人邮箱</desc>
</param>
<param>
<name>personal_mobile</name>
<type>String</type>
<required>optional</required>
<desc>员工手机号码</desc>
</param>
<param>
<name>sex</name>
<type>Number</type>
<required>required</required>
<desc>员工性别 1：男; 2:女</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>required</required>
<desc>子账号ID</desc>
</param>
<param>
<name>work_location</name>
<type>String</type>
<required>optional</required>
<desc>工作地点</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.employee.update</name>
<desc>修改指定账户子账号的员工信息（通过主账号登陆只能修改属于该主账号下的员工信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>optional</required>
<desc>当前员工所属部门ID</desc>
</param>
<param>
<name>duty_id</name>
<type>Number</type>
<required>optional</required>
<desc>当前员工担任职务ID(若需要将该字段的值置为空，请传入-1）</desc>
</param>
<param>
<name>employee_name</name>
<type>String</type>
<required>optional</required>
<desc>员工姓名</desc>
</param>
<param>
<name>employee_nickname</name>
<type>String</type>
<required>optional</required>
<desc>员工花名(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>employee_num</name>
<type>String</type>
<required>optional</required>
<desc>员工工号(卖家自定义)(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>employee_turnover</name>
<type>Boolean</type>
<required>optional</required>
<desc>登记员工离职  true:登记员工离职</desc>
</param>
<param>
<name>entry_date</name>
<type>Date</type>
<required>optional</required>
<desc>员工入职时间(若需要将该字段的值置为空，请传入1900-01-01 00:00:00）</desc>
</param>
<param>
<name>id_card_num</name>
<type>String</type>
<required>optional</required>
<desc>员工身份证号码(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>leader_id</name>
<type>Number</type>
<required>optional</required>
<desc>直接上级的员工ID(若需要将该字段的值置为空，请传入-1）</desc>
</param>
<param>
<name>office_phone</name>
<type>String</type>
<required>optional</required>
<desc>办公电话(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>personal_email</name>
<type>String</type>
<required>optional</required>
<desc>员工私人邮箱(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>personal_mobile</name>
<type>String</type>
<required>optional</required>
<desc>员工手机号码(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>sex</name>
<type>Number</type>
<required>optional</required>
<desc>员工性别  1：男;  2:女</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>required</required>
<desc>子账号ID</desc>
</param>
<param>
<name>work_location</name>
<type>String</type>
<required>optional</required>
<desc>杭州大厦(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.fullinfo.get</name>
<desc>获取指定账户子账号的详细信息，其中包括子账号的账号信息以及员工、部门、职务信息（只能通过主账号登陆并查询属于该主账号下的某个子账号详细信息）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>传入所需要的参数信息（若不需要获取子账号或主账号的企业邮箱地址，则无需传入该参数；若需要获取子账号或主账号的企业邮箱地址，则需要传入fields；可选参数值为subuser_email和user_email，传入其他参数值均无效；两个参数都需要则以逗号隔开传入即可，例如：subuser_email,user_email）</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>special</required>
<desc>子账号ID（传参中sub_id和sub_nick至少需要其中一个，若sub_id与sub_nick同时传入并且合法，那么sub_nick优先，以sub_nick查询子账号）</desc>
</param>
<param>
<name>sub_nick</name>
<type>String</type>
<required>special</required>
<desc>子账号用户名（传参中sub_id和sub_nick至少需要其中一个，若sub_id与sub_nick同时传入并且合法，那么sub_nick优先，以sub_nick查询子账号）</desc>
</param>
</request>
<response>
<param>
<name>sub_fullinfo</name>
<type>SubUserFullInfo</type>
<level>Object</level>
<desc>子账号详细信息，其中包括账号基本信息、员工信息和部门职务信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.info.update</name>
<desc>修改指定账户子账号的基本信息（通过主账号登陆只能修改属于该主账号的子账号基本信息）</desc>
<request>
<param>
<name>is_disable_subaccount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否停用子账号 true:表示停用该子账号false:表示开启该子账号</desc>
</param>
<param>
<name>is_dispatch</name>
<type>Boolean</type>
<required>optional</required>
<desc>子账号是否参与分流 true:参与分流 false:不参与分流</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>required</required>
<desc>子账号ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subusers.get</name>
<desc>获取主账号下的子账号简易账号信息集合。（只能通过主账号登陆并且查询该属于主账号的子账号信息）</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>subaccounts</name>
<type>SubAccountInfo</type>
<level>Object Array</level>
<desc>子账号基本信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fuwu.sale.link.gen</name>
<desc>服务商通过使用该接口来产生营销链接，通过把这种链接发送给商家来做自定义人群的服务营销&lt;br&gt; 
注：session是param_str这个参数串创建者生成的session，这个创建者与入参中的nick是不一致的。例如：A开发者创建了一个param_str的字符串，要为B商家生成一个营销链接，session必须是A开发者创建的session。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>用户需要营销的目标人群中的用户nick</desc>
</param>
<param>
<name>param_str</name>
<type>String</type>
<required>required</required>
<desc>从服务商后台，营销链接功能中生成的参数串直接复制使用。不要修改，否则抛错。</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>通过营销链接接口生成的营销链接短地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.fuwu.scores.get</name>
<desc>根据日期、查询appkey对应服务评价，每次调用只能查询某一天服务评价信息，可设置分页查询，页大小最大为100，非实时接口，延迟时间为30分钟</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<desc>当前页</desc>
</param>
<param>
<name>date</name>
<type>Date</type>
<required>required</required>
<desc>评价日期，查询某一天的评价</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页获取条数。默认值40，最小值1，最大值100。&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>score_result</name>
<type>ScoreResult</type>
<level>Object Array</level>
<desc>评价流水记录</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.order.search</name>
<desc>用于ISV查询自己名下的应用及收费项目的订单记录（已付款订单）。 
建议用于查询前一日的历史记录，不适合用作实时数据查询。 
现在只能查询90天以内的数据 
该接口限制每分钟所有appkey调用总和只能有800次。</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>biz_order_id</name>
<type>Number</type>
<required>optional</required>
<desc>订单号</desc>
</param>
<param>
<name>biz_type</name>
<type>Number</type>
<required>optional</required>
<desc>订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到） 空=全部</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间（订购时间）结束值</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>淘宝会员名</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<required>optional</required>
<desc>子订单号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>一页包含的记录数&lt;br /&gt; 支持最大值为：200</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间（订购时间）起始值（当start_created和end_created都不填写时，默认返回最近90天的数据）</desc>
</param>
</request>
<response>
<param>
<name>article_biz_orders</name>
<type>ArticleBizOrder</type>
<level>Object Array</level>
<desc>商品订单对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.subsc.search</name>
<desc>用于ISV查询自己名下的应用及收费项目的订购记录</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>autosub</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否自动续费，true=自动续费 false=非自动续费 空=全部</desc>
</param>
<param>
<name>end_deadline</name>
<type>Date</type>
<required>optional</required>
<desc>到期时间结束值</desc>
</param>
<param>
<name>expire_notice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否到期提醒，true=到期提醒 false=非到期提醒 空=全部</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>淘宝会员名</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>一页包含的记录数&lt;br /&gt; 支持最大值为：200</desc>
</param>
<param>
<name>start_deadline</name>
<type>Date</type>
<required>optional</required>
<desc>到期时间起始值（当start_deadline和end_deadline都不填写时，默认返回最近90天的数据）</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>订购记录状态，1=有效 2=过期 空=全部</desc>
</param>
</request>
<response>
<param>
<name>article_subs</name>
<type>ArticleSub</type>
<level>Object Array</level>
<desc>订购关系对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.subscribe.get</name>
<desc>用于ISV根据登录进来的淘宝会员名查询该为该会员开通哪些收费项目，ISV只能查询自己名下的应用及收费项目的订购情况</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>商品编码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的商品代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>淘宝会员名</desc>
</param>
</request>
<response>
<param>
<name>article_user_subscribes</name>
<type>ArticleUserSubscribe</type>
<level>Object Array</level>
<desc>用户订购信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.weike.performance.put</name>
<desc>提交客服绩效接口</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>订单id</desc>
</param>
<param>
<name>per_info_wrapper</name>
<type>String</type>
<required>optional</required>
<desc>绩效数据封装类</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.weike.subscinfo.get</name>
<desc>需求订单查询接口</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>时间范围结束时间</desc>
</param>
<param>
<name>page_num</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>seller_name</name>
<type>String</type>
<required>optional</required>
<desc>商家旺旺名称</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>时间范围开始时间</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>SubscInfoWrapper</type>
<level>Object</level>
<desc>返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.get</name>
<desc>获取单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：refund_id, alipay_no, tid, oid, buyer_nick, seller_nick, total_fee, status, created, refund_fee, good_status, has_good_return, payment, reason, desc, num_iid, title, price, num, good_return_time, company_name, sid, address, shipping_type, refund_remind_timeout</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>1</min_value>
<desc>退款单号&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<desc>搜索到的交易信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.message.add</name>
<desc>创建退款留言/凭证</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>留言内容。最大长度: 400个字节</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>图片（凭证）。类型: JPG,GIF,PNG;最大为: 500K</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款编号。</desc>
</param>
</request>
<response>
<param>
<name>refund_message</name>
<type>RefundMessage</type>
<level>Object</level>
<desc>退款信息。包含id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.messages.get</name>
<desc>单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：RefundMessage结构体中的所有字段，以半角逗号(,)分隔。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单号</desc>
</param>
</request>
<response>
<param>
<name>refund_messages</name>
<type>RefundMessage</type>
<level>Object Array</level>
<desc>搜索到的留言凭证信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的留言凭证总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.refuse</name>
<desc>卖家拒绝单笔退款（包含退款和退款退货）交易，要求如下： 
1. 传入的refund_id和相应的tid, oid必须匹配 
2. 如果一笔订单只有一笔子订单，则tid必须与oid相同 
3. 只有卖家才能执行拒绝退款操作 
4. 以下三种情况不能退款：卖家未发货；7天无理由退换货；网游订单</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<desc>退款记录对应的交易子订单号</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单号</desc>
</param>
<param>
<name>refuse_message</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>拒绝退款时的说明信息，长度2-200&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>refuse_proof</name>
<type>byte[]</type>
<required>optional</required>
<max_length>130000</max_length>
<desc>拒绝退款时的退款凭证，一般是卖家拒绝退款时使用的发货凭证，最大长度130000字节，支持的图片格式：GIF, JPG, PNG&lt;br /&gt; 支持的文件类型为：gif,jpg,png&lt;br /&gt; 支持的最大列表长度为：130000</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>退款记录对应的交易订单号</desc>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<desc>拒绝退款成功后，会返回Refund数据结构中的refund_id, status, modified字段</desc>
</param>
</response>
</api>
<api>
<name>taobao.refunds.apply.get</name>
<desc>查询买家申请的退款列表，且查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。传入值为 1 代表第一页，传入值为 2 代表第二页，依此类推。默认返回的数据是从第一页开始&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>optional</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</param>
</request>
<response>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.refunds.receive.get</name>
<desc>查询卖家收到的退款列表，查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>查询修改时间结束。格式: yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee, oid, good_status, company_name, sid, payment, reason, desc, has_good_return, modified, order_status</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>查询修改时间开始。格式: yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量退款，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的退款信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.rp.refunds.agree</name>
<desc>卖家同意退款，支持批量(20笔以内，总金额6000以内)</desc>
<request>
<param>
<name>code</name>
<type>String</type>
<required>optional</required>
<desc>短信验证码</desc>
</param>
<param>
<name>refund_infos</name>
<type>String</type>
<required>required</required>
<desc>需要退款的退款ID以及和其对应的金额列表，其中金额以分为单位，ID与金额以“|”符号分隔，多笔订单以“,”分隔。version 取退款更新时间modified（需转成时间戳格式）</desc>
</param>
</request>
<response>
<param>
<name>response</name>
<type>RefundAgreeResponse</type>
<level>Object</level>
<desc>同意退款操作返回信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.rp.returngoods.agree</name>
<desc>卖家同意退货接口</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>required</required>
<desc>卖家提供的退货地址</desc>
</param>
<param>
<name>mobile</name>
<type>String</type>
<required>required</required>
<desc>卖家手机</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>卖家姓名</desc>
</param>
<param>
<name>post</name>
<type>String</type>
<required>required</required>
<desc>卖家提供的退货地址的邮编</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款编号</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>卖家退货留言</desc>
</param>
<param>
<name>tel</name>
<type>String</type>
<required>required</required>
<desc>卖家座机</desc>
</param>
</request>
<response>
<param>
<name>response</name>
<type>RefundBaseResponse</type>
<level>Object</level>
<desc>同意退货返回对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.qt.report.add</name>
<desc>上传质检报告</desc>
<request>
<param>
<name>ext_attr</name>
<type>String</type>
<required>optional</required>
<max_length>2000</max_length>
<desc>自定义属性字段;分号分隔&lt;br /&gt; 支持最大长度为：2000&lt;br /&gt; 支持的最大列表长度为：2000</desc>
</param>
<param>
<name>gmt_expiry</name>
<type>Date</type>
<required>optional</required>
<desc>质检有效到期时间，一般为一年有效期 
status状态为3时必须非空</desc>
</param>
<param>
<name>gmt_report</name>
<type>Date</type>
<required>optional</required>
<desc>提交报告结果时间</desc>
</param>
<param>
<name>gmt_submit</name>
<type>Date</type>
<required>required</required>
<desc>送检日期</desc>
</param>
<param>
<name>is_passed</name>
<type>Boolean</type>
<required>optional</required>
<desc>只有status=3时赋值,  
true 质检结果合格,false质检结果不合格. 
留空表示成分鉴定,不做判定</desc>
</param>
<param>
<name>item_desc</name>
<type>String</type>
<required>required</required>
<max_length>150</max_length>
<desc>样品信息描述&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>item_url</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<desc>样品链接. 
QT_TYPE=9的时候，请填写N\A&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>message</name>
<type>String</type>
<required>optional</required>
<max_length>600</max_length>
<desc>检测结果消息描述&lt;br /&gt; 支持最大长度为：600&lt;br /&gt; 支持的最大列表长度为：600</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>送检者昵称&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>optional</required>
<desc>当前接口只有淘宝订单真假鉴定（QT_TYPE=9）的报告在该字段传入订单号，其他类型报告都不需要传输该值</desc>
</param>
<param>
<name>qt_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>一个质检服务唯一标识质量检验单的编号&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>qt_name</name>
<type>String</type>
<required>required</required>
<max_length>150</max_length>
<desc>质检名称&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>qt_standard</name>
<type>String</type>
<required>optional</required>
<max_length>16</max_length>
<desc>质检标准 
status=3 时 必须非空&lt;br /&gt; 支持最大长度为：16&lt;br /&gt; 支持的最大列表长度为：16</desc>
</param>
<param>
<name>qt_type</name>
<type>Number</type>
<required>required</required>
<max_value>15</max_value>
<min_value>0</min_value>
<desc>(1L, "聚划算"), 
(2L, "消保"), 
(3L, "分销"), 
(4L, "抽检"), 
(5L, "良无限线下数据"), 
(6L, "入驻/续签商城"), 
(7L, "买家质检维权"), 
(8L, "实地验证"), 
(9L, "淘宝买家订单商品鉴定"), 
(10L,"假一赔三");&lt;br /&gt; 支持最大值为：15&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>report_url</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>质检报告源文件url 
status状态为3时必须非空&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>servcie_item_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>收费项code&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>sp_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>质检服务商名称&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>required</required>
<max_value>4</max_value>
<min_value>0</min_value>
<desc>0:已提交申请 
1:已收到样品 
2:已出检测结果 
3.已出具报告&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.qt.report.delete</name>
<desc>删除质检报告</desc>
<request>
<param>
<name>qt_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>一个质检服务唯一标识质量检验单的编号&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.qt.report.get</name>
<desc>质检报告查询</desc>
<request>
<param>
<name>qt_code</name>
<type>String</type>
<required>required</required>
<desc>质检编号</desc>
</param>
</request>
<response>
<param>
<name>qt_report</name>
<type>QtReport</type>
<level>Object</level>
<desc>质检报告对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.qt.report.update</name>
<desc>更新质检报告</desc>
<request>
<param>
<name>ext_attr</name>
<type>String</type>
<required>optional</required>
<max_length>2000</max_length>
<desc>自定义属性字段;分号分隔&lt;br /&gt; 支持最大长度为：2000&lt;br /&gt; 支持的最大列表长度为：2000</desc>
</param>
<param>
<name>gmt_expiry</name>
<type>Date</type>
<required>optional</required>
<desc>质检有效到期时间，一般为一年有效期 
status状态为3时必须非空</desc>
</param>
<param>
<name>gmt_report</name>
<type>Date</type>
<required>optional</required>
<desc>提交报告结果时间</desc>
</param>
<param>
<name>gmt_submit</name>
<type>Date</type>
<required>optional</required>
<desc>送检日期</desc>
</param>
<param>
<name>is_passed</name>
<type>Boolean</type>
<required>optional</required>
<desc>只有status=3时赋值,  
0:未通过1:通过 空代表未判定</desc>
</param>
<param>
<name>item_desc</name>
<type>String</type>
<required>required</required>
<max_length>150</max_length>
<desc>样品宝贝描述&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>item_url</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<max_list_size>256</max_list_size>
<desc>宝贝样品url&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>message</name>
<type>String</type>
<required>optional</required>
<max_length>300</max_length>
<desc>检测结果消息描述&lt;br /&gt; 支持最大长度为：300&lt;br /&gt; 支持的最大列表长度为：300</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>送检者昵称&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>optional</required>
<desc>外部ID，和QT_TYPE 一起表示某种平台的实体ID。
QT_TYPE=9的时候，num_iid为淘宝订单号</desc>
</param>
<param>
<name>qt_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>一个质检服务唯一标识质量检验单的编号&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>qt_name</name>
<type>String</type>
<required>required</required>
<max_length>150</max_length>
<desc>质检名称&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>qt_standard</name>
<type>String</type>
<required>optional</required>
<max_length>16</max_length>
<desc>质检标准 
status=3 时必须非空&lt;br /&gt; 支持最大长度为：16&lt;br /&gt; 支持的最大列表长度为：16</desc>
</param>
<param>
<name>qt_type</name>
<type>Number</type>
<required>required</required>
<max_value>15</max_value>
<min_value>0</min_value>
<desc>(1L, "聚划算"), 
(2L, "消保"), 
(3L, "分销"), 
(4L, "抽检"), 
(5L, "良无限线下数据"), 
(6L, "入驻/续签商城"), 
(7L, "买家质检维权"), 
(8L, "实地验证"), 
(9L, "淘宝买家订单商品鉴定"), 
(10L,"假一赔三");&lt;br /&gt; 支持最大值为：15&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>report_url</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>质检报告源文件url 
status状态为3时必须非空&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>servcie_item_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>收费项code&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>sp_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>质检服务商名称&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>required</required>
<max_value>4</max_value>
<min_value>0</min_value>
<desc>0:已提交申请 
1:已收到样品 
2:已出检测结果 
3.已出具报告&lt;br /&gt; 支持最大值为：4&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.qt.reports.get</name>
<desc>批量查询质检报告，目前只支持查询qtType=11（天猫真假鉴定）类型的报告</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询时间段的结束时间</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>送检者昵称</desc>
</param>
<param>
<name>qt_type</name>
<type>Number</type>
<required>required</required>
<desc>质检类型，目前只支持查询qt_type=11的类型</desc>
</param>
<param>
<name>servcie_item_code</name>
<type>String</type>
<required>required</required>
<desc>收费项code</desc>
</param>
<param>
<name>sp_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>质检服务商名&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询时间段的开始时间</desc>
</param>
</request>
<response>
<param>
<name>reports</name>
<type>QtReport</type>
<level>Object Array</level>
<desc>质检报告列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ts.property.get</name>
<desc>淘宝服务属性查询</desc>
<request>
<param>
<name>service_item_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>服务收费项code&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>service_item_property</name>
<type>ServiceItemProperty</type>
<level>Object</level>
<desc>服务收费项相关属性对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.ts.subscribe.get</name>
<desc>ts订购关系状态查询. 暂只支持1口价服务.</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>订购用户昵称&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>servcie_item_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>服务收费项code&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
</request>
<response>
<param>
<name>service_subscribe</name>
<type>ServiceSubscribe</type>
<level>Object</level>
<desc>订购关系对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.categoryrecommend.items.get</name>
<desc>根据类目信息推荐相关联的宝贝集</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>传入叶子类目ID</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：类目下热门商品推荐。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回关联的商品集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemrecommend.items.get</name>
<desc>根据推荐类型获取推荐的关联关系商品</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求返回宝贝的个数，建议取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外的参数信息</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>查询类型标识符，可传入1-3，1：同类商品推荐，2：异类商品推荐， 3：同店商品推荐。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>values</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回的推荐商品列表结果集</desc>
</param>
</response>
</api>
<api>
<name>taobao.shoprecommend.items.get</name>
<desc>根据店铺信息推荐相关联的宝贝集</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，最大只能获取10个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：店内热门商品推荐。其他值当非法值处理</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>&lt;p&gt;传入卖家ID。这里的seller_id得通过&lt;a href="http://api.taobao.com/apidoc/api.htm?path=cid:38-apiId:10449"&gt;taobao.taobaoke.shops.get&lt;/a&gt;
跟&lt;a href="http://api.taobao.com/apidoc/api.htm?path=cid:38-apiId:21419"&gt;taobao.taobaoke.widget.shops.convert&lt;/a&gt;这两个接口去获取user_id字段。&lt;/p&gt;
&lt;p&gt;如果是非淘客卖家，则无法获取，暂无替代方案。&lt;/p&gt;</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回与店铺关联的宝贝集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.shoprecommend.shops.get</name>
<desc>根据店铺信息推荐相关联的店铺集</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取16个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：关联店铺推荐。其他值当非法值处理</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>传入卖家ID</desc>
</param>
</request>
<response>
<param>
<name>favorite_shops</name>
<type>FavoriteShop</type>
<level>Object Array</level>
<desc>返回与店铺关联的店铺集</desc>
</param>
</response>
</api>
<api>
<name>taobao.userrecommend.items.get</name>
<desc>根据用户信息推荐相关联的宝贝集。仅支持widget入口调用，需要同时校验淘宝cookie登陆情况，以及cookie和session授权的一致性。调用入口为/widget/rest。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret)。timestamp为60分钟内有效 
此API为组件API，调用方式需要参照：http://open.taobao.com/doc/detail.htm?id=988，以JS-SDK调用</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：用户购买意图。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回用户相关的关联宝贝集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.loginstatus.get</name>
<desc>获取当前浏览器用户在淘宝登陆状态。如果传了session并且此用户已在淘宝登陆，返回nick和userId。仅支持widget入口调用。调用入口为/widget。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret, secret)。timestamp为60分钟内有效</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>指定判断当前浏览器登陆用户是否此昵称用户，并且返回是否登陆。如果用户不一致返回未登陆，如果用户一致且已登录返回已登陆</desc>
</param>
</request>
<response>
<param>
<name>is_login</name>
<type>Boolean</type>
<level>Basic</level>
<desc>当前浏览器用户是否已登陆。如果指定了nick，但是nick与浏览器用户不一致返回false。如果未指定nick，以浏览器用户登陆状态为准。如果指定了nick且与浏览器用户一致，以浏览器用户登陆状态为准</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝用户的昵称，传了session且已登陆才返回</desc>
</param>
<param>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝用户的数字id，传了session且已登录才返回。</desc>
</param>
</response>
</api>
<api>
<name>alipay.data.bill.downloadurl.get</name>
<desc>查询支付宝账单下载地址</desc>
<request>
<param>
<name>auth_token</name>
<type>String</type>
<required>special</required>
<desc>支付宝给用户的授权。如果没有top的授权，这个字段是必填项</desc>
</param>
<param>
<name>bill_date</name>
<type>String</type>
<required>required</required>
<desc>账单时间：日账单格式为yyyy-MM-dd,月账单格式为yyyy-MM</desc>
</param>
<param>
<name>bill_type</name>
<type>String</type>
<required>required</required>
<desc>账单类型，目前支持的类型有：air</desc>
</param>
</request>
<response>
<param>
<name>bill_download_url</name>
<type>String</type>
<level>Basic</level>
<desc>账单下载地址链接，获取连接后30秒后未下载，链接地址失效。</desc>
</param>
</response>
</api>
<api>
<name>alipay.ebpp.bill.add</name>
<desc>创建生活账单</desc>
<request>
<param>
<name>auth_token</name>
<type>String</type>
<required>optional</required>
<desc>如果传入调用api有淘宝授权的session可以不传这个字段</desc>
</param>
<param>
<name>bill_date</name>
<type>String</type>
<required>optional</required>
<desc>账单的账期，例如201203表示2012年3月的账单。</desc>
</param>
<param>
<name>bill_key</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>账单单据号，例如水费单号，手机号，电费号，信用卡卡号。没有唯一性要求。&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>charge_inst</name>
<type>String</type>
<required>required</required>
<max_length>80</max_length>
<desc>支付宝给每个出账机构指定了一个对应的英文短名称来唯一表示该收费单位。&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>输出机构的业务流水号，需要保证唯一性。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>mobile</name>
<type>String</type>
<required>required</required>
<desc>用户的手机号</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>支付宝订单类型。公共事业缴纳JF,信用卡还款HK&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>owner_name</name>
<type>String</type>
<required>optional</required>
<max_length>50</max_length>
<desc>拥有该账单的用户姓名&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>pay_amount</name>
<type>Price</type>
<required>required</required>
<desc>缴费金额。用户支付的总金额。单位为：RMB Yuan。取值范围为[0.01，100000000.00]，精确到小数点后两位。</desc>
</param>
<param>
<name>service_amount</name>
<type>Price</type>
<required>optional</required>
<desc>账单的服务费。</desc>
</param>
<param>
<name>sub_order_type</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>子业务类型是业务类型的下一级概念，例如：WATER表示JF下面的水费，ELECTRIC表示JF下面的电费，GAS表示JF下面的燃气费。&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>traffic_location</name>
<type>String</type>
<required>optional</required>
<desc>交通违章地点，sub_order_type=TRAFFIC时填写。</desc>
</param>
<param>
<name>traffic_regulations</name>
<type>String</type>
<required>optional</required>
<desc>违章行为，sub_order_type=TRAFFIC时填写。</desc>
</param>
</request>
<response>
<param>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝的业务订单号，具有唯一性。</desc>
</param>
<param>
<name>bill_date</name>
<type>String</type>
<level>Basic</level>
<desc>账单的账期，例如201203表示2012年3月的账单。</desc>
</param>
<param>
<name>bill_key</name>
<type>String</type>
<level>Basic</level>
<desc>账单单据号，例如水费单号，手机号，电费号，信用卡卡号。没有唯一性要求。</desc>
</param>
<param>
<name>charge_inst</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝给每个出账机构指定了一个对应的英文短名称来唯一表示该收费单位。</desc>
</param>
<param>
<name>charge_inst_name</name>
<type>String</type>
<level>Basic</level>
<desc>出账机构中文名称。</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>输出机构的业务流水号，需要保证唯一性。</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝订单类型。公共事业缴纳JF,信用卡还款HK</desc>
</param>
<param>
<name>owner_name</name>
<type>String</type>
<level>Basic</level>
<desc>拥有该账单的用户姓名</desc>
</param>
<param>
<name>pay_amount</name>
<type>String</type>
<level>Basic</level>
<desc>缴费金额。用户支付的总金额。单位为：RMB Yuan。取值范围为[0.01，100000000.00]，精确到小数点后两位。</desc>
</param>
<param>
<name>service_amount</name>
<type>String</type>
<level>Basic</level>
<desc>账单的服务费</desc>
</param>
<param>
<name>sub_order_type</name>
<type>String</type>
<level>Basic</level>
<desc>子业务类型是业务类型的下一级概念，例如：WATER表示JF下面的水费，ELECTRIC表示JF下面的电费，GAS表示JF下面的燃气费。</desc>
</param>
</response>
</api>
<api>
<name>alipay.ebpp.bill.key.search</name>
<desc>用于发账单业务中，提交下载用户户号请求，文件生成成功之后，会通知下载地址。</desc>
<request>
<param>
<name>charge_inst</name>
<type>String</type>
<required>required</required>
<max_length>80</max_length>
<desc>支付宝给每个出账机构指定了一个对应的英文短名称来唯一表示该收费单位。&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间。与开始时间间隔在七天之内</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段列表。bill_key:户号</desc>
</param>
<param>
<name>only_subscribed</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否仅包含订阅数据</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>支付宝订单类型。公共事业缴纳JF,信用卡还款HK&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，时间必须是今天范围之内。格式为yyyy-MM-dd HH:mm:ss，精确到天</desc>
</param>
<param>
<name>sub_order_type</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>子业务类型是业务类型的下一级概念，例如：WATER表示JF下面的水费，ELECTRIC表示JF下面的电费，GAS表示JF下面的燃气费。&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
</request>
<response>
<param>
<name>task_id</name>
<type>String</type>
<level>Basic</level>
<desc>请求受理ID。</desc>
</param>
</response>
</api>
<api>
<name>alipay.ebpp.owe.bill.upload</name>
<desc>发账单业务，上传用户的欠费信息。</desc>
<request>
<param>
<name>charge_inst</name>
<type>String</type>
<required>required</required>
<max_length>80</max_length>
<desc>支付宝给每个出账机构指定了一个对应的英文短名称来唯一表示该收费单位。&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>chargeoff_inst</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>销账机构&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>digest_owe_bill</name>
<type>String</type>
<required>optional</required>
<desc>文件摘要，算法SHA</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>支付宝订单类型。公共事业缴纳JF,信用卡还款HK&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>owe_bill</name>
<type>byte[]</type>
<required>required</required>
<max_length>52428800</max_length>
<desc>文件内容&lt;br /&gt; 支持的文件类型为：zip,rar,csv,doc,docx,xls,xlsx&lt;br /&gt; 支持的最大列表长度为：52428800</desc>
</param>
<param>
<name>sub_order_type</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>子业务类型是业务类型的下一级概念，例如：WATER表示JF下面的水费，ELECTRIC表示JF下面的电费，GAS表示JF下面的燃气费。&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
</request>
<response>
<param>
<name>charge_inst</name>
<type>String</type>
<level>Basic</level>
<desc>出账机构</desc>
</param>
<param>
<name>chargeoff_inst</name>
<type>String</type>
<level>Basic</level>
<desc>销账机构</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>业务类型</desc>
</param>
<param>
<name>sub_order_type</name>
<type>String</type>
<level>Basic</level>
<desc>子业务类型</desc>
</param>
</response>
</api>
<api>
<name>alipay.micropay.order.confirmpayurl.get</name>
<desc>创建并支付冻结单之后，使用此接口获取有密支付的url 
这个接口调用的前提是创建冻结金的参数信息pay_confirm=PAY_PASSWORD</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>required</required>
<desc>支付宝订单号，冻结流水号.这个是创建冻结订单支付宝返回的</desc>
</param>
<param>
<name>amount</name>
<type>String</type>
<required>required</required>
<desc>支付金额,区间必须在[0.01,30]，只能保留小数点后两位</desc>
</param>
<param>
<name>auth_token</name>
<type>String</type>
<required>optional</required>
<desc>支付宝用户给应用的授权.</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>支付备注</desc>
</param>
<param>
<name>receive_user_id</name>
<type>String</type>
<required>required</required>
<desc>收款方的支付宝ID</desc>
</param>
<param>
<name>transfer_out_order_no</name>
<type>String</type>
<required>required</required>
<desc>本次转账的外部单据号（只能由字母和数字组成,maxlength=32）</desc>
</param>
</request>
<response>
<param>
<name>single_pay_detail</name>
<type>SinglePayDetail</type>
<level>Object</level>
<desc>SinglePayDetail信息</desc>
</param>
</response>
</api>
<api>
<name>alipay.micropay.order.direct.pay</name>
<desc>1.	创建并支付一笔冻结金后，调用此接口 
2.	这个接口调用的前提是创建冻结金的参数信息pay_confirm=NO_CONFIRM</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>required</required>
<desc>支付宝订单号，冻结流水号.这个是创建冻结订单支付宝返回的</desc>
</param>
<param>
<name>amount</name>
<type>String</type>
<required>required</required>
<desc>支付金额,区间必须在[0.01,30]，只能保留小数点后两位</desc>
</param>
<param>
<name>auth_token</name>
<type>String</type>
<required>required</required>
<desc>支付宝给应用的授权</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>支付备注</desc>
</param>
<param>
<name>receive_user_id</name>
<type>String</type>
<required>required</required>
<desc>收款方的支付宝ID</desc>
</param>
<param>
<name>transfer_out_order_no</name>
<type>String</type>
<required>required</required>
<desc>本次转账的外部单据号（只能由字母和数字组成,maxlength=32</desc>
</param>
</request>
<response>
<param>
<name>single_pay_detail</name>
<type>SinglePayDetail</type>
<level>Object</level>
<desc>单笔直接支付返回结果</desc>
</param>
</response>
</api>
<api>
<name>alipay.micropay.order.freeze</name>
<desc>该接口是支付宝提成冻结支付宝资金的操作</desc>
<request>
<param>
<name>amount</name>
<type>String</type>
<required>required</required>
<desc>需要冻结金额，[0.01,2000]，必须是正数，最多只能保留小数点两位,单位是元</desc>
</param>
<param>
<name>auth_token</name>
<type>String</type>
<required>optional</required>
<desc>支付宝用户给应用的授权.</desc>
</param>
<param>
<name>expire_time</name>
<type>Date</type>
<required>required</required>
<desc>冻结资金的到期时间，超过此日期，冻结金会自动解冻,时间要求是:[当前时间+24h,订购时间-8h] .</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>冻结备注,maxLength=40</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<required>required</required>
<desc>商户订单号,只能由字母和数字组成，最大长度32.此外部订单号与支付宝的冻结订单号对应,注意 应用id和订购者id和外部订单号必须保证唯一性。</desc>
</param>
<param>
<name>pay_confirm</name>
<type>String</type>
<required>required</required>
<desc>在解冻转账的时候的支付方式: 
NO_CONFIRM：不需要付款确认，调用接口直接扣款 
PAY_PASSWORD: 
在转账需要付款方用支付密码确认，才可以转账成功</desc>
</param>
</request>
<response>
<param>
<name>micro_pay_order_detail</name>
<type>MicroPayOrderDetail</type>
<level>Object</level>
<desc>冻结订单详情</desc>
</param>
</response>
</api>
<api>
<name>alipay.micropay.order.freezepayurl.get</name>
<desc>用户创建一笔支付订单之后,使用此接口获取支付冻结金的url来支付冻结金</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>required</required>
<desc>冻结订单号,创建冻结订单时支付宝返回的</desc>
</param>
<param>
<name>auth_token</name>
<type>String</type>
<required>optional</required>
<desc>支付宝用户给应用的授权。</desc>
</param>
</request>
<response>
<param>
<name>pay_freeze_url</name>
<type>String</type>
<level>Basic</level>
<desc>支付冻结金的地址</desc>
</param>
</response>
</api>
<api>
<name>alipay.micropay.order.get</name>
<desc>用户对已经冻结的订单可以调用此接口查询明细</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>required</required>
<desc>支付宝订单号，冻结流水号(创建冻结订单返回)</desc>
</param>
<param>
<name>auth_token</name>
<type>String</type>
<required>optional</required>
<desc>支付宝用户给应用的授权.</desc>
</param>
</request>
<response>
<param>
<name>micro_pay_order_detail</name>
<type>MicroPayOrderDetail</type>
<level>Object</level>
<desc>冻结订单详情</desc>
</param>
</response>
</api>
<api>
<name>alipay.micropay.order.unfreeze</name>
<desc>解冻冻结单API</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>required</required>
<desc>冻结资金流水号,在创建资金订单时支付宝返回的流水号</desc>
</param>
<param>
<name>auth_token</name>
<type>String</type>
<required>optional</required>
<desc>支付宝用户给应用的授权.</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>冻结备注</desc>
</param>
</request>
<response>
<param>
<name>unfreeze_order_detail</name>
<type>UnfreezeOrderDetail</type>
<level>Object</level>
<desc>冻结订单详情结果</desc>
</param>
</response>
</api>
<api>
<name>alipay.point.budget.get</name>
<desc>查询已采购的集分宝余额，操作流程如下： 
1、申请支付宝增值包。 
2、申请支付宝应用上线时选择集分宝API。 
3、引导商家签约支付宝集分宝服务，地址为https://openapi.alipay.com/subscribe.htm?id=应用ID。 
4、引导商家对授予支付宝集分宝发放权限，地址为https://openauth.alipay.com/oauth2/authorize.htm?scope=p&amp;client_id=应用ID 
5、引导授权的商家采购集分宝，地址为https://jf.alipay.com/aop/purchase.htm，进行集分宝采购。 
6、商家采购之后可以通过集分宝余额API（alipay.point.budget.get）查询商家的集分宝数量。</desc>
<request>
<param>
<name>auth_token</name>
<type>String</type>
<required>special</required>
<desc>支付宝给用户的授权。如果没有top的授权，这个字段是必填项</desc>
</param>
</request>
<response>
<param>
<name>budget_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>还可以发放的集分宝个数</desc>
</param>
</response>
</api>
<api>
<name>alipay.point.order.add</name>
<desc>向用户发送集分宝，发放集分宝之前，操作流程如下： 
1、申请支付宝增值包。 
2、申请支付宝应用上线时选择集分宝API。 
3、引导商家签约支付宝集分宝服务，地址为https://openapi.alipay.com/subscribe.htm?id=应用ID。 
4、引导商家对授予支付宝集分宝发放权限，地址为https://openauth.alipay.com/oauth2/authorize.htm?scope=p&amp;client_id=应用ID 
5、引导授权的商家采购集分宝，地址为https://jf.alipay.com/aop/purchase.htm，进行集分宝采购。 
6、商家采购之后可以通过集分宝余额API（alipay.point.budget.get）查询商家的集分宝数量。 
7、调用发放API（alipay.point.order.add）发放集分宝。</desc>
<request>
<param>
<name>auth_token</name>
<type>String</type>
<required>special</required>
<desc>支付宝用户给应用发放集分宝的授权。</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>向用户展示集分宝发放备注</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<required>required</required>
<desc>isv提供的发放号订单号，由数字和组成，最大长度为32为，需要保证每笔发放的唯一性，支付宝会对该参数做唯一性控制。如果使用同样的订单号，支付宝将返回订单号已经存在的错误</desc>
</param>
<param>
<name>order_time</name>
<type>Date</type>
<required>required</required>
<desc>发放集分宝时间</desc>
</param>
<param>
<name>point_count</name>
<type>Number</type>
<required>required</required>
<desc>发放集分宝的数量</desc>
</param>
<param>
<name>user_symbol</name>
<type>String</type>
<required>required</required>
<desc>用户标识符，用于指定集分宝发放的用户，和user_symbol_type一起使用，确定一个唯一的支付宝用户</desc>
</param>
<param>
<name>user_symbol_type</name>
<type>String</type>
<required>required</required>
<desc>用户标识符类型，现在支持ALIPAY_USER_ID:表示支付宝用户ID,ALIPAY_LOGON_ID:表示支付宝登陆号</desc>
</param>
</request>
<response>
<param>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝集分宝发放流水号</desc>
</param>
<param>
<name>result_code</name>
<type>Boolean</type>
<level>Basic</level>
<desc>充值结果：SUCCESS表示成功，其他表示失败</desc>
</param>
</response>
</api>
<api>
<name>alipay.point.order.get</name>
<desc>查询集分宝发放详情，发放API是alipay.point.order.add。请先熟悉发放API的流程。</desc>
<request>
<param>
<name>auth_token</name>
<type>String</type>
<required>special</required>
<desc>支付宝用户给应用的授权。</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<required>required</required>
<desc>isv提供的发放号订单号，由数字和组成，最大长度为32为，需要保证每笔发放的唯一性，支付宝会对该参数做唯一性控制。如果使用同样的订单号，支付宝将返回订单号已经存在的错误</desc>
</param>
<param>
<name>user_symbol</name>
<type>String</type>
<required>required</required>
<desc>用户标识符，用于指定集分宝发放的用户，和user_symbol_type一起使用，确定一个唯一的支付宝用户</desc>
</param>
<param>
<name>user_symbol_type</name>
<type>String</type>
<required>required</required>
<desc>用户标识符类型，现在支持ALIPAY_USER_ID:表示支付宝用户ID,ALIPAY_LOGON_ID:表示支付宝登陆号</desc>
</param>
</request>
<response>
<param>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝集分宝发放流水号</desc>
</param>
<param>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>发放时间，格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>dispatch_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝集分宝发放者用户ID</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>向用户展示集分宝发放备注</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>isv提供的发放号订单号，由数字和字母组成，最大长度为32为，需要保证每笔发放的唯一性，支付宝会对该参数做唯一性控制。如果使用同样的订单号，支付宝将返回订单号已经存在的错误</desc>
</param>
<param>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>集分宝发放流水状态，I表示处理中，S表示成功，F表示失败</desc>
</param>
<param>
<name>point_count</name>
<type>Number</type>
<level>Basic</level>
<desc>发放集分宝的数量</desc>
</param>
<param>
<name>receive_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝集分宝接收者用户ID</desc>
</param>
</response>
</api>
<api>
<name>alipay.system.oauth.token</name>
<desc>OAuth2.0 授权的第二步，换取访问令牌。</desc>
<request>
<param>
<name>code</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>授权码，用户对应用授权后得到。&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>grant_type</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>获取访问令牌的类型，authorization_code表示用授权码换，refresh_token表示用刷新令牌来换。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>refresh_token</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>刷新令牌，上次换取访问令牌是得到。&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>access_token</name>
<type>String</type>
<level>Basic</level>
<desc>访问令牌</desc>
</param>
<param>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝用户的id。</desc>
</param>
<param>
<name>expires_in</name>
<type>String</type>
<level>Basic</level>
<desc>访问令牌的有效时间，单位是秒。</desc>
</param>
<param>
<name>re_expires_in</name>
<type>String</type>
<level>Basic</level>
<desc>刷新令牌的有效时间，单位是秒。</desc>
</param>
<param>
<name>refresh_token</name>
<type>String</type>
<level>Basic</level>
<desc>刷新令牌</desc>
</param>
</response>
</api>
<api>
<name>alipay.topats.user.accountreport.get</name>
<desc>查询用户支付宝账务明细接口。&lt;br/&gt; 
异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt;&lt;br/&gt; 
1. 使用之前必须首先申请支付宝API，参考http://open.taobao.com//doc/detail.htm?id=101181#s2&lt;br/&gt; 
2. 只对通过商家认证的、先行赔付卖家以及B2C商家开放&lt;br/&gt; 
3. 提交任务后，通过taobao.topats.result.get来查看任务执行状态，如果任务已完成，则返回下载URL&lt;br/&gt; 
4. 如果订阅了主动通知服务，任务完成后TOP会通过HTTP长连接推送消息，通知的消息格式请参考异步API使用文档&lt;br/&gt; 
5. 下载到的结果是CSV格式的文本文件，默认采用UTF-8编码&lt;br/&gt;</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>返回下载结果文件的数据格式，只支持utf-8和gbk编码，默认是utf-8</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>对账单结束时间。end_time - start_time &lt;= 1个自然月</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段列表。create_time:创建时间,type：账务类型,business_type:子业务类型,balance:当时支付宝账户余额,in_amount:收入金额,out_amount:支出金额,alipay_order_no:支付宝订单号,merchant_order_no:商户订单号,self_user_id:自己的支付宝ID,opt_user_id:对方的支付宝ID,memo:账号备注</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>对账单开始时间。最近一个月内的日期。</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>账务类型。多个类型是，用逗号分隔，不传则查询所有类型的。PAYMENT:在线支付，TRANSFER:转账，DEPOSIT:充值，WITHDRAW:提现，CHARGE:收费，PREAUTH:预授权，OTHER：其它。</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.account.freeze.get</name>
<desc>查询支付宝账户冻结类型的冻结金额。</desc>
<request>
<param>
<name>freeze_type</name>
<type>String</type>
<required>optional</required>
<desc>冻结类型，多个用,分隔。不传返回所有类型的冻结金额。 
DEPOSIT_FREEZE,充值冻结 
WITHDRAW_FREEZE,提现冻结 
PAYMENT_FREEZE,支付冻结 
BAIL_FREEZE,保证金冻结 
CHARGE_FREEZE,收费冻结 
PRE_DEPOSIT_FREEZE,预存款冻结 
LOAN_FREEZE,贷款冻结 
OTHER_FREEZE,其它</desc>
</param>
</request>
<response>
<param>
<name>freeze_items</name>
<type>AccountFreeze</type>
<level>Object Array</level>
<desc>冻结金额列表</desc>
</param>
<param>
<name>total_results</name>
<type>String</type>
<level>Basic</level>
<desc>冻结总条数</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.account.get</name>
<desc>查询支付宝账户余额</desc>
<response>
<param>
<name>alipay_account</name>
<type>AlipayAccount</type>
<level>Object</level>
<desc>支付宝用户账户信息</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.contract.get</name>
<desc>获取支付宝用户订购信息。在不确认用户对应用是否订购的时候，可以调用此API查询。</desc>
<request>
<param>
<name>subscriber_user_id</name>
<type>String</type>
<required>special</required>
<desc>订购者支付宝ID。session与subscriber_user_id二选一即可。</desc>
</param>
</request>
<response>
<param>
<name>alipay_contract</name>
<type>AlipayContract</type>
<level>Object</level>
<desc>支付宝用户订购信息</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.get</name>
<desc>查询支付宝用户信息</desc>
<request>
<param>
<name>auth_token</name>
<type>String</type>
<required>special</required>
<desc>支付宝给用户的授权。如果没有top的授权，这个字段是必填项</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表。alipay_user_id：支付宝用户userId,user_status：支付宝用户状态,user_type：支付宝用户类型,certified：是否通过实名认证,real_name：真实姓名,logon_id：支付宝登录号,sex：用户性别</desc>
</param>
</request>
<response>
<param>
<name>alipay_user_detail</name>
<type>AlipayUserDetail</type>
<level>Object</level>
<desc>支付宝用户信息</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.trade.search</name>
<desc>查询支付宝账户交易记录</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>optional</required>
<desc>支付宝订单号，为空查询所有记录</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间。与开始时间间隔在七天之内</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<required>optional</required>
<desc>商户订单号，为空查询所有记录</desc>
</param>
<param>
<name>order_from</name>
<type>String</type>
<required>optional</required>
<desc>订单来源，为空查询所有来源。淘宝(TAOBAO)，支付宝(ALIPAY)，其它(OTHER)</desc>
</param>
<param>
<name>order_status</name>
<type>String</type>
<required>optional</required>
<desc>订单状态，为空查询所有状态订单</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>optional</required>
<desc>订单类型，为空查询所有类型订单。</desc>
</param>
<param>
<name>page_no</name>
<type>String</type>
<required>required</required>
<desc>页码。取值范围:大于零的整数; 默认值1</desc>
</param>
<param>
<name>page_size</name>
<type>String</type>
<required>required</required>
<desc>每页获取条数。最大值500。</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，时间必须是今天范围之内。格式为yyyy-MM-dd HH:mm:ss，精确到秒</desc>
</param>
</request>
<response>
<param>
<name>total_pages</name>
<type>String</type>
<level>Basic</level>
<desc>总页数</desc>
</param>
<param>
<name>total_results</name>
<type>String</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
<param>
<name>trade_records</name>
<type>TradeRecord</type>
<level>Object Array</level>
<desc>交易记录列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.spmeffect.get</name>
<desc>导购效果SPM报表查询，可查询某天某站点某频道某页面为淘宝带来的流量及成交情况（对于page和module最多返回10000条数据，请正确使用spm数据） 
只能查询距离今天3个月内的数据</desc>
<request>
<param>
<name>date</name>
<type>String</type>
<required>required</required>
<desc>日期</desc>
</param>
<param>
<name>module_detail</name>
<type>Boolean</type>
<required>optional</required>
<desc>查询指定的SPM第四位的效果报表。默认值为false，不传视为不需要</desc>
</param>
<param>
<name>page_detail</name>
<type>Boolean</type>
<required>optional</required>
<desc>查询指定的SPM第三位的效果报表。默认值为false，不传视为不需要</desc>
</param>
</request>
<response>
<param>
<name>spm_result</name>
<type>SpmResult</type>
<level>Object</level>
<desc>某一天该Appkey的站点导购数据</desc>
</param>
</response>
</api>
<api>
<name>tmall.items.discount.search</name>
<desc>获取天猫折扣商品的精选结果。在得到商品ID列表后，再调用 taobao.taobaoke.widget.items.convert 获取有佣金的淘客推广链接。auction_tag不再支持天猫精品库。如有需要调用精选商品，请改为调用：tmall.selected.items.search</desc>
<request>
<param>
<name>auction_tag</name>
<type>Number</type>
<required>optional</required>
<desc>商品标签。品牌特卖商品库：3458；天猫原创商品库：4801,不再支持 天猫精品库：8578；</desc>
</param>
<param>
<name>brand</name>
<type>Number</type>
<required>optional</required>
<desc>品牌的id。点击某品牌类目的时候会出现。</desc>
</param>
<param>
<name>cat</name>
<type>String</type>
<required>special</required>
<desc>前台类目id，目前其他接口无法获取，只能自己去寻找。建议使用关键字获取数据。支持多选过滤，cat=catid1,catid2。</desc>
</param>
<param>
<name>end_price</name>
<type>Price</type>
<required>optional</required>
<desc>商品最高价格</desc>
</param>
<param>
<name>post_fee</name>
<type>Number</type>
<required>optional</required>
<desc>是否包邮，-1为包邮</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>special</required>
<desc>表示搜索的关键字，例如搜索query=nike。当输入关键字为中文时，将对他进行URLEncode的UTF-8格式编码，如 耐克，那么q=%E8%80%90%E5%85%8B。</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>排序类型。类型包括： 
s: 人气排序 
p: 价格从低到高; 
pd: 价格从高到低; 
d: 月销量从高到低; 
td: 总销量从高到低; 
pt: 按发布时间排序.</desc>
</param>
<param>
<name>start</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<desc>可以用该字段来实现分页功能。表示查询起始位置，默认从第0条开始，start=10,表示从第10条数据开始查询，start不得大于1000。&lt;br /&gt; 支持最大值为：1000</desc>
</param>
<param>
<name>start_price</name>
<type>Price</type>
<required>optional</required>
<desc>商品最低价格</desc>
</param>
</request>
<response>
<param>
<name>brand_list</name>
<type>TmallBrand</type>
<level>Object Array</level>
<desc>搜索结果品牌列表</desc>
</param>
<param>
<name>cat_list</name>
<type>TmallCat</type>
<level>Object Array</level>
<desc>搜索结果类目列表</desc>
</param>
<param>
<name>item_list</name>
<type>TmallSearchItem</type>
<level>Object Array</level>
<desc>搜索结果宝贝列表</desc>
</param>
<param>
<name>minisite_list</name>
<type>TmallMinisite</type>
<level>Object Array</level>
<desc>搜索结果minisite列表</desc>
</param>
<param>
<name>page</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页搜索返回数</desc>
</param>
<param>
<name>param_value</name>
<type>String</type>
<level>Basic</level>
<desc>搜索关键词</desc>
</param>
<param>
<name>search_url</name>
<type>String</type>
<level>Basic</level>
<desc>搜索的URL</desc>
</param>
<param>
<name>total_page</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索总页数</desc>
</param>
<param>
<name>total_results</name>
<type>String</type>
<level>Basic</level>
<desc>搜索结果总数</desc>
</param>
</response>
</api>
<api>
<name>tmall.temai.items.search</name>
<desc>根据品牌特卖（temai.tmall.com）类目返回品牌特卖商品列表。在得到商品ID列表后，再调用taobao.item.get获取商品详情，再调用taobao.taobaoke.items.convert 获取有佣金的淘客推广链接</desc>
<request>
<param>
<name>cat</name>
<type>Number</type>
<required>required</required>
<desc>特卖前台类目id，传入的必须是特卖类目50100982或其下的二级类目。</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>排序类型。类型包括： s: 人气排序 p: 价格从低到高; pd: 价格从高到低; d: 月销量从高到低; pt: 按发布时间排序.</desc>
</param>
<param>
<name>start</name>
<type>Number</type>
<required>optional</required>
<desc>表示查询起始位置: 
start=0:返回第1条记录到第48条记录（即第一页）； 
start=48:返回第48条记录到第96条记录（即第二页）； 
start=96，start=144，start=192...... 
依此类推，每次加start值加48(每页返回记录数固定为48条)</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>TmallSearchTmItem</type>
<level>Object Array</level>
<desc>特卖搜索结果宝贝列表</desc>
</param>
<param>
<name>page</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页搜索返回数</desc>
</param>
<param>
<name>total_page</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索总页数</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索结果总数</desc>
</param>
</response>
</api>
<api>
<name>tmall.temai.subcats.search</name>
<desc>特卖子类目搜索</desc>
<request>
<param>
<name>cat</name>
<type>Number</type>
<required>required</required>
<desc>父类目ID，固定是特卖前台一级类目id：50100982</desc>
</param>
</request>
<response>
<param>
<name>cat_list</name>
<type>TmallTmCat</type>
<level>Object Array</level>
<desc>返回传入类目下子类目信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.jds.trade.traces.get</name>
<desc>获取聚石塔数据共享的交易全链路信息</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝的订单tid</desc>
</param>
</request>
<response>
<param>
<name>traces</name>
<type>TradeTrace</type>
<level>Object Array</level>
<desc>跟踪信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.jds.trades.statistics.diff</name>
<desc>订单全链路状态统计差异比较</desc>
<request>
<param>
<name>date</name>
<type>String</type>
<required>required</required>
<desc>查询的日期，格式如YYYYMMDD的日期对应的数字</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页数</desc>
</param>
<param>
<name>post_status</name>
<type>String</type>
<required>required</required>
<desc>需要比较的状态</desc>
</param>
<param>
<name>pre_status</name>
<type>String</type>
<required>required</required>
<desc>需要比较的状态，将会和post_status做比较</desc>
</param>
</request>
<response>
<param>
<name>tids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>pre_status比post_status多的tid列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.jds.trades.statistics.get</name>
<desc>获取订单数量统计结果</desc>
<request>
<param>
<name>date</name>
<type>Number</type>
<required>required</required>
<desc>查询的日期，格式如YYYYMMDD的日期对应的数字</desc>
</param>
</request>
<response>
<param>
<name>status_infos</name>
<type>TradeStat</type>
<level>Object Array</level>
<desc>订单状态计数值</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.task.update</name>
<desc>数据推送2.0中，SDK通过此api把任务的执行结果更新回TOP</desc>
<request>
<param>
<name>error_message</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>任务执行失败的错误信息，可以方便排查问题。&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>execute_host</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>任务执行的机器主机名,用于方便排查问题。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>任务的编号</desc>
</param>
<param>
<name>next_execute_time</name>
<type>Date</type>
<required>required</required>
<desc>任务的下次开始执行时间。</desc>
</param>
<param>
<name>now_sync_time</name>
<type>Date</type>
<required>required</required>
<desc>任务当前同步到的时间点。</desc>
</param>
<param>
<name>params</name>
<type>String</type>
<required>optional</required>
<max_length>512</max_length>
<desc>任务的参数，用json格式表示&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>required</required>
<max_value>2</max_value>
<min_value>-1</min_value>
<desc>任务的状态，0表示任务新建或未执行完成，1表示任务停止，2表示任务已经完成，-1表示任务执行失败。&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：-1</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>任务的类型,&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>version</name>
<type>Number</type>
<required>required</required>
<desc>任务更新时的版本号，此值在选择出的任务中获取到。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新任务是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.tasks.get</name>
<desc>查询应用未完成的任务</desc>
<request>
<param>
<name>fetch_num</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>最大可返回的任务数量&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>task_item_num</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>任务分组数量，表示把所有任务平均分成x组，在线订购应用此参数必传；非在线订购应用此参数忽略。&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>task_items</name>
<type>Number</type>
<required>special</required>
<max_list_size>500</max_list_size>
<desc>指定获取哪些分组的任务，取多个分组有半角逗号分隔，在线订购应用此参数必传；非在线订购应用此参数忽略。其中task_items &gt;= 0且task_items &lt; task_item_num</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>任务类型&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>user_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>需要查询哪些用户的任务，非在线订购应用此参数必传；在线订购应用此参数忽略。</desc>
</param>
</request>
<response>
<param>
<name>data_push_tasks</name>
<type>DataPushTask</type>
<level>Object Array</level>
<desc>查询到的未执行任务</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.user.add</name>
<desc>提供给在线订购应用添加数据推送服务的用户。</desc>
<request>
<param>
<name>rds_name</name>
<type>String</type>
<required>optional</required>
<desc>RDS实例名称，如果有多个RDS必须设置。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否添加成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.user.delete</name>
<desc>删除应用的数据推送用户，用户被删除后，重新添加时会重新同步历史数据。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>要删除用户的昵称</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>需要删除的用户编号&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.users.get</name>
<desc>获取开通的订单同步服务的用户，含有rds的路由关系</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>此参数一般不用传，用于查询最后更改时间在某个时间段内的用户</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数，默认200</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>此参数一般不用传，用于查询最后更改时间在某个时间段内的用户</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>optional</required>
<desc>如果传了user_id表示单条查询</desc>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
<param>
<name>users</name>
<type>JdpUser</type>
<level>Object Array</level>
<desc>用户列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.rds.db.create</name>
<desc>在rds实例里创建数据库</desc>
<request>
<param>
<name>db_name</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>数据库名&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>instance_name</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>rds的实例名&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
</request>
<response>
<param>
<name>rds_db_info</name>
<type>RdsDbInfo</type>
<level>Object</level>
<desc>rds创建、查询、删除db返回结果的数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.rds.db.delete</name>
<desc>通过api删除用户RDS的数据库</desc>
<request>
<param>
<name>db_name</name>
<type>String</type>
<required>required</required>
<desc>数据库的name，可以通过 taobao.rds.db.get 获取</desc>
</param>
<param>
<name>instance_name</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>rds的实例名&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
</request>
<response>
<param>
<name>rds_db_info</name>
<type>RdsDbInfo</type>
<level>Object</level>
<desc>删除数据库，返回结果对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.rds.db.get</name>
<desc>查询rds实例下的数据库</desc>
<request>
<param>
<name>db_status</name>
<type>Number</type>
<required>optional</required>
<max_length>1</max_length>
<max_value>3</max_value>
<min_value>0</min_value>
<desc>数据库状态，默认值1&lt;br /&gt; 支持最大值为：3&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>instance_name</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>rds的实例名&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
</request>
<response>
<param>
<name>rds_db_infos</name>
<type>RdsDbInfo</type>
<level>Object Array</level>
<desc>数据库查询返回数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.jushita.jdp.datadelete</name>
<desc>异步删除rds库数据推送表的数据</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>删除数据时间段的结束修改时间，格式为：yyyy-MM-dd HH:mm:ss，结束时间必须为前天的23:59:59秒以前，根据是业务的modified时间</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>删除数据时间段的起始修改时间，格式为：yyyy-MM-dd HH:mm:ss,根据是业务的modified时间</desc>
</param>
<param>
<name>sync_type</name>
<type>String</type>
<required>required</required>
<desc>推送的数据类型，可选值为：tb_trade(淘宝交易)，tb_item(淘宝商品)，tb_refund(淘宝退款)，fx_trade(分销订单)，tm_refund(天猫退款)，同时删除多种类型以分号分隔，如："tb_trade;tb_item;tb_refund;fx_trade;tm_refund"</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>optional</required>
<desc>用户昵称，不填表示删除所有用户的数据。</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.travel.items.add</name>
<desc>增加一个旅游商品，目前支持的类目包括：国内跟团游、国内自由行、国内一日游、出境自由行、出境跟团游、境外跟团游、境外自由行、境外一日游。</desc>
<request>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale。</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数.B商家在发布非虚拟商品时，这个字段必须设置，返点必须是 5的倍数，即0.5%的倍数。注意该字段值最高值不超过500，即50%。</desc>
</param>
<param>
<name>choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄。</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>商品所属叶子类目ID。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>宝贝所在地市。</desc>
</param>
<param>
<name>combo_price_calendar</name>
<type>String</type>
<required>required</required>
<desc>Json串：{"combos":[{"combo_name":"套餐一","price_calendar":[{"child_num":100,"child_price":100,"date":"2012-06-08","diff_price":1000,"man_num":100,"man_price":1000},{"child_num":100,"child_price":100,"date":"2012-06-09","diff_price":1000,"man_num":100,"man_price":1000}]}]}</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<desc>商品描述，不超过50000个字符。</desc>
</param>
<param>
<name>duration</name>
<type>Number</type>
<required>required</required>
<desc>最晚成团提前天数，最小0天，最大为300天。</desc>
</param>
<param>
<name>expirydate</name>
<type>String</type>
<required>optional</required>
<desc>电子交易凭证有效期，目前此字段只涉及到的信息为有效期; 如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 如果有效期为【购买成功日 至】类型则格式为2012-08-16 如果有效期为天数类型则格式为15。</desc>
</param>
<param>
<name>fee_include</name>
<type>String</type>
<required>optional</required>
<desc>费用包含，不超过1500个字符。</desc>
</param>
<param>
<name>fee_not_include</name>
<type>String</type>
<required>optional</required>
<desc>费用不包，不超过1500个字符。</desc>
</param>
<param>
<name>flight_info</name>
<type>String</type>
<required>optional</required>
<desc>机票信息，不超过1500字符</desc>
</param>
<param>
<name>gathering_place</name>
<type>String</type>
<required>optional</required>
<desc>集合地，不超过30个字符。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)。</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)。</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)，B商家不用设置该字段，均为true。</desc>
</param>
<param>
<name>hotel_info</name>
<type>String</type>
<required>optional</required>
<desc>酒店信息，不超过1500字符</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>商品主图。类型:JPG,GIF;最大长度:500k，支持的文件类型：gif,jpg,jpeg,png。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："2000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。在度假线路类目中，该属性ID为“自由行包含元素”或“一日游包含元素”属性ID。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，如“自定义自由行包含元素”。</desc>
</param>
<param>
<name>is_tdcy</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否为铁定出游商品的参数设置为true，那么该商品为铁定出游商品；设置为false，那么该商品为非铁定出游商品。默认为false</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
</param>
<param>
<name>merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick。</desc>
</param>
<param>
<name>network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID。</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<desc>商品库存。如果发布旅游度假线路宝贝，该字段可以忽略。</desc>
</param>
<param>
<name>onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数。(暂未使用)</desc>
</param>
<param>
<name>order_info</name>
<type>String</type>
<required>optional</required>
<desc>预定须知，不超过1500个字符。</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家的外部编码，最大为512字节。</desc>
</param>
<param>
<name>own_expense</name>
<type>String</type>
<required>optional</required>
<desc>自费项目，不超过1500个字符。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path。</desc>
</param>
<param>
<name>price</name>
<type>Number</type>
<required>optional</required>
<desc>商品一口价。如果发布旅游度假线路的宝贝，该字段可以忽略。</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>required</required>
<desc>商品属性列表。格式为：pid:vid;pid:vid。例如发布度假线路商品，那么这里就需要填写：出发地属性id:城市id;目的地市属性id:目的地市id;……等等。</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>required</required>
<desc>宝贝所在地省份。</desc>
</param>
<param>
<name>refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例，百分比%前的数字,1-100的正整数值。</desc>
</param>
<param>
<name>refund_regulation</name>
<type>String</type>
<required>required</required>
<desc>退改规定，不超过1500个字符。</desc>
</param>
<param>
<name>second_kill</name>
<type>String</type>
<required>optional</required>
<desc>商品秒杀三个值：可选类型web_only(只能通过web网络秒杀)，wap_only(只能通过wap网络秒杀)，web_and_wap(既能通过web秒杀也能通过wap秒杀)。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<max_list_size>20</max_list_size>
<desc>关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>shoping_info</name>
<type>String</type>
<required>optional</required>
<desc>购物店信息，不超过1500个字符。</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<max_list_size>380</max_list_size>
<desc>sku销售属性串对应的价格，精确到分，每一个属性串都会对应一个价格，单位为分。sku_prices的数组大小应该和sku_properties的数组大小一致。如果发布线路的商品，该字段可以忽略。</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<max_list_size>380</max_list_size>
<desc>Sku销售属性串，调用taobao.travel.itemsprops.get接口获取商品销售属性code，然后拼接成pid:vid;pid:vid格式。如果发布线路的商品，该字段可以忽略。</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<max_list_size>380</max_list_size>
<desc>Sku销售属性串对应的库存，每一个属性串都会对应一个库存，显然sku_quantities的数组大小应该和sku_properties的数组大小一致。如果发布线路的商品，该字段可以忽略。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改，集市卖家默认拍下减库存;商城卖家默认付款减库存。</desc>
</param>
<param>
<name>ticket_info</name>
<type>String</type>
<required>optional</required>
<desc>门票信息，不超过1500字符</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<desc>商品标题。</desc>
</param>
<param>
<name>verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款 1代表核销打款 0代表非核销打款。</desc>
</param>
</request>
<response>
<param>
<name>travel_items</name>
<type>TravelItems</type>
<level>Object</level>
<desc>旅游商品结构。</desc>
</param>
</response>
</api>
<api>
<name>taobao.travel.items.get</name>
<desc>此接口用于查询一个旅游度假线路商品信息，根据传入的商品数字ID查询商品信息，目前仅支持8个类目：国内跟团游、国内自由行、国内一日游、出境自由行、出境跟团游、境外跟团游、境外自由行、境外一日游商品的查询。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID。</desc>
</param>
</request>
<response>
<param>
<name>travel_items</name>
<type>TravelItems</type>
<level>Object</level>
<desc>旅游商品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.travel.items.update</name>
<desc>更新一个旅游度假线路商品，目前仅支持8个类目：国内跟团游、国内自由行、国内一日游、出境自由行、出境跟团游、境外跟团游、境外自由行、境外一日游商品的更新。</desc>
<request>
<param>
<name>add_combo_price_calendar</name>
<type>String</type>
<required>optional</required>
<desc>套餐价格日历增量更新字段，添加若干新套餐。（说明：如果使用增量更新字段，则全量更新字段combo_price_calendar不用设置，如果设置了则会优先使用全量更新），套餐价格日历json格式。如：{"combos":[{"combo_name":"套餐一","price_calendar":[{"child_num":100,"child_price":100,"date":"2012-06-08","diff_price":1000,"man_num":100,"man_price":1000},{"child_num":100,"child_price":100,"date":"2012-06-09","diff_price":1000,"man_num":100,"man_price":1000}]}]}</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale。</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数.</desc>
</param>
<param>
<name>choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄。</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属类目ID。发布旅游线路商品有两个值：1(国内线路类目ID)，2(国际线路类目ID)。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>宝贝所在地市。如果发布旅游度假线路的宝贝，该字段可以忽略。</desc>
</param>
<param>
<name>combo_price_calendar</name>
<type>String</type>
<required>optional</required>
<desc>Json串，全量更新套餐价格日历信息（针对旅游度假线路的销售属性），定义了两个套餐日历价格，套餐明分别为：套餐一和套餐二。如：{"combos":[{"combo_name":"套餐一","price_calendar":[{"child_num":100,"child_price":100,"date":"2012-06-08","diff_price":1000,"man_num":100,"man_price":1000},{"child_num":100,"child_price":100,"date":"2012-06-09","diff_price":1000,"man_num":100,"man_price":1000}]}]}</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>商品描述，不超过50000个字符。</desc>
</param>
<param>
<name>duration</name>
<type>Number</type>
<required>optional</required>
<desc>最晚成团提前天数，最小0天，最大为300天。</desc>
</param>
<param>
<name>empty_fields</name>
<type>String</type>
<required>optional</required>
<desc>支持宝贝信息的删除，各个参数的名称之间用【,】分割, 如果对应的参数有设置过值，即使在这个列表中，也不会被删除; 目前支持此功能的宝贝信息如下：locality_life表示删除电子凭证，merchant表示删除码商信息，refund_ratio表示删除电子凭证退款比例，network_id表示删除电子凭证网点信息,seller_cids表示删除关联店铺类目，outer_id表示删除商家外部编码，second_kill表示删除秒杀信息，input_pids表示删除用户自定义属性</desc>
</param>
<param>
<name>expirydate</name>
<type>String</type>
<required>optional</required>
<desc>电子交易凭证有效期，目前此字段只涉及到的信息为有效期; 如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 如果有效期为【购买成功日 至】类型则格式为2012-08-16 如果有效期为天数类型则格式为15。</desc>
</param>
<param>
<name>fee_include</name>
<type>String</type>
<required>optional</required>
<desc>费用包含，不超过1500个字符。</desc>
</param>
<param>
<name>fee_not_include</name>
<type>String</type>
<required>optional</required>
<desc>费用不包，不超过1500个字符。</desc>
</param>
<param>
<name>flight_info</name>
<type>String</type>
<required>optional</required>
<desc>机票信息，不超过1500字符</desc>
</param>
<param>
<name>gathering_place</name>
<type>String</type>
<required>optional</required>
<desc>集合地，不超过30个字符。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)。</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)。</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)，B商家不用设置该字段，均为true。</desc>
</param>
<param>
<name>hotel_info</name>
<type>String</type>
<required>optional</required>
<desc>酒店信息，不超过1500字符</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>商品主图。类型:JPG,GIF;最大长度:500k，支持的文件类型：gif,jpg,jpeg,png。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："2000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。在度假线路类目中，该属性ID为“自由行包含元素”或“一日游包含元素”属性ID。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，如“自定义自由行包含元素”。</desc>
</param>
<param>
<name>is_tdcy</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是铁定出游商品</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID。</desc>
</param>
<param>
<name>merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick。</desc>
</param>
<param>
<name>network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID。</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<desc>商品库存。如果发布旅游度假线路宝贝，该字段可以忽略，参考后面：add_combo_price_calendar,update_combo_price_calendar,remove_combo_price_calendar 这些字段去使用商品销售属性</desc>
</param>
<param>
<name>onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数。</desc>
</param>
<param>
<name>order_info</name>
<type>String</type>
<required>optional</required>
<desc>预定须知，不超过1500个字符。</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家的外部编码，最大为512字节。</desc>
</param>
<param>
<name>own_expense</name>
<type>String</type>
<required>optional</required>
<desc>自费项目，不超过1500个字符。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path。</desc>
</param>
<param>
<name>price</name>
<type>Number</type>
<required>optional</required>
<desc>商品一口价。如果发布旅游度假线路宝贝，该字段可以忽略，参考后面：add_combo_price_calendar,update_combo_price_calendar,remove_combo_price_calendar 这些字段去使用商品销售属性</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式为：pid:vid;pid:vid。例如发布旅游度假线路商品，那么这里就需要填写：出发地属性id:城市id;目的地市属性id:目的地市id;……等等。</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>optional</required>
<desc>宝贝所在地省份。如果发布旅游线路宝贝，该字段可以忽略。</desc>
</param>
<param>
<name>refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例，百分比%前的数字,1-100的正整数值。</desc>
</param>
<param>
<name>refund_regulation</name>
<type>String</type>
<required>optional</required>
<desc>退改规定，不超过1500个字符。</desc>
</param>
<param>
<name>remove_combo_price_calendar</name>
<type>String</type>
<required>optional</required>
<desc>套餐价格日历增量更新字段，删除若干套餐。（说明：如果使用增量更新字段，则全量更新字段combo_price_calendar不用设置，如果设置了则会优先使用全量更新）。删除时，需要设置套餐属性id（pid），套餐属性值id（vid）。格式为：pid:vid1;pid:vid2;pid:vid3。</desc>
</param>
<param>
<name>remove_props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性（不包含销售属性）增量更新字段，删除商品属性。（说明：如果使用增量更新字段，则全量更新字段props不用设置，如果设置了则会优先使用全量更新）。格式：pid1:vid1;pid2:vid2;pid3:vid3。</desc>
</param>
<param>
<name>second_kill</name>
<type>String</type>
<required>optional</required>
<desc>商品秒杀三个值：可选类型web_only(只能通过web网络秒杀)，wap_only(只能通过wap网络秒杀)，web_and_wap(既能通过web秒杀也能通过wap秒杀)。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>shoping_info</name>
<type>String</type>
<required>optional</required>
<desc>购物店信息，不超过1500个字符。</desc>
</param>
<param>
<name>sku_prices</name>
<type>Price</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>Sku销售属性串对应的价格，每一个属性串都会对应一个价格，精确到两位小数，单位为元。sku_prices的数组大小应该和sku_properties的数组大小一致。如果发布线路的商品，参考后面：add_combo_price_calendar,update_combo_price_calendar,remove_combo_price_calendar 这些字段去使用商品销售属性</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>Sku销售属性串，调用taobao.travel.itemsprops.get接口获取商品销售属性code，然后拼接成pid:vid;pid:vid格式。如果发布线路的商品，参考后面：add_combo_price_calendar,update_combo_price_calendar,remove_combo_price_calendar 这些字段去使用商品销售属性</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>Sku销售属性串对应的库存，每一个属性串都会对应一个库存，显然sku_quantities的数组大小应该和sku_properties的数组大小一致。如果发布线路的商品，参考后面：add_combo_price_calendar,update_combo_price_calendar,remove_combo_price_calendar 这些字段去使用商品销售属性</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改，集市卖家默认拍下减库存;商城卖家默认付款减库存。</desc>
</param>
<param>
<name>ticket_info</name>
<type>String</type>
<required>optional</required>
<desc>门票信息，不超过1500字符</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>商品标题。注意：在商品更新时，如果不设置该属性，默认不进行更新，下同。</desc>
</param>
<param>
<name>update_combo_price_calendar</name>
<type>String</type>
<required>optional</required>
<desc>否	套餐价格日历增量更新字段，更新若干套餐。（说明：如果使用增量更新字段，则全量更新字段combo_price_calendar不用设置，如果设置了则会优先使用全量更新），套餐价格日历json格式。更新时，需要设置套餐属性id（pid），套餐属性值id（vid），套餐名称可以不设置，设置了也会忽略，会以传入的pid和vid为准。如：{"combos":[{"combo_name":"套餐一","pid":102020,"vid":289129,"price_calendar":[{"child_num":100,"child_price":100,"date":"2012-06-08","diff_price":1000,"man_num":100,"man_price":1000},{"child_num":100,"child_price":100,"date":"2012-06-09","diff_price":1000,"man_num":100,"man_price":1000}]}]}</desc>
</param>
<param>
<name>update_or_add_props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性（不包含销售属性）增量更新字段，更新或者添加商品属性。（说明：如果使用增量更新字段，则全量更新字段props不用设置，如果设置了则会优先使用全量更新）。格式：pid1:vid1;pid2:vid2;pid3:vid3。对于重复设置的同一个属性的多个值，对于单选属性，则会以最后一个为准；对于多选，则会对该属性新增属性值。</desc>
</param>
<param>
<name>verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款 1代表核销打款 0代表非核销打款。</desc>
</param>
</request>
<response>
<param>
<name>travel_items</name>
<type>TravelItems</type>
<level>Object</level>
<desc>旅游商品结构。</desc>
</param>
</response>
</api>
<api>
<name>taobao.travel.itemsarea.get</name>
<desc>此接口用于获取卖家发布旅游度假线路商品时目的地地区级联信息。</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>商品所属叶子类目ID，支持旅游度假线路8个类目。</desc>
</param>
</request>
<response>
<param>
<name>travel_items_area_nodes</name>
<type>TravelItemsAreaNode</type>
<level>Object Array</level>
<desc>旅游度假商品地区（目的地）级联结构。</desc>
</param>
</response>
</api>
<api>
<name>taobao.travel.itemsprops.get</name>
<desc>此接口用于获取旅游商品类目属性信息。</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>商品所属叶子类目ID，支持旅游度假线路8个类目。</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>optional</required>
<desc>属性id (取某个类目属性时，传pid；若不传该值，返回该类目下所有属性)</desc>
</param>
</request>
<response>
<param>
<name>travel_items_props</name>
<type>TravelItemsProp</type>
<level>Object Array</level>
<desc>旅游商品类目属性结构。</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.goods.info.get</name>
<desc>根据卖家id与appkey获取商品信息。</desc>
<response>
<param>
<name>results</name>
<type>LotteryWangcaiSellerGoodsInfo</type>
<level>Object Array</level>
<desc>查询的结果列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回列表的大小</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.goods.info.input</name>
<desc>录入参加送彩票商品信息，如果录入成功，返回true，如果录入失败，返回false，后端会根据商品id与赠送类型（goodsid_presenttype_uk）来决定是新增数据还是修改数据。</desc>
<request>
<param>
<name>act_end_date</name>
<type>String</type>
<required>required</required>
<desc>活动结束时间，格式需严格遵守yyyy-MM-dd HH:mm:ss，不可为空</desc>
</param>
<param>
<name>act_start_date</name>
<type>String</type>
<required>required</required>
<desc>活动开始时间，格式需严格遵守yyyy-MM-dd HH:mm:ss，不可为空</desc>
</param>
<param>
<name>goods_desc</name>
<type>String</type>
<required>optional</required>
<desc>店铺相关商品参加的送彩票活动描述</desc>
</param>
<param>
<name>goods_id</name>
<type>Number</type>
<required>required</required>
<desc>商品在淘宝的唯一id，不可为空</desc>
</param>
<param>
<name>goods_image</name>
<type>String</type>
<required>optional</required>
<desc>商品主图地址</desc>
</param>
<param>
<name>goods_price</name>
<type>Price</type>
<required>required</required>
<desc>商品价格,保留两位小数，不可为空</desc>
</param>
<param>
<name>goods_title</name>
<type>String</type>
<required>optional</required>
<desc>商品标题</desc>
</param>
<param>
<name>goods_type</name>
<type>Number</type>
<required>required</required>
<desc>商品类目编号，不可为空</desc>
</param>
<param>
<name>lottery_type_id</name>
<type>Number</type>
<required>required</required>
<desc>彩种id,不可为空</desc>
</param>
<param>
<name>present_type</name>
<type>Number</type>
<required>required</required>
<desc>赠送类型：0-满就送；1-好评送；2-分享送；3-游戏送；4-收藏送，不可为空</desc>
</param>
</request>
<response>
<param>
<name>input_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>录入操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.lottery.send</name>
<desc>卖家给买家送彩票，可以指定彩种和注数。赠送成功，返回true; 以下几种情况情况， 返回false: 注数超过100注、卖家未签署支付宝代扣协议、卖家或者买家信息不存在等。</desc>
<request>
<param>
<name>buyer_num_id</name>
<type>Number</type>
<required>required</required>
<desc>彩票接收方淘宝数字ID，不可为空、0和负数。</desc>
</param>
<param>
<name>lottery_type_id</name>
<type>Number</type>
<required>optional</required>
<desc>彩种ID，此彩种ID为彩票系统中的序号。</desc>
</param>
<param>
<name>seller_num_id</name>
<type>Number</type>
<required>required</required>
<desc>送彩方淘宝数字ID， 不可为空、0和负数。</desc>
</param>
<param>
<name>stake_count</name>
<type>Number</type>
<required>required</required>
<desc>彩票注数，不可为空、0和负数，最大值为100。</desc>
</param>
<param>
<name>sweety_words</name>
<type>String</type>
<required>optional</required>
<desc>送彩票给接收方的赠言。 不能超过50个字符，1个中文字符、1个英文字母及1个数字等均当作一个字符，如果超过，则会截取。</desc>
</param>
</request>
<response>
<param>
<name>send_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>赠送是否成功，成功为true, 否则为false</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.lottery.sendbynick</name>
<desc>卖家使用nick给买家送彩票，可以指定彩种和注数。赠送成功，返回true; 以下几种情况情况， 返回false: 注数超过100注、卖家未签署支付宝代扣协议、卖家或者买家信息不存在等。</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<desc>彩票接收方nick， 不可为空、""。</desc>
</param>
<param>
<name>lottery_type_id</name>
<type>Number</type>
<required>optional</required>
<desc>彩种ID，此彩种ID为彩票系统中的序号。</desc>
</param>
<param>
<name>stake_count</name>
<type>Number</type>
<required>required</required>
<desc>彩票注数，不可为空、0和负数，最大值为100。</desc>
</param>
<param>
<name>sweety_words</name>
<type>String</type>
<required>optional</required>
<desc>送彩票给接收方的赠言。 不能超过20个字符，1个中文字符、1个英文字母及1个数字等均当作一个字符，如果超过，则会截取。</desc>
</param>
</request>
<response>
<param>
<name>send_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>赠送是否成功，成功为true, 否则为false</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.lotterytypes.get</name>
<desc>获取彩票系统支持的可用于赠送的彩种列表</desc>
<response>
<param>
<name>results</name>
<type>LotteryType</type>
<level>Object Array</level>
<desc>彩种的数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>彩种个数</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.present.items.get</name>
<desc>查询卖家指定时间范围内的赠送订单列表, 只查询3个月以内的数据</desc>
<request>
<param>
<name>end_date</name>
<type>String</type>
<required>required</required>
<desc>赠送订单的截止时间，格式为yyyyMMdd, 距当前最长时间间隔是3个月，最近可以取当天的时间。不可为空。要求endDate-startDate必须&lt;=3个月，</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<desc>当前页码， 不可为空、0和负数。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<desc>每页的大小，不可为空、0和负数。最大为500，如果超过500，则取默认的500.</desc>
</param>
<param>
<name>start_date</name>
<type>String</type>
<required>required</required>
<desc>赠送订单的开始时间， 格式为yyyyMMdd, 距当前最长时间间隔是3个月， 最近可以取当天的时间. 不可为空。</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>LotteryWangcaiPresent</type>
<level>Object Array</level>
<desc>查询的结果列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回列表的大小</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.present.stat.get</name>
<desc>查询卖家一段时间内按天统计的彩票赠送数据，只支持查询90天以内的数据.</desc>
<request>
<param>
<name>days</name>
<type>Number</type>
<required>optional</required>
<desc>指定查询的天数，从当前日期（不包括当前日期）向前推算的天数，可为空。如果为空、0、负数或者大于90天，则设置为默认的90天。举例：当天是20120703， days=2， 则统计数据的日期为：20120702，20120701.</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>LotteryWangcaiPresentStat</type>
<level>Object Array</level>
<desc>查询的结果集</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询的结果集大小</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.present.win.items.get</name>
<desc>获取卖家赠送的中奖订单列表(90天以内)，支持两种方式查询： 
1.按num查询中奖订单，不支持分页。 
2.按date查询中奖订单或所有订单(以searchType区分)，支持分页。 
注意num与date只要传入一个即可，如果两个参数都传会以date方式查询。</desc>
<request>
<param>
<name>date</name>
<type>String</type>
<required>special</required>
<desc>查询日期，格式请严格遵守yyyy-MM-dd</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>special</required>
<desc>查询个数，最大值为500.如果为空、0和负数，则取默认值500</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>查询页码，空，零，负的情况默认为1（注意每页数据量为50）</desc>
</param>
<param>
<name>search_type</name>
<type>Number</type>
<required>optional</required>
<desc>0：查询中奖订单，1：查询所有订单，默认为0，注意按列表数量查询只会查询中奖订单。</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>LotteryWangcaiPresent</type>
<level>Object Array</level>
<desc>查询的结果集</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询的结果集大小</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.shop.info.input</name>
<desc>录入参加送彩票店铺信息，如果录入成功，返回true，如果录入失败，返回false，后端会根据卖家id与赠送类型（sellerid_presenttype_uk）来决定是新增数据还是修改数据。</desc>
<request>
<param>
<name>act_end_date</name>
<type>String</type>
<required>required</required>
<desc>活动结束时间，格式需严格遵守yyyy-MM-dd HH:mm:ss，不可为空</desc>
</param>
<param>
<name>act_start_date</name>
<type>String</type>
<required>required</required>
<desc>活动开始时间，格式需严格遵守yyyy-MM-dd HH:mm:ss，不可为空</desc>
</param>
<param>
<name>present_type</name>
<type>Number</type>
<required>required</required>
<desc>赠送类型：0-满就送；1-好评送；2-分享送；3-游戏送；4-收藏送，不可为空</desc>
</param>
<param>
<name>shop_desc</name>
<type>String</type>
<required>optional</required>
<desc>店铺参加的送彩票活动描述</desc>
</param>
<param>
<name>shop_name</name>
<type>String</type>
<required>optional</required>
<desc>店铺名称</desc>
</param>
<param>
<name>shop_type</name>
<type>Number</type>
<required>required</required>
<desc>店铺类目编号，不可为空</desc>
</param>
</request>
<response>
<param>
<name>input_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>录入操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.caipiao.signstatus.check</name>
<desc>检查用户是否签署了支付宝代扣协议。如果签署了，返回true; 如果没签署，返回false, 同时返回签署代扣协议的Url。</desc>
<response>
<param>
<name>sign</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否签署了支付宝代扣协议</desc>
</param>
<param>
<name>sign_url</name>
<type>String</type>
<level>Basic</level>
<desc>签署支付宝代扣协议的Url</desc>
</param>
</response>
</api>
<api>
<name>taobao.bill.accounts.get</name>
<desc>查询费用账户信息</desc>
<request>
<param>
<name>aids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>200</max_list_size>
<desc>需要获取的科目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段</desc>
</param>
</request>
<response>
<param>
<name>accounts</name>
<type>Account</type>
<level>Object Array</level>
<desc>返回的科目信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回记录行数</desc>
</param>
</response>
</api>
<api>
<name>taobao.bill.bill.get</name>
<desc>查询单笔账单明细</desc>
<request>
<param>
<name>bid</name>
<type>Number</type>
<required>required</required>
<desc>账单编号</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>传入需要返回的字段</desc>
</param>
</request>
<response>
<param>
<name>bill</name>
<type>Bill</type>
<level>Object</level>
<desc>账单明细</desc>
</param>
</response>
</api>
<api>
<name>taobao.bill.bills.get</name>
<desc>查询账单明细数据</desc>
<request>
<param>
<name>account_id</name>
<type>Number</type>
<required>optional</required>
<desc>科目编号</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>结束时间,限制:结束时间-开始时间不能大于1天(根据order_id或者trade_id查询除外)</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>传入需要返回的字段,参见Bill结构体</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<required>optional</required>
<desc>子订单编号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页数,建议不要超过100页,越大性能越低,有可能会超时</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小,默认40条,可选范围 ：40~100</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
<param>
<name>time_type</name>
<type>Number</type>
<required>optional</required>
<desc>查询条件中的时间类型:1-交易订单完成时间biz_time 2-支付宝扣款时间pay_time 如果不填默认为2即根据支付时间查询,查询的结果会根据该时间倒排序</desc>
</param>
<param>
<name>trade_id</name>
<type>Number</type>
<required>optional</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>bills</name>
<type>Bill</type>
<level>Object Array</level>
<desc>账单列表</desc>
</param>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页查询返回的结果数(0-100)。相同的查询时间段条件下，最大只能获取总共5000条记录。所以当大于等于5000时 ISV可以通过start_time及end_time来进行拆分，以保证可以查询到全部数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.bill.book.bill.get</name>
<desc>查询单笔虚拟账户明细</desc>
<request>
<param>
<name>bid</name>
<type>Number</type>
<required>required</required>
<desc>虚拟账户流水编号</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段:参见BookBill结构体</desc>
</param>
</request>
<response>
<param>
<name>bookbill</name>
<type>BookBill</type>
<level>Object</level>
<desc>虚拟账户账单</desc>
</param>
</response>
</api>
<api>
<name>taobao.bill.book.bills.get</name>
<desc>查询虚拟账户明细数据</desc>
<request>
<param>
<name>account_id</name>
<type>Number</type>
<required>required</required>
<desc>虚拟账户科目编号</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>记账结束时间,end_time与start_time相差不能超过30天</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<max_length>300</max_length>
<desc>需要返回的字段:bid,account_id,journal_type,amount,book_time,description,gmt_create,gmt_modified ,如果不是以上字段将自动忽略&lt;br /&gt; 支持的最大列表长度为：300</desc>
</param>
<param>
<name>journal_types</name>
<type>Number</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>明细流水类型:流水类型:101、可用金充值；102、可用金扣除；103、冻结；104、解冻；105、冻结金充值；106、冻结金扣除</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码,传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小,建议40~100,不能超过100</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>记账开始时间</desc>
</param>
</request>
<response>
<param>
<name>bills</name>
<type>BookBill</type>
<level>Object Array</level>
<desc>虚拟账户账单列表</desc>
</param>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>当前查询的结果数,非总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.qianniu.number.put</name>
<desc>ISV提供给卖家使用的业务数据，需要通过这个接口上传到千牛数据中心。</desc>
<request>
<param>
<name>data</name>
<type>String</type>
<required>required</required>
<desc>标准json格式的数组构成的字符串。每个元素为{user_id:****,field:"****",value:"****"}分别是用户的userid，数据的名称，以及数据的值。</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>是否上传成功。返回的是个json串，分别表示每条记录是否成功。</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.base.gateway.register</name>
<desc>用户接入时调用该 API 进行授权初始化的操作。 
调用该 API的目的是告知订单数据中心， 
外部用户需要的是哪个卖家的订单数据。 
同时告知我们对开放出去的该卖家的订单数据的负责用户是谁。 
"负责用户"可以是卖家本身。也可以是ISV。</desc>
<request>
<param>
<name>call_back_url</name>
<type>String</type>
<required>required</required>
<desc>用户应用的回调URL,若是普通OPEN-API用户(user_type=0)这个字段可以不填。但是若是JIP用户注册，也就是(user_type=1)时,则此字段必填。否则调用不会成功。</desc>
</param>
<param>
<name>char_set</name>
<type>String</type>
<required>optional</required>
<desc>字符集编码GBK,UTF-8默认,GB2312</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>用户所在的城市</desc>
</param>
<param>
<name>content_type</name>
<type>String</type>
<required>optional</required>
<desc>数据格式:XML,JSON。 
默认:JSON</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>required</required>
<desc>接入方式描述，为了更好的方便我们为您服务请务必详细描述下您的APP情况。</desc>
</param>
<param>
<name>district</name>
<type>String</type>
<required>optional</required>
<desc>用户所在区域</desc>
</param>
<param>
<name>email</name>
<type>String</type>
<required>required</required>
<desc>用户的联系邮箱</desc>
</param>
<param>
<name>max_flow</name>
<type>Number</type>
<required>optional</required>
<desc>暂时还没有支持</desc>
</param>
<param>
<name>mobile</name>
<type>String</type>
<required>required</required>
<desc>用户手机号码</desc>
</param>
<param>
<name>notify_type</name>
<type>String</type>
<required>required</required>
<desc>用户通知接收方式,邮件,电话或者其他。 
email:邮件; 
message:短信; 
aliwangwang:阿里旺旺弹出消息。</desc>
</param>
<param>
<name>principal</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名</desc>
</param>
<param>
<name>telephone</name>
<type>String</type>
<required>optional</required>
<desc>用户联系电话-座机</desc>
</param>
<param>
<name>topic</name>
<type>String</type>
<required>required</required>
<desc>接口/api名称: 
天猫退款消息可选值为: 
tmall.eai.order.refund.refundBill.push 
tmall.eai.order.refund.refundStatus.push</desc>
</param>
<param>
<name>topic_group</name>
<type>String</type>
<required>optional</required>
<desc>Topic组.暂时还不能支持.</desc>
</param>
<param>
<name>url_protocal</name>
<type>String</type>
<required>optional</required>
<desc>url协议 
HTTP默认</desc>
</param>
<param>
<name>user_type</name>
<type>Number</type>
<required>optional</required>
<desc>0:普通TOP-OPEN-API用户; 
1:JIP用户。</desc>
</param>
</request>
<response>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>操作插入删除或者更新的记录数</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用结果成功与否</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.agree</name>
<desc>同意退款接口，此接口只能子帐号授权来调用，需要主帐号给子帐号相应的权限。</desc>
<request>
<param>
<name>code</name>
<type>String</type>
<required>optional</required>
<desc>短信验证码</desc>
</param>
<param>
<name>refund_infos</name>
<type>String</type>
<required>required</required>
<desc>需要退款的退款ID|其对应的金额|对应版本号列表|退款阶段（onsale\aftersale），其中金额以分为单位，ID与金额以“|”符号分隔，多笔订单以“,”分隔。允许批量操作30笔，最大金额1W。</desc>
</param>
</request>
<response>
<param>
<name>code</name>
<type>Number</type>
<level>Basic</level>
<desc>操作结果编码</desc>
</param>
<param>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>接口调用结果</desc>
</param>
<param>
<name>result_list</name>
<type>RefundAgreeResult</type>
<level>Object Array</level>
<desc>同意退款结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.billsum.get</name>
<desc>查询退货单 或者 退款单数量</desc>
<request>
<param>
<name>bill_type</name>
<type>String</type>
<required>required</required>
<desc>查找数量的单据类型 refund_bill:退款单， return_bill:退货单</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>批量查询结束时间</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>批量查询开始时间</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退货单 退款单状态</desc>
</param>
</request>
<response>
<param>
<name>bill_sum</name>
<type>Number</type>
<level>Basic</level>
<desc>总数</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.examine</name>
<desc>退款单审核结果回写，标记前端批量可退款</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<desc>审核留言</desc>
</param>
<param>
<name>operator</name>
<type>String</type>
<required>required</required>
<desc>审核人姓名</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
<param>
<name>refund_version</name>
<type>Number</type>
<required>required</required>
<desc>退款版本号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.examine.cancel</name>
<desc>退款单反审核结果回写</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<desc>反审核留言</desc>
</param>
<param>
<name>operator</name>
<type>String</type>
<required>required</required>
<desc>反审核人姓名</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
<param>
<name>refund_version</name>
<type>Number</type>
<required>required</required>
<desc>退款版本号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.get</name>
<desc>查询单笔退款单</desc>
<request>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
</request>
<response>
<param>
<name>refund_bill</name>
<type>RefundBill</type>
<level>Object</level>
<desc>退款单</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.good.return.agree</name>
<desc>卖家同意退货</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<desc>同意退货留言</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
<param>
<name>refund_version</name>
<type>Number</type>
<required>required</required>
<desc>退款版本号</desc>
</param>
<param>
<name>seller_logistics_address_id</name>
<type>Number</type>
<required>required</required>
<desc>卖家收货地址编号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.good.return.check</name>
<desc>卖家验货回写订单号</desc>
<request>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司编号</desc>
</param>
<param>
<name>confirm_result</name>
<type>Number</type>
<required>required</required>
<desc>1.验货通过 
2.验货不通过</desc>
</param>
<param>
<name>confirm_time</name>
<type>Date</type>
<required>required</required>
<desc>验货时间</desc>
</param>
<param>
<name>operator</name>
<type>String</type>
<required>optional</required>
<desc>验货人员</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
<param>
<name>sid</name>
<type>String</type>
<required>required</required>
<desc>物流运单号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.good.return.get</name>
<desc>查询单笔退货单</desc>
<request>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
</request>
<response>
<param>
<name>return_bill</name>
<type>ReturnBill</type>
<level>Object</level>
<desc>退货单</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.good.return.mget</name>
<desc>批量退货单查询</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>批量查询结束时间</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>40</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:10;最大值:40&lt;br /&gt; 支持最大值为：40&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>批量查询开始时间</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退货单 退款单状态</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量退款，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否用下一页</desc>
</param>
<param>
<name>return_bill_list</name>
<type>ReturnBill</type>
<level>Object Array</level>
<desc>退货单列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询总数</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.good.return.refuse</name>
<desc>卖家拒绝退货</desc>
<request>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
<param>
<name>refund_version</name>
<type>Number</type>
<required>required</required>
<desc>退款版本号</desc>
</param>
<param>
<name>refuse_message</name>
<type>String</type>
<required>required</required>
<desc>拒绝退款原因留言</desc>
</param>
<param>
<name>refuse_proof</name>
<type>byte[]</type>
<required>required</required>
<desc>拒绝退款举证上传</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.message.get</name>
<desc>退款留言查询</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>40</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:40&lt;br /&gt; 支持最大值为：40&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
</request>
<response>
<param>
<name>message_list</name>
<type>TmallRefundMessage</type>
<level>Object Array</level>
<desc>留言列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询总数，用于分页</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.mget</name>
<desc>批量查询退款单</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>批量查询结束时间。注：该字段对应为退款单更新时间，非退款单创建时间。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:10;最大值:40&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>批量查询开始时间。注：该字段对应为退款单更新时间，非退款单创建时间。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退货单 退款单状态</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量退款，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有下一页</desc>
</param>
<param>
<name>refund_bill_list</name>
<type>RefundBill</type>
<level>Object Array</level>
<desc>退款单列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询总数，用于分页</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.order.hold</name>
<desc>订单截停回写</desc>
<request>
<param>
<name>hold_result</name>
<type>Number</type>
<required>required</required>
<desc>1. 截停成功 
2. 截停失败</desc>
</param>
<param>
<name>hold_step</name>
<type>Number</type>
<required>required</required>
<desc>截停环节 
1. 订单处理环节 
2. 发货环节</desc>
</param>
<param>
<name>hold_time</name>
<type>Date</type>
<required>required</required>
<desc>截单时间</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>optional</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>String</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.refund.refuse</name>
<desc>卖家拒绝退款</desc>
<request>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单编号</desc>
</param>
<param>
<name>refund_phase</name>
<type>String</type>
<required>required</required>
<desc>售中：onsale 
售后：aftersale</desc>
</param>
<param>
<name>refund_version</name>
<type>Number</type>
<required>required</required>
<desc>退款版本号</desc>
</param>
<param>
<name>refuse_message</name>
<type>String</type>
<required>required</required>
<desc>拒绝退款原因留言</desc>
</param>
<param>
<name>refuse_proof</name>
<type>byte[]</type>
<required>required</required>
<desc>拒绝退款举证上传</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>tmall.eai.order.register</name>
<desc>修改某个用户订阅的天猫退款的信息。 
可以追加某个事件订阅也可以去掉某个事件订阅。 
体现在参数action 里面: 
0:取消订阅;1:订阅。</desc>
<request>
<param>
<name>action</name>
<type>Number</type>
<required>required</required>
<desc>对传入的事件的操作类型 0:取消订阅;1:订阅</desc>
</param>
<param>
<name>data_mode</name>
<type>Number</type>
<required>optional</required>
<max_length>50</max_length>
<desc>1:主订单模式; 
2:子订单模式; 
天猫退款消息订阅默认子订单模式。 
不传入即可。&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>event_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>需要订阅或者取消订阅的事件名称。 
可选择的值如下所示: 
RcRefundClosedEvent; 
RcRefundPrepaidEvent; 
RcReturnCreatedEvent; 
RcRefundSucceedEvent; 
RcRefundCreatedEvent; 
RcRefundModifiedEvent; 
RcReturnModifiedEvent; 
RcRefundSellerRefuseEvent; 
RcReturnConfirmFailedEvent; 
RcRefundTaobaoInvolvedEvent; 
RcRefundMessageCreatedEvent; 
RcReturnConfirmSucceedEvent; 
RcRefundPaymentFinishedEvent; 
RcRefundRefundableMarkedEvent; 
RcReturnBuyerReturnGoodsEvent; 
RcRefundSellerAgreeReturnEvent; 
RcRefundRefundableCanceledEvent;&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>topic</name>
<type>String</type>
<required>required</required>
<desc>天猫退款订单可选topic: 
tmall.eai.order.refund.refundBill.push; 
tmall.eai.order.refund.refundStatus.push</desc>
</param>
<param>
<name>user_type</name>
<type>Number</type>
<required>optional</required>
<desc>标识出用户类型。 
这里“用户”指的是外部开发者。 
0:TOP-OPEN-API 用户 
1:JIP用户</desc>
</param>
</request>
<response>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>操作插入删除或者更新的记录数</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用结果成功与否</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.group.add</name>
<desc>为已开通用户添加用户分组</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>分组名称，同一个应用下需要保证唯一性，最长32个字符。添加分组后，消息通道会为用户的消息分配独立分组，但之前的消息还是存储于默认分组中。不能以default开头，default开头为系统默认组。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>用户昵称列表，以半角逗号分隔，支持子账号，支持增量添加用户</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</param>
<param>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>分组名称</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.group.delete</name>
<desc>删除指定的分组或分组下的用户</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<desc>分组名称，分组删除后，用户的消息将会存储于默认分组中。警告：由于分组已经删除，用户之前未消费的消息将无法再获取。不能以default开头，default开头为系统默认组。</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>用户列表，不传表示删除整个分组，如果用户全部删除后，也会自动删除整个分组</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.groups.get</name>
<desc>获取自定义用户分组列表</desc>
<request>
<param>
<name>group_names</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>要查询分组的名称，多个分组用半角逗号分隔，不传代表查询所有分组信息，但不会返回组下面的用户信息。如果应用没有设置分组则返回空。组名不能以default开头，default开头是系统默认的组。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页返回多少个分组&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>groups</name>
<type>TmcGroup</type>
<level>Object Array</level>
<desc>分组列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>分组总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.message.produce</name>
<desc>发布单条消息</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<max_length>2000</max_length>
<desc>消息内容的JSON表述，必须按照topic的定义来填充&lt;br /&gt; 支持最大长度为：2000&lt;br /&gt; 支持的最大列表长度为：2000</desc>
</param>
<param>
<name>topic</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<desc>发布消息关联的主题&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.messages.confirm</name>
<desc>确认消费消息的状态</desc>
<request>
<param>
<name>f_message_ids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>200</max_list_size>
<desc>处理失败的消息ID列表</desc>
</param>
<param>
<name>group_name</name>
<type>String</type>
<required>optional</required>
<desc>分组名称，不传代表默认分组</desc>
</param>
<param>
<name>s_message_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>处理成功的消息ID列表
最大 200个ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.messages.consume</name>
<desc>消费多条消息</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>optional</required>
<desc>用户分组名称，不传表示消费默认分组，如果应用没有设置用户分组，传入分组名称将会返回错误</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>10</min_value>
<desc>每次批量消费消息的条数&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：10</desc>
</param>
</request>
<response>
<param>
<name>messages</name>
<type>TmcMessage</type>
<level>Object Array</level>
<desc>消息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.user.cancel</name>
<desc>取消用户的消息服务</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户昵称，支持子账号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功,如果为false并且没有错误码，表示删除的用户不存在。</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.user.get</name>
<desc>查询指定用户开通的消息通道和组</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表，多个字段以半角逗号分隔。可选值：TmcUser结构体中的所有字段，一定要返回topic。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>用户昵称&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>tmc_user</name>
<type>TmcUser</type>
<level>Object</level>
<desc>开通的用户数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.user.permit</name>
<desc>为已授权的用户开通消息服务</desc>
<request>
<param>
<name>topics</name>
<type>String</type>
<required>optional</required>
<max_list_size>100</max_list_size>
<desc>消息主题列表，用半角逗号分隔。当用户订阅的topic是应用订阅的子集时才需要设置，不设置表示继承应用所订阅的所有topic，一般情况建议不要设置。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebook.file.upload.chunk</name>
<desc>上传电子书文件块</desc>
<request>
<param>
<name>chunk_count</name>
<type>Number</type>
<required>required</required>
<desc>文件块总数</desc>
</param>
<param>
<name>chunk_data</name>
<type>byte[]</type>
<required>required</required>
<desc>传输文件块，除最后一块外每块的大小 必须为 4MB</desc>
</param>
<param>
<name>chunk_md5</name>
<type>String</type>
<required>required</required>
<desc>文件块的MD5</desc>
</param>
<param>
<name>file_id</name>
<type>String</type>
<required>optional</required>
<desc>文件的ID，上传第一个文件块生成放回，在上传后续文件块时此参数必选</desc>
</param>
<param>
<name>file_name</name>
<type>String</type>
<required>required</required>
<desc>文件名</desc>
</param>
<param>
<name>file_size</name>
<type>Number</type>
<required>required</required>
<desc>文件大小（非文件块大小）</desc>
</param>
<param>
<name>sequence</name>
<type>Number</type>
<required>required</required>
<desc>文件块序号</desc>
</param>
</request>
<response>
<param>
<name>file_id</name>
<type>String</type>
<level>Basic</level>
<desc>文件ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebook.yunpan.token.get</name>
<desc>获取云盘的token信息</desc>
<request>
<param>
<name>client_id</name>
<type>String</type>
<required>required</required>
<desc>申请云盘应用的client_id</desc>
</param>
</request>
<response>
<param>
<name>ebook_yunpan_token</name>
<type>EbookYunpanToken</type>
<level>Object</level>
<desc>访问云盘的token信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebookmedia.chapter.add</name>
<desc>添加电子书的章节信息</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书商品ID</desc>
</param>
<param>
<name>book_price</name>
<type>Price</type>
<required>optional</required>
<desc>电子书完本价格。当状态为完本（即status=3）时，必填；只支持两位小数点的正数，例如：12.50</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>special</required>
<desc>章节内容，最大长度不超过50000个字符</desc>
</param>
<param>
<name>content_url</name>
<type>String</type>
<required>special</required>
<desc>章节内容地址,只有通过授权的用户才可以传入此参数,不能超过500个字符</desc>
</param>
<param>
<name>cp_cid</name>
<type>Number</type>
<required>required</required>
<desc>第三方的章节ID。不能为空，必须是大于0的数字，同一个商品下不能重复</desc>
</param>
<param>
<name>is_free</name>
<type>Number</type>
<required>required</required>
<desc>是否免费.值只能是0或者1 
0：收费，1：免费</desc>
</param>
<param>
<name>pre_tbid</name>
<type>Number</type>
<required>required</required>
<desc>上一章节的淘宝地址id。不能为空，若添加的章节是第一章，则填0</desc>
</param>
<param>
<name>price_count</name>
<type>Number</type>
<required>required</required>
<desc>章节的收费字数</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>required</required>
<desc>电子书状态。目前仅支持以下三种 
1：更新中，3：完本，2：暂停</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<desc>章节标题。不能为空，不超过30个字符</desc>
</param>
<param>
<name>volume_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书章节所属的卷ID</desc>
</param>
<param>
<name>word_count</name>
<type>Number</type>
<required>required</required>
<desc>章节的总字数。总字数必须大于或等于收费字数</desc>
</param>
</request>
<response>
<param>
<name>ebook_chapter</name>
<type>EbookMediaChapter</type>
<level>Object</level>
<desc>电子书章节信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebookmedia.chapter.delete</name>
<desc>删除连载电子书中的某一章节</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书商品数字ID</desc>
</param>
<param>
<name>tbid</name>
<type>Number</type>
<required>required</required>
<desc>章节的淘宝地址id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebookmedia.chapter.update</name>
<desc>更新电子章节信息</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书商品ID</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>章节内容，最大长度不超过50000个字符</desc>
</param>
<param>
<name>content_url</name>
<type>String</type>
<required>optional</required>
<desc>章节内容地址,只有通过授权的用户才可以传入此参数,不能超过500个字符</desc>
</param>
<param>
<name>is_free</name>
<type>Number</type>
<required>optional</required>
<desc>是否免费.值只能是0或者1 
0：收费，1：免费</desc>
</param>
<param>
<name>price_count</name>
<type>Number</type>
<required>optional</required>
<desc>章节的收费字数</desc>
</param>
<param>
<name>tbid</name>
<type>Number</type>
<required>required</required>
<desc>需要修改的章节的淘宝地址id。不能为空</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>章节标题。不能为空，不超过30个字符</desc>
</param>
<param>
<name>word_count</name>
<type>Number</type>
<required>optional</required>
<desc>章节的总字数。总字数必须大于或等于收费字数</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否修改成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebookmedia.file.query</name>
<desc>查询电子书文件信息</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书商品ID</desc>
</param>
</request>
<response>
<param>
<name>results</name>
<type>EbookMediaResource</type>
<level>Object Array</level>
<desc>查询的结果集</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebookmedia.resource.add</name>
<desc>为电子书添加资源文件入口</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书商品数字ID</desc>
</param>
<param>
<name>file_id</name>
<type>Number</type>
<required>special</required>
<desc>电子书文件云盘ID</desc>
</param>
<param>
<name>str_file_id</name>
<type>String</type>
<required>special</required>
<desc>文件ID</desc>
</param>
<param>
<name>suffix</name>
<type>String</type>
<required>required</required>
<desc>资源文件后缀名</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<desc>资源类型，（1：正文，0：试读)</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否修改成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ebookmedia.volume.add.or.update</name>
<desc>用户通过调用此API来添加或更新电子书卷信息</desc>
<request>
<param>
<name>auction_id</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>2000</max_length>
<desc>卷信息简介。不能超过2000个字符&lt;br /&gt; 支持最大长度为：2000&lt;br /&gt; 支持的最大列表长度为：2000</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<required>required</required>
<desc>卷序号ID。此序号ID必须按照数字顺序添加，不能跳过，若有重复则覆盖原来的卷信息,序号不能超过50</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>电子书卷标题，不能超过30个字符&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
</request>
<response>
<param>
<name>ebook_volume</name>
<type>EbookMediaVolume</type>
<level>Object</level>
<desc>电子书卷信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.ebook.add</name>
<desc>调用该接口 会创建一个普通的电子书商品（必须要有ISBN）</desc>
<request>
<param>
<name>copyright_end</name>
<type>Date</type>
<required>required</required>
<desc>版权到期时间，如2013-08-06</desc>
</param>
<param>
<name>copyright_files</name>
<type>byte[]</type>
<required>required</required>
<max_length>2097152</max_length>
<desc>版权文件。类型:jpg,png；大小不能超过2M&lt;br /&gt; 支持的文件类型为：jpg,png&lt;br /&gt; 支持的最大列表长度为：2097152</desc>
</param>
<param>
<name>cover</name>
<type>byte[]</type>
<required>optional</required>
<max_length>2097152</max_length>
<desc>商品主图片。类型:JPG,PNG;最大:2M，可以选择不填，不填，则获得默认封面图片&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：2097152</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>isbn</name>
<type>String</type>
<required>required</required>
<desc>电子书ISBN号</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>书名。长度不能超过60个字符&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是512个字节</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>电子书的售卖价格 
取值范围:0.00-9999.99;精确到2位小数;单位:元。如:5.07，表示:5元7分.</desc>
</param>
<param>
<name>probation</name>
<type>Number</type>
<required>required</required>
<desc>试读章节数，至少大于或等于1，最大值不能超过100</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>120</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构,仅有numIid和created返回</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.ebook.update</name>
<desc>调用该接口 会修改一个普通的电子书（含ISBN）商品</desc>
<request>
<param>
<name>cover</name>
<type>byte[]</type>
<required>optional</required>
<max_length>2097152</max_length>
<desc>商品主图片。类型:JPG,PNG;最大:2M，可以选择不填，不填，则获得默认封面图片&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：2097152</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>电子书商品数字id</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是512个字节</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>电子书的售卖价格 
取值范围:0.00-9999.99;精确到2位小数;单位:元。如:5.07，表示:5元7分.</desc>
</param>
<param>
<name>probation</name>
<type>Number</type>
<required>optional</required>
<desc>试读章节数，至少大于或等于1，不超过100</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>120</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.group.add</name>
<desc>创建粉丝分组</desc>
<request>
<param>
<name>expression</name>
<type>String</type>
<required>required</required>
<desc>分组的sql</desc>
</param>
<param>
<name>group_desc</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>组的描述&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>组的名字&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>是否添加成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.group.analyse</name>
<desc>粉丝透视</desc>
<request>
<param>
<name>analyze_expression</name>
<type>String</type>
<required>required</required>
<desc>透视的sql</desc>
</param>
<param>
<name>group_expression</name>
<type>String</type>
<required>required</required>
<desc>分组sql信息</desc>
</param>
</request>
<response>
<param>
<name>data_list</name>
<type>AnalyzeDO</type>
<level>Object</level>
<desc>透视返回结果</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.group.custom.add</name>
<desc>创建卖家自定义的分组，区别于系统内部已有的分组。</desc>
<request>
<param>
<name>group_desc</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<desc>所要创建自定义分组的描述&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>想要创建的自定义分组名称&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>user_list_file_content</name>
<type>byte[]</type>
<required>required</required>
<max_length>2097152</max_length>
<desc>上传的文件内容转换成的字节数组。文件需要使用UTF-8编码方式编写。其中内容为用户id或手机号用英文逗号连接起来的单行文本。&lt;br /&gt; 支持的最大列表长度为：2097152</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>新创建的自定义分组id，未生效。</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.group.delete</name>
<desc>删除用户粉丝分组</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>需要删除的用户分组ID，必须为当前操作用户的粉丝分组ID&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>业务是否执行成功，result仅是系统调用是否成功</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.group.get</name>
<desc>查询分组</desc>
<request>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>分组状态</desc>
</param>
</request>
<response>
<param>
<name>group_list</name>
<type>CloudGroup</type>
<level>Object Array</level>
<desc>分组列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.group.getbyid</name>
<desc>根据id获取分组信息,分组的状态 0 标示创建中 1表示生效 3表示生效失败</desc>
<request>
<param>
<name>group_id</name>
<type>String</type>
<required>required</required>
<desc>分组id</desc>
</param>
</request>
<response>
<param>
<name>group_list</name>
<type>CloudGroup</type>
<level>Object Array</level>
<desc>分组列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.cloudtags.tags.get</name>
<desc>获取标签列表</desc>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
<param>
<name>tag_list</name>
<type>CloudsTag</type>
<level>Object Array</level>
<desc>具体的标签数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.comments.get</name>
<desc>通过top接口查询微淘feed的评论列表，包括评论内容详情</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>翻页时当前页，如果time_stamp参数不设置，此值必需传入&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>direction</name>
<type>Number</type>
<required>optional</required>
<max_length>2</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>向前后翻页，direction=0，向上翻;direction=1 向下翻&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：2</desc>
</param>
<param>
<name>feed_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>查询评论所对应feed的Id&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>翻页查询一页大小&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>time_stamp</name>
<type>Number</type>
<required>special</required>
<max_length>15</max_length>
<desc>翻页时间戳，没有时间参数，则说明是跳页查询或者第一页，current_page有效，direction无效；有时间参数，则说明是上下翻页，current_page无效，direction有效； 
如果current_page=1，则time_stamp无效，强制刷新为第一页。&lt;br /&gt; 支持的最大列表长度为：15</desc>
</param>
</request>
<response>
<param>
<name>comment_list</name>
<type>FeedComment</type>
<level>Object Array</level>
<desc>评论列表</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口执行是否成功</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>feed的总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.feed.add</name>
<desc>通过top接口发表微淘Feed</desc>
<request>
<param>
<name>cover_pic</name>
<type>String</type>
<required>required</required>
<max_length>1000</max_length>
<desc>封面图片地址，必须为自己在图片空间上传的图片&lt;br /&gt; 支持最大长度为：1000&lt;br /&gt; 支持的最大列表长度为：1000</desc>
</param>
<param>
<name>json_tiles</name>
<type>String</type>
<required>optional</required>
<max_length>3000</max_length>
<desc>feed的区域内容，有两种类型type=text或者type=pic。当type=text时，为文本内容，请输入description对应的文本值；当type=pic时，为图片内容，请输入pic对应的图片URL，图片的URL必须为当前操作用户(卖家)的图片空间图片地址,并且图片宽度要大于480，高宽比大于1/3小于2/3。支持type=text和type=pic的混排json&lt;br /&gt; 支持最大长度为：3000&lt;br /&gt; 支持的最大列表长度为：3000</desc>
</param>
<param>
<name>link</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>feed详情里允许放的一个超连接,不允许微信地址，最大长度256字符；输入link_desc后必须输入此参数&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>link_desc</name>
<type>String</type>
<required>optional</required>
<max_length>22</max_length>
<desc>link超连接的描述，最大长度15字符，utf-8,byte[]长度22，允许为空&lt;br /&gt; 支持最大长度为：22&lt;br /&gt; 支持的最大列表长度为：22</desc>
</param>
<param>
<name>show_detail</name>
<type>Boolean</type>
<required>optional</required>
<desc>手机等客户端是否能够查看feed详情，如果为false，在feeds流时点击就进入到插件详情地址，否则进入查看feed详情</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>发送的微淘内容的标题&lt;br /&gt; 支持最大长度为：64&lt;br /&gt; 支持的最大列表长度为：64</desc>
</param>
<param>
<name>url_param</name>
<type>String</type>
<required>optional</required>
<desc>业务参数，用key=value格式，有多个时用'&amp;'连接</desc>
</param>
</request>
<response>
<param>
<name>feed_id</name>
<type>Number</type>
<level>Basic</level>
<desc>发布feed成功后返回的feedId</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.feed.get</name>
<desc>通过top接口查询feed的详细内容</desc>
<request>
<param>
<name>feed_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>feed的Id&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>feed_detail</name>
<type>FeedDetail</type>
<level>Object</level>
<desc>feed的详细信息</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口执行是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.feed.isrelation</name>
<desc>判断用户是否关注对应的公共账号</desc>
<request>
<param>
<name>fans_nick</name>
<type>String</type>
<required>required</required>
<desc>要查询的粉丝的淘宝昵称</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>required</required>
<desc>要查询的公共账号的淘宝昵称</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Number</type>
<level>Basic</level>
<desc>是否关注</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.feed.remained</name>
<desc>获取当前登录用户还能发送多少条Feed</desc>
<response>
<param>
<name>remained_count</name>
<type>Number</type>
<level>Basic</level>
<desc>今天还能发送多少条Feed</desc>
</param>
<param>
<name>send_count</name>
<type>Number</type>
<level>Basic</level>
<desc>今天发送的Feed的数目</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.feeds.get</name>
<desc>通过top接口查询feed列表,只返回title和feedId</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>special</required>
<desc>翻页时当前页，如果time_stamp参数不设置，此值必需传入</desc>
</param>
<param>
<name>direction</name>
<type>Number</type>
<required>optional</required>
<max_length>2</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>向前后翻页，direction=1，向上翻;direction=0 向下翻&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：2</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_length>3</max_length>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>翻页查询一页大小&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：3</desc>
</param>
<param>
<name>time_stamp</name>
<type>Number</type>
<required>special</required>
<max_length>15</max_length>
<desc>翻页时间戳，没有时间参数，则说明是跳页查询或者第一页，current_page有效，direction无效；有时间参数，则说明是上下翻页，current_page无效，direction有效&lt;br /&gt; 支持的最大列表长度为：15</desc>
</param>
</request>
<response>
<param>
<name>feed_list</name>
<type>SimpleFeed</type>
<level>Object Array</level>
<desc>返回的feed列表</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口执行是否成功</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>feed的总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.menu.create</name>
<desc>创建菜单</desc>
<request>
<param>
<name>menu_string</name>
<type>String</type>
<required>required</required>
<desc>[{
    "name": "来吧少年",
    "sub_button": [
    {
        "features": 
        {
            "3": "1388726770350003001",
            "2": "1388726770350003001",
            "1": "1388726770350003001",
            "0": "1388726770350003001",
            "4": "1388726770350003001"
        },
        "name": "来吧少年快点击",
        "type": "click"
    },
    {
        "name": "来吧少年新网面",
        "type": "view",
        "url": "http://www.taobao.com"
    }]
}, 
{
    "name": "来吧妹纸",
    "sub_button": [
    {
        "features":
         {
            "3": "1388726414653004002",
            "2": "1388726414653004002",
            "1": "1388726414653004002",
            "0": "1388726414653004002",
            "4": "1388726414653004002"
        },
        "name": "来吧妹纸快点",
        "type": "click"
    }, 
    {
        "name": "来吧妹纸新网页",
        "type": "view",
        "url": "http://www.taobao.com"
    }]
 },
 {
    "name": "阿加西",
    "type": "view",
    "url": "http://www.taobao.com"
}]</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
<param>
<name>menu</name>
<type>String</type>
<level>Basic</level>
<desc>菜单</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.menu.delete</name>
<desc>删除菜单</desc>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.weitao.menu.query</name>
<desc>查询自定义菜单</desc>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
<param>
<name>menu</name>
<type>String</type>
<level>Basic</level>
<desc>菜单数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wireless.bunting.item.shorturl.create</name>
<desc>通过商品id生成短链，用户点击短链后直接跳转手淘客户端，未安装则跳转下载页</desc>
<request>
<param>
<name>item_id</name>
<type>String</type>
<required>optional</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>shorturl</name>
<type>String</type>
<level>Basic</level>
<desc>短地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.wireless.bunting.shop.shorturl.create</name>
<desc>通过店铺id取得短链</desc>
<request>
<param>
<name>shop_id</name>
<type>String</type>
<required>optional</required>
<desc>商店id</desc>
</param>
</request>
<response>
<param>
<name>shorturl</name>
<type>String</type>
<level>Basic</level>
<desc>短链</desc>
</param>
</response>
</api>
<api>
<name>taobao.wireless.qrcode.get</name>
<desc>为ISV提供可以唤醒主客的二维码服务</desc>
<request>
<param>
<name>height</name>
<type>Number</type>
<required>required</required>
<desc>二维码高度</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户的淘宝nick</desc>
</param>
<param>
<name>urlparam</name>
<type>String</type>
<required>optional</required>
<desc>url参数</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>required</required>
<desc>二维码宽度</desc>
</param>
</request>
<response>
<param>
<name>module</name>
<type>String</type>
<level>Basic</level>
<desc>二维码图片地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.custom.publish</name>
<desc>发布自定义类型的内容</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<max_length>5</max_length>
<desc>内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<max_length>20000</max_length>
<desc>自定义内容的正文，数值为文本内容（html形式），长度限制为[100,20000] (单位是字符，不区分中英文), 内容中不能有外链，不能有恶意脚本；内容中包含的商品链接系统自自动提取并保存起来;多个商品链接以空格隔开(如 href=http://detail.tmall.com/item.htm?id=35743839682 href=http://item.taobao.com/item.htm?id=36366644805 )&lt;br /&gt; 支持最大长度为：20000&lt;br /&gt; 支持的最大列表长度为：20000</desc>
</param>
<param>
<name>detailurl</name>
<type>String</type>
<required>required</required>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以英文逗号“,”分割。 
主要用于细化内容的分类（譬如小清新,棉质,雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>内容标题,标题的长度限制为(0,32](单位是字符，不区分中英文)&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>主键ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.custom.update</name>
<desc>修改自定义类型的内容</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<max_length>5</max_length>
<desc>内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<max_length>20000</max_length>
<desc>自定义内容的正文，数值为文本内容（html形式），长度限制为[100,20000] (单位是字符，不区分中英文), 内容中不能有外链，不能有恶意脚本；内容中包含的商品链接系统自自动提取并保存起来;多个商品链接以空格隔开(如 href=http://detail.tmall.com/item.htm?id=35743839682 href=http://item.taobao.com/item.htm?id=36366644805 )&lt;br /&gt; 支持最大长度为：20000&lt;br /&gt; 支持的最大列表长度为：20000</desc>
</param>
<param>
<name>detailurl</name>
<type>String</type>
<required>required</required>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以逗号“,”分割。 
主要用于细化内容的分类（譬如小清新，棉质、雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>内容标题,标题的长度限制为(0,32](单位是字符，不区分中英文)&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.deletebyid</name>
<desc>按主键删除内容</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容的主键ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.deletebyids</name>
<desc>按主键批量删除内容</desc>
<request>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>主键ID列表，以逗号,分割</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.deleteclass</name>
<desc>删除一个自定义分类</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<desc>分类名称</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.deletetag</name>
<desc>删除自定义标签</desc>
<request>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tagname</name>
<type>String</type>
<required>required</required>
<max_length>6</max_length>
<desc>标签名称&lt;br /&gt; 支持最大长度为：6&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.detail.get</name>
<desc>获取内容详情</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容的主键ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>SpContentDOForDetail</type>
<level>Object</level>
<desc>内容详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.getallclass</name>
<desc>获取用户创建的所有自定义分类</desc>
<request>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>返回Json格式的分类名称列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.getalltag</name>
<desc>获取所有的自定义标签</desc>
<request>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>返回JSON格式的TagName列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.getcount</name>
<desc>按条件统计内容数目</desc>
<request>
<param>
<name>query</name>
<type>String</type>
<required>required</required>
<desc>JSON格式的查询条件： 
type(Integer，选填) ：内容类型，包括三种： 1 -- 宝贝，2 -- 图片，3 -- 心得；0或者不填则获取所有类型的内容； 
   className(String，选填)：内容的自定义分类名称； 
   tags(String，选填)：内容的自定义标签名称，多个标签以逗号“,”分割。如果设置了多个标签，则他们是或的关系； 
   title(String，选填): 内容标题，此条件为模糊搜索， 慎用，可能比较慢； 
   comments (String，选填)：内容的推荐理由，此条件为模糊搜索，慎用，可能会比较慢</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>返回记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.getdetailbyid</name>
<desc>根据主键查找内容的详细信息</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容的主键ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>Json格式value (Map&lt;String,Object&gt;)：返回查询结果，具体包含的属性信息如下： 
id(Long)：内容的主键ID； 
type(Integer) ：内容类型； 
className(String)：内容的自定义分类名称； 
picUrl(String)：内容关联的图片地址，以“,”分割； 
title(String)：内容标题； 
comments(String)：内容推荐理由； 
featureMap(Map&lt;String,String&gt;)：内容的扩展属性； 
likeNum(Long)：内容喜欢数； 
viewNum(Long)：内容浏览数； 
commentNum(Long)：内容评论数； 
shareNum(Long)：内容分享数； 
gmtModified(Date)：修改时间； 
gmtCreate(Date) : 发布时间； 
content(String)：内容的心得（只有type = 3的时候才有此值）； 
tags(String)：内容的自定义标签，多个标签以“,”分割。； 
items(String)：内容关联的商品列表，数值为商品的detail链接地址，多个宝贝以“,”分割。</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.getpage</name>
<desc>分页查找内容</desc>
<request>
<param>
<name>pagerequest</name>
<type>String</type>
<required>required</required>
<desc>JOSN格式的分页参数： 
page： 查询起始页 &gt;=1  
rows： 分页大小 &lt;= 50 
sort : 排序字段，支持的排序类型包括：gmtModified – 最后修改时间；likeNum – 喜欢数；viewNum – 浏览数； 
order：排序方式：asc – 顺序；desc – 倒序</desc>
</param>
<param>
<name>query</name>
<type>String</type>
<required>required</required>
<desc>JSON格式的查询条件： 
type(Integer，选填) ：内容类型，包括三种： 1 -- 宝贝，2 -- 图片，3 -- 自定义，4 -- 图文； 
   className(String，选填)：内容的自定义分类名称； 
   tags(String，选填)：内容的自定义标签名称，多个标签以逗号“,”分割。如果设置了多个标签，则他们是或的关系； 
   title(String，选填): 内容标题，此条件为模糊搜索， 慎用，可能比较慢；</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>JSON格式的</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.graphic.publish</name>
<desc>U站发布图文类型的内容</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<max_length>5</max_length>
<desc>内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>contents</name>
<type>String</type>
<required>required</required>
<desc>图文内容，Json格式的数据。 
必须是数组类型元素列表。展示时每一个元素会单独一行显示。 
type: 表示图文元素的类型，目前支持3种类型的元素 
1:text;文本元素； 
2:image;图片元素； 
3:item;宝贝元素； 
 
value:表示图文类型的元素值。 
当类型为text时，value值就是文本类型字符串； 
当类型为image时，value值就是图片地址; 
当类型为item时，value值就是宝贝ID;</desc>
</param>
<param>
<name>coverpicurl</name>
<type>String</type>
<required>optional</required>
<desc>封面图片地址 图文的封面尺寸不能低于680*680，否则该条图文将无法同步至微淘 图片地址必须匹配正则表达式:http://(img01|img02|img03|img04|img1|img2|img3|img4)\.(taobaocdn|tbcdn)\.(com|net|cn).*</desc>
</param>
<param>
<name>detailurl</name>
<type>String</type>
<required>required</required>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</param>
<param>
<name>intimeline</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否要发送到微淘广播流</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以逗号“,”分割。 
主要用于细化内容的分类（譬如小清新，棉质、雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>内容标题,标题的长度限制为(0,32](单位是字符，不区分中英文)&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>主键ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.graphic.update</name>
<desc>修改图文发布类型的内容</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<max_length>5</max_length>
<desc>内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>contents</name>
<type>String</type>
<required>required</required>
<desc>图文内容，Json格式的数据。 
必须是数组类型元素列表。展示时每一个元素会单独一行显示。 
type: 表示图文元素的类型，目前支持3种类型的元素 
1:text;文本元素； 
2:image;图片元素； 
3:item;宝贝元素； 
 
value:表示图文类型的元素值。 
当类型为text时，value值就是文本类型字符串； 
当类型为image时，value值就是图片地址; 
当类型为item时，value值就是宝贝ID;</desc>
</param>
<param>
<name>coverpicurl</name>
<type>String</type>
<required>optional</required>
<desc>封面图片地址 
图文的封面尺寸不能低于680*680，否则该条图文将无法同步至微淘 
图片地址必须匹配正则表达式:http://(img01|img02|img03|img04|img1|img2|img3|img4)\.(taobaocdn|tbcdn)\.(com|net|cn).*</desc>
</param>
<param>
<name>detailurl</name>
<type>String</type>
<required>required</required>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容ID</desc>
</param>
<param>
<name>intimeline</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否要发送到微淘广播流</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以逗号“,”分割。 
主要用于细化内容的分类（譬如小清新，棉质、雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>内容标题,标题的长度限制为(0,32](单位是字符，不区分中英文)&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.item.publish</name>
<desc>U站发布宝贝类型的内容</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<max_length>5</max_length>
<desc>内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>comments</name>
<type>String</type>
<required>required</required>
<max_length>140</max_length>
<desc>内容的推荐理由。数值为文本内容,推荐理由的长度限制为[0,140](单位是字符，不区分中英文)，推荐理由中不能含有非法内容，不能含有恶意脚本&lt;br /&gt; 支持最大长度为：140&lt;br /&gt; 支持的最大列表长度为：140</desc>
</param>
<param>
<name>coverpicurl</name>
<type>String</type>
<required>optional</required>
<desc>封面图片地址 
图片地址必须匹配正则表达式:http://(img01|img02|img03|img04|img1|img2|img3|img4)\.(taobaocdn|tbcdn)\.(com|net|cn).*</desc>
</param>
<param>
<name>detailurl</name>
<type>String</type>
<required>required</required>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>宝贝ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以英文逗号“,”分割。 
主要用于细化内容的分类（譬如小清新,棉质,雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>内容标题,标题的长度限制为(0,32](单位是字符，不区分中英文)&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>主键ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.item.update</name>
<desc>修改宝贝类型的内容</desc>
<request>
<param>
<name>classname</name>
<type>String</type>
<required>required</required>
<max_length>5</max_length>
<desc>内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个&lt;br /&gt; 支持最大长度为：5&lt;br /&gt; 支持的最大列表长度为：5</desc>
</param>
<param>
<name>comments</name>
<type>String</type>
<required>required</required>
<max_length>140</max_length>
<desc>内容的推荐理由。数值为文本内容,推荐理由的长度限制为[0,140](单位是字符，不区分中英文)，推荐理由中不能含有非法内容，不能含有恶意脚本&lt;br /&gt; 支持最大长度为：140&lt;br /&gt; 支持的最大列表长度为：140</desc>
</param>
<param>
<name>coverpicurl</name>
<type>String</type>
<required>optional</required>
<desc>封面图片地址 
图片地址必须匹配正则表达式:http://(img01|img02|img03|img04|img1|img2|img3|img4)\.(taobaocdn|tbcdn)\.(com|net|cn).*</desc>
</param>
<param>
<name>detailurl</name>
<type>String</type>
<required>required</required>
<desc>内容的detail页面地址，数值为html链接，主要用于展现内容的detail信息的</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容ID</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>宝贝ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以逗号“,”分割。 
主要用于细化内容的分类（譬如小清新，棉质、雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>内容标题,标题的长度限制为(0,32](单位是字符，不区分中英文)&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.list.get</name>
<desc>内容列表查询</desc>
<request>
<param>
<name>pagerequest</name>
<type>String</type>
<required>required</required>
<desc>JOSN格式的分页参数： 
page： 查询起始页 &gt;=1  
rows： 分页大小 &lt;= 50 
sort : 排序字段(如果没有指定排序方式，默认按修改时间倒序)，支持的排序类型包括：gmtModified – 最后修改时间；likeNum – 喜欢数；viewNum – 浏览数； 
order：排序方式：asc – 顺序；desc – 倒序</desc>
</param>
<param>
<name>query</name>
<type>String</type>
<required>required</required>
<desc>JSON格式的查询条件： type(Integer，选填) ：内容类型，包括四种： 1 -- 宝贝，2 -- 图片，3 -- 自定义，4 -- 图文； className(String，选填)：内容的自定义分类名称；tags(String，选填)：内容的自定义标签名称，多个标签以逗号“,”分割。如果设置了多个标签，则他们是或的关系；title(String，选填): 内容标题，此条件为模糊搜索，慎用，可能比较慢；</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>contents</name>
<type>SpContentDOForList</type>
<level>Object Array</level>
<desc>内容列表</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.publish</name>
<desc>内容发布接口，能够新增或更新内容到建站平台的内容服务</desc>
<request>
<param>
<name>schema_name</name>
<type>String</type>
<required>required</required>
<desc>表示为内容类型，包括2种选项： 1(宝贝);3(自定义)</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以逗号“,”分割。 
主要用于细化内容的分类（譬如小清新，棉质、雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>value</name>
<type>String</type>
<required>required</required>
<desc>内容具体的信息，用json格式描述，kv对的方式: className(String，必填)：内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称 
 
的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个； detailUrl(String，必填)：内容的detail页面 
 
地址，数值为html链接，主要用于展现内容的detail信息的，此数值必须存在，它是U站首页或淘宝官网搜索到内容之后用户点击进入的跳转页面。（如果站点没有单个内容的detail页面，也可以直接填写站点首页）； items(String，宝贝必填)： 内容关联的商品，数值为商品的detail链接地址。此参数只有在type = 1 （即内容类型为宝贝）的时候才有效，宝贝只能并且必须 
 
关联一个商品；title(String，宝贝和自定义必填): 内容标题，数值为文本内容，此参数只有在type = 1或3（即内容类型为宝贝或自定义）的时候才有效，且标题的长度限制为(0,32](单位是字符，不区分中英文)，标题中不能含有非法内容，不能含有恶意脚本。 comments (String，宝贝必填)： 内容的推荐理由，数值为文本内容，此参数只有在type =1 （即内容类型为宝贝）的时候才有效，且推荐理由的长度限制为[0,140](单位是字符，不区分中英文)，推荐理由中不能含有非法内容，不能含有恶意脚本。 content(String，自定义必填)：数值为文本内容（html形式），此参数只有在type = 3（即内容类型为自定义）的时候才有效，且自定义长度限制为[100,20000] (单位是字符，不区分中英文), 自定义中不能有外链，不能有恶意脚本；自定义中包含的商品链接系统自自动提取并保存起来;多个商品链接以空格隔开(如 href=http://detail.tmall.com/item.htm?id=35743839682 href=http://item.taobao.com/item.htm?id=36366644805 )； coverPicUrl(String，宝贝选填)：封面图片地址。此参数只有在type = 1（即内容类型为宝贝）的时候才有效。图片地址必须 
 
匹配正则表达式:http://(img01|img02|img03|img04|img1|img2|img3|img4)\.(taobaocdn|tbcdn)\.(com|net|cn).*；</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>主键ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.update</name>
<desc>更新内容</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>内容的主键ID</desc>
</param>
<param>
<name>schema_name</name>
<type>String</type>
<required>required</required>
<desc>表示为内容类型，包括2种选项： 1(宝贝);3(自定义)</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>optional</required>
<desc>内容的自定义标签，数值为文本内容，多个标签以逗号“,”分割。  
主要用于细化内容的分类（譬如小清新，棉质、雪纺等），标签名称的长度限制为[0,6] (单位是字符，不区分中英文)，标签名称中不能包含非法内容，且一个内容关联的标签数目不能超过6个</desc>
</param>
<param>
<name>value</name>
<type>String</type>
<required>required</required>
<desc>内容具体的信息，用json格式描述，kv对的方式: className(String，必填)：内容的自定义分类，数值为文本内容，主要用于区分内容的分类（譬如连衣裙、T恤、阿迪达斯等），分类名称 
 
的长度限制为(0,5] (单位是字符，不区分中英文)，分类名称中不能包含非法内容，且一个站点下所拥有的总自定义分类数量不能超过16个； detailUrl(String，必填)：内容的detail页面 
 
地址，数值为html链接，主要用于展现内容的detail信息的，此数值必须存在，它是U站首页或淘宝官网搜索到内容之后用户点击进入的跳转页面。（如果站点没有单个内容的detail页面，也 
 
可以直接填写站点首页）； items(String，宝贝必填)： 内容关联的商品，数值为商品的detail链接地址。此参数只有在type = 1 （即内容类型为宝贝）的时候才有效，宝贝只能并且必须 
 
关联一个商品；title(String，宝贝和心得必填): 内容标题，数值为文本内容，此参数只有在type = 1或3（即内容类型为心得或宝贝）的时候才有效，且标题的长度限制为(0,30](单位是字 
 
符，不区分中英文)，标题中不能含有非法内容，不能含有恶意脚本。 comments (String，宝贝必填)： 内容的推荐理由，数值为文本内容，此参数只有在type =1 （即内 
 
容类型为宝贝）的时候才有效，且推荐理由的长度限制为[0,140](单位是字符，不区分中英文)，推荐理由中不能含有非法内容，不能含有恶意脚本。 content(String，心得必填)：内 
 
容的心得，数值为文本内容（html形式），此参数只有在type = 3（即内容类型为心得）的时候才有效，且心得长度限制为[100,20000] (单位是字符，不区分中英文), 心得中不能有外链， 
 
不能有恶意脚本；心得中包含的商品链接系统自自动提取并保存起来;多个商品链接以空格隔开(如 href=http://detail.tmall.com/item.htm?id=35743839682  
 
href=http://item.taobao.com/item.htm?id=36366644805 )； coverPicUrl(String，宝贝选填)：封面图片地址。此参数只有在type = 1（即内容类型为宝贝）的时候才有效。图片地址必须 
 
匹配正则表达式:http://(img01|img02|img03|img04|img1|img2|img3|img4)\.(taobaocdn|tbcdn)\.(com|net|cn).*；</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.updateclass</name>
<desc>更新自定义分类</desc>
<request>
<param>
<name>newname</name>
<type>String</type>
<required>required</required>
<desc>新分类名称</desc>
</param>
<param>
<name>oldname</name>
<type>String</type>
<required>required</required>
<desc>旧分类名称</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.content.updatetag</name>
<desc>更新自定义标签</desc>
<request>
<param>
<name>newname</name>
<type>String</type>
<required>required</required>
<max_length>6</max_length>
<desc>新的标签名称&lt;br /&gt; 支持最大长度为：6&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>oldname</name>
<type>String</type>
<required>required</required>
<max_length>6</max_length>
<desc>旧的标签名称&lt;br /&gt; 支持最大长度为：6&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站长Key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.item.extra.info.get</name>
<desc>获取商品的附加信息</desc>
<request>
<param>
<name>id</name>
<type>String</type>
<required>required</required>
<desc>商品ID,可批量查询, 多个商品ID中间用逗号分隔, 最多可查20个id, ID之间不能有空格</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<desc>每个站点的唯一Key(加密的site id)</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>返回Json格式的商品附加信息:itemId:商品ID ;tk:是否是淘客,0：非淘客；5：淘客; finalPrice:优惠后的价格, 如果没有优惠则为一口价; biz30day:  30天内总销售笔数; promotedService: 消保类型 1-先行赔付服务, 2-假一赔三服务, 4-七天无理由退货服务, 8-闪电发货服务, 16-数 码与家电30天维修服务; sellerId: 卖家数字ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.item.feed.info.get</name>
<desc>获取商品评价信息</desc>
<request>
<param>
<name>item_id</name>
<type>String</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>seller_id</name>
<type>String</type>
<required>required</required>
<desc>卖家数字ID</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<desc>每个站点的唯一Key(加密的site id)</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>分别返回好评,中评,差评最新的50条, type:评价类型 1好评 0中评 -1差评; nick: 评价者昵称; feedback: 评价内容; date: 评价时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.item.info.list.advanced.get</name>
<desc>多条件批量获取宝贝的信息,将用以取代taobao.sp.item.list.get接口</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<desc>商品所在地:省名</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>标准商品后台类目id。该ID可以通过taobao.itemcats.get接口获取到。</desc>
</param>
<param>
<name>end_commission_rate</name>
<type>String</type>
<required>optional</required>
<desc>佣金比率上限，如：2345表示23.45%。注：start_commissionRate和end_commissionRate一起设置才有效。</desc>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<required>optional</required>
<desc>可选值和start_credit一样.start_credit的值一定要小于或等于end_credit的值。注：end_credit与start_credit一起使用才生效</desc>
</param>
<param>
<name>end_price</name>
<type>String</type>
<required>optional</required>
<desc>最高价格</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>special</required>
<desc>商品标题中包含的关键字. 注意:查询时keyword,cid至少选择其中一个参数</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>结果页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页返回结果数.最大每页40</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站点key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>price_asc: 价格从低到高, 默认为折扣价格; sales_desc:销量从高到低; credit_desc:信用从高到低</desc>
</param>
<param>
<name>start_commission_rate</name>
<type>String</type>
<required>optional</required>
<desc>佣金比率下限，如：1234表示12.34%</desc>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<required>optional</required>
<desc>卖家信用: 1(一心) 2(两心) 3(三心) 4(四心) 5(五心) 6(一钻) 7(两钻) 8(三钻) 9(四钻) 10(五钻) 11(一冠) 12(两冠) 13(三冠) 14(四冠) 15(五冠) 16(一黄冠) 17(二黄冠) 18(三黄冠) 19(四黄冠) 20(五黄冠)</desc>
</param>
<param>
<name>start_price</name>
<type>String</type>
<required>optional</required>
<desc>起始价格, 默认为折扣价格.传入价格参数时,需注意起始价格和最高价格必须一起传入,并且 start_price &lt;= end_price</desc>
</param>
<param>
<name>tmall_item</name>
<type>String</type>
<required>optional</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>SpItemInfo</type>
<level>Object Array</level>
<desc>商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.item.info.list.get</name>
<desc>批量获取宝贝的信息，将来用于取代taobao.sp.item.extra.info.get 接口</desc>
<request>
<param>
<name>id</name>
<type>String</type>
<required>required</required>
<desc>商品ID,可批量查询, 多个商品ID中间用逗号分隔, 最多可查20个id, ID之间不能有空格</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<desc>每个站点的唯一Key(加密的site id)</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>SpItem</type>
<level>Object Array</level>
<desc>商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.item.list.get</name>
<desc>商品的多条件搜索</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<desc>商品所在地:省名</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>标准商品后台类目id。该ID可以通过taobao.itemcats.get接口获取到。</desc>
</param>
<param>
<name>end_biz30day</name>
<type>String</type>
<required>optional</required>
<desc>30天成交笔数(上限)</desc>
</param>
<param>
<name>end_commission_rate</name>
<type>String</type>
<required>optional</required>
<desc>佣金比率上限，如：2345表示23.45%。注：start_commissionRate和end_commissionRate一起设置才有效。</desc>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<required>optional</required>
<desc>可选值和start_credit一样.start_credit的值一定要小于或等于end_credit的值。注：end_credit与start_credit一起使用才生效</desc>
</param>
<param>
<name>end_price</name>
<type>String</type>
<required>optional</required>
<desc>最高价格</desc>
</param>
<param>
<name>hdfk</name>
<type>String</type>
<required>optional</required>
<desc>是否支持货到付款，设置为true表示该商品支持货到付款，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>jyps</name>
<type>String</type>
<required>optional</required>
<desc>是否支持假一赔三，设置为true表示该商品支持假一赔三，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>special</required>
<desc>商品标题中包含的关键字. 注意:查询时keyword,cid至少选择其中一个参数</desc>
</param>
<param>
<name>myf</name>
<type>String</type>
<required>optional</required>
<desc>是否免邮费，设置为true表示该商品免邮，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>结果页数.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页返回结果数.最大每页40</desc>
</param>
<param>
<name>qtth</name>
<type>String</type>
<required>optional</required>
<desc>是否支持七天退换，设置为true表示该商品支持七天退换，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>站点key&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>price_asc: 价格从低到高, 默认为折扣价格; sales_desc:销量从高到低; credit_desc:信用从高到低</desc>
</param>
<param>
<name>start_biz30day</name>
<type>String</type>
<required>optional</required>
<desc>30天成交笔数, 下限</desc>
</param>
<param>
<name>start_commission_rate</name>
<type>String</type>
<required>optional</required>
<desc>佣金比率下限，如：1234表示12.34%</desc>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<required>optional</required>
<desc>卖家信用: 1(一心) 2(两心) 3(三心) 4(四心) 5(五心) 6(一钻) 7(两钻) 8(三钻) 9(四钻) 10(五钻) 11(一冠) 12(两冠) 13(三冠) 14(四冠) 15(五冠) 16(一黄冠) 17(二黄冠) 18(三黄冠) 19(四黄冠) 20(五黄冠)</desc>
</param>
<param>
<name>start_price</name>
<type>String</type>
<required>optional</required>
<desc>起始价格, 默认为折扣价格.传入价格参数时,需注意起始价格和最高价格必须一起传入,并且 start_price &lt;= end_price</desc>
</param>
<param>
<name>tmall_item</name>
<type>String</type>
<required>optional</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>xfzbz</name>
<type>String</type>
<required>optional</required>
<desc>是否支持消费者保障，设置为true表示该商品支持消费者保障，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>zpbz</name>
<type>String</type>
<required>optional</required>
<desc>是否支持正品保障，设置为true表示该商品支持正品保障，设置为false或不设置表示不判断这个属性</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>{"sp_item_list_get_response":{"value":"[{\"itemId\":\"21\",\"sellerId\":\"20668\",\"nick\":\"zztest\",\"title\":\"淘女郎",\"price\":\"50.00\",\"finalPrice\":\"\",\"biz30day\":\"0\",\"tk\":\"5\",\"picUrl\":\"",\"itemUrl\":\"",\"shopUrl\":\""}]"}} 
itemId:商品ID; sellerId:卖家ID; nick:卖家昵称; title:商品标题; price:商品价格; finalPrice:商品优惠价格, 如果为空则无优惠; biz30day:30天内销售笔数; tk:0-非淘客商品,5-淘客商品; picUrl:图片地址; itemUrl:商品链接地址; shopUrl:店铺链接地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.service.site.get</name>
<desc>根据TaeSiteID查询站点信息</desc>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>返回站点信息的Json字符串</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.shop.extra.info.get</name>
<desc>根据nick获取店铺的附加信息</desc>
<request>
<param>
<name>shop_id</name>
<type>Number</type>
<required>required</required>
<desc>店铺编号。shop+sid.taobao.com即店铺地址，如shop123456.taobao.com</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<desc>每个站点的唯一Key(加密的site id)</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>String</type>
<level>Basic</level>
<desc>返回Json格式的店铺附加信息:tmall: 1:B商家，0：非B; sellerCredit: 卖家信用等级,如果是天猫店铺则返回空值; auctionCount: 店铺宝贝数 
srt:(本店)近30天平均退款速度; 
art:(行业)近30天行业平均退款速度; 
srtp:(本店)近30天平均退款率 = 近30天退款笔数/近30天支付宝成交笔数; 
arr:近30天行业平均退款率; 
ccp:(本店)近30天投诉率=近30天投诉总数/近30天支付宝成交笔数; 
acr:(行业)近30天行业平均投诉率; 
punc:(本店)近30天被处罚总数; 
apts:(行业)近30天行业平均处罚次数; 
gerd:(本店)店铺好评率，即店铺累计好评数/店铺评价总数; 
iasgr:(行业)好评率（行业平均）,加载周期：周</desc>
</param>
</response>
</api>
<api>
<name>taobao.sp.shop.info.get</name>
<desc>根据nick获取店铺的附加信息,将用于取代taobao.sp.shop.extra.info.get接口</desc>
<request>
<param>
<name>shop_id</name>
<type>Number</type>
<required>required</required>
<desc>店铺编号。shop+sid.taobao.com即店铺地址，如shop123456.taobao.com</desc>
</param>
<param>
<name>site_key</name>
<type>String</type>
<required>required</required>
<desc>每个站点的唯一Key(加密的site id)</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>SpShop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.media.upload</name>
<desc>来往多媒体文件上传接口</desc>
<request>
<param>
<name>media</name>
<type>byte[]</type>
<required>required</required>
<desc>需要上传的文件内容.</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>多媒体文件类型，目前支持: image(图片),audio(音频),video(视频)</desc>
</param>
</request>
<response>
<param>
<name>mediaid</name>
<type>String</type>
<level>Basic</level>
<desc>多媒体文件上传后返回的文件标识.</desc>
</param>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>访问上传文件的url路径信息.</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.pp.menu.add</name>
<desc>来往公众账号菜单创建接口：   
1. 每个公众账号仅能创建一个公众账号菜单 
2. 若存在菜单，再次调用该接口则返回之前的菜单定义</desc>
<request>
<param>
<name>menudef</name>
<type>String</type>
<required>required</required>
<desc>菜单的定义,将定义转换成对应的json格式传入。</desc>
</param>
</request>
<response>
<param>
<name>issuccess</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.pp.menu.create</name>
<desc>来往公众账号菜单创建接口：   
1. 每个公众账号仅能创建一个公众账号菜单 
2. 若存在菜单，再次调用该接口则返回之前的菜单定义</desc>
<request>
<param>
<name>menudef</name>
<type>String</type>
<required>required</required>
<desc>菜单的定义,将定义转换成对应的json格式传入。</desc>
</param>
</request>
<response>
<param>
<name>issuccess</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.pp.menu.get</name>
<desc>来往公众平台菜单获取API 
获取当前用户创建过的菜单数据.</desc>
<response>
<param>
<name>menu</name>
<type>LaiwangPPMenu</type>
<level>Object</level>
<desc>所创建菜单的结构化json串数据.</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.pp.menu.remove</name>
<desc>来往公众平台菜单删除API, 
删除当前用户创建过的菜单数据.</desc>
<response>
<param>
<name>deletedcount</name>
<type>Number</type>
<level>Basic</level>
<desc>删除成功的菜单数量</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.pp.message.send</name>
<desc>来往公众账号1对1消息发送接口</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<desc>发送的消息体，使用json格式来进行发送.</desc>
</param>
</request>
<response>
<param>
<name>issuccess</name>
<type>Boolean</type>
<level>Basic</level>
<desc>issuccess</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.user.get</name>
<desc>来往公共平台基本用户信息获取api</desc>
<request>
<param>
<name>openid</name>
<type>String</type>
<required>required</required>
<desc>openid</desc>
</param>
</request>
<response>
<param>
<name>user</name>
<type>LaiwangUser</type>
<level>Object</level>
<desc>来往用户信息</desc>
</param>
</response>
</api>
<api>
<name>alibaba.laiwang.user.list.get</name>
<desc>来往公共平台公众账号关注者列表</desc>
<request>
<param>
<name>next_openid</name>
<type>String</type>
<required>optional</required>
<desc>第一个拉取的OPENID，不填默认从头开始拉取</desc>
</param>
</request>
<response>
<param>
<name>users</name>
<type>LaiwangUsers</type>
<level>Object</level>
<desc>关注者列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.brandservice.fanscount.query</name>
<desc>查询品牌站站长的粉丝个数</desc>
<request>
<param>
<name>site_owner_id</name>
<type>Number</type>
<required>required</required>
<desc>站长用户id</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>Number</type>
<level>Basic</level>
<desc>返回粉丝个数</desc>
</param>
</response>
</api>
<api>
<name>taobao.brandservice.isfan.query</name>
<desc>查询用户是否是站点粉丝</desc>
<request>
<param>
<name>site_owner_id</name>
<type>Number</type>
<required>required</required>
<desc>站长用户id</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>用户nick</desc>
</param>
</request>
<response>
<param>
<name>value</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回相应的数值</desc>
</param>
</response>
</api>
</apis>
</metadata>
